{"ast":null,"code":"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { sha3Raw } from 'web3-utils';\nimport { AbiError } from 'web3-errors';\nimport { jsonInterfaceMethodToString, isAbiErrorFragment } from '../utils.js';\n/**\n * Encodes the error name to its ABI signature, which are the sha3 hash of the error name including input types.\n */\n\nexport const encodeErrorSignature = functionName => {\n  if (typeof functionName !== 'string' && !isAbiErrorFragment(functionName)) {\n    throw new AbiError('Invalid parameter value in encodeErrorSignature');\n  }\n\n  let name;\n\n  if (functionName && (typeof functionName === 'function' || typeof functionName === 'object')) {\n    name = jsonInterfaceMethodToString(functionName);\n  } else {\n    name = functionName;\n  }\n\n  return sha3Raw(name);\n};","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAASA,OAAT,QAAwB,YAAxB;AACA,SAASC,QAAT,QAAyB,aAAzB;AAEA,SAASC,2BAAT,EAAsCC,kBAAtC,QAAgE,aAAhE;AAEA;;;;AAGA,OAAO,MAAMC,oBAAoB,GAAIC,YAAD,IAAoD;EACvF,IAAI,OAAOA,YAAP,KAAwB,QAAxB,IAAoC,CAACF,kBAAkB,CAACE,YAAD,CAA3D,EAA2E;IAC1E,MAAM,IAAIJ,QAAJ,CAAa,iDAAb,CAAN;EACA;;EAED,IAAIK,IAAJ;;EAEA,IAAID,YAAY,KAAK,OAAOA,YAAP,KAAwB,UAAxB,IAAsC,OAAOA,YAAP,KAAwB,QAAnE,CAAhB,EAA8F;IAC7FC,IAAI,GAAGJ,2BAA2B,CAACG,YAAD,CAAlC;EACA,CAFD,MAEO;IACNC,IAAI,GAAGD,YAAP;EACA;;EAED,OAAOL,OAAO,CAACM,IAAD,CAAd;AACA,CAdM","names":["sha3Raw","AbiError","jsonInterfaceMethodToString","isAbiErrorFragment","encodeErrorSignature","functionName","name"],"sources":["/home/rupam/Desktop/Faucet-React/node_modules/web3-eth-abi/src/api/errors_api.ts"],"sourcesContent":["ï»¿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { sha3Raw } from 'web3-utils';\nimport { AbiError } from 'web3-errors';\nimport { AbiErrorFragment } from 'web3-types';\nimport { jsonInterfaceMethodToString, isAbiErrorFragment } from '../utils.js';\n\n/**\n * Encodes the error name to its ABI signature, which are the sha3 hash of the error name including input types.\n */\nexport const encodeErrorSignature = (functionName: string | AbiErrorFragment): string => {\n\tif (typeof functionName !== 'string' && !isAbiErrorFragment(functionName)) {\n\t\tthrow new AbiError('Invalid parameter value in encodeErrorSignature');\n\t}\n\n\tlet name: string;\n\n\tif (functionName && (typeof functionName === 'function' || typeof functionName === 'object')) {\n\t\tname = jsonInterfaceMethodToString(functionName);\n\t} else {\n\t\tname = functionName;\n\t}\n\n\treturn sha3Raw(name);\n};\n"]},"metadata":{},"sourceType":"module"}