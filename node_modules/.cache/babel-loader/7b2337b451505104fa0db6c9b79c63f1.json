{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Web3Validator = void 0;\n\nconst validator_js_1 = require(\"./validator.js\");\n\nconst utils_js_1 = require(\"./utils.js\");\n\nconst errors_js_1 = require(\"./errors.js\");\n\nclass Web3Validator {\n  constructor() {\n    this._validator = validator_js_1.Validator.factory();\n  }\n\n  validateJSONSchema(schema, data, options) {\n    return this._validator.validate(schema, data, options);\n  }\n\n  validate(schema, data) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n      silent: false\n    };\n\n    var _a, _b;\n\n    const jsonSchema = (0, utils_js_1.ethAbiToJsonSchema)(schema);\n\n    if (Array.isArray(jsonSchema.items) && ((_a = jsonSchema.items) === null || _a === void 0 ? void 0 : _a.length) === 0 && data.length === 0) {\n      return undefined;\n    }\n\n    if (Array.isArray(jsonSchema.items) && ((_b = jsonSchema.items) === null || _b === void 0 ? void 0 : _b.length) === 0 && data.length !== 0) {\n      throw new errors_js_1.Web3ValidatorError([{\n        instancePath: '/0',\n        schemaPath: '/',\n        keyword: 'required',\n        message: 'empty schema against data can not be validated',\n        params: data\n      }]);\n    }\n\n    return this._validator.validate(jsonSchema, data, options);\n  }\n\n}\n\nexports.Web3Validator = Web3Validator;","map":{"version":3,"mappings":";;;;;;;AAkBA;;AACA;;AAEA;;AAEA,MAAaA,aAAb,CAA0B;EAEzBC;IACC,KAAKC,UAAL,GAAkBC,yBAAUC,OAAV,EAAlB;EACA;;EACMC,kBAAkB,CACxBC,MADwB,EAExBC,IAFwB,EAGxBC,OAHwB,EAGO;IAE/B,OAAO,KAAKN,UAAL,CAAgBO,QAAhB,CAAyBH,MAAzB,EAAiCC,IAAjC,EAA+CC,OAA/C,CAAP;EACA;;EACMC,QAAQ,CACdH,MADc,EAEdC,IAFc,EAGoC;IAAA,IAAlDC,OAAkD,uEAAjB;MAAEE,MAAM,EAAE;IAAV,CAAiB;;;;IAElD,MAAMC,UAAU,GAAG,mCAAmBL,MAAnB,CAAnB;;IACA,IACCM,KAAK,CAACC,OAAN,CAAcF,UAAU,CAACG,KAAzB,KACA,iBAAU,CAACA,KAAX,MAAgB,IAAhB,IAAgBC,aAAhB,GAAgB,MAAhB,GAAgBA,GAAEC,MAAlB,MAA6B,CAD7B,IAEAT,IAAI,CAACS,MAAL,KAAgB,CAHjB,EAIE;MACD,OAAOC,SAAP;IACA;;IAED,IACCL,KAAK,CAACC,OAAN,CAAcF,UAAU,CAACG,KAAzB,KACA,iBAAU,CAACA,KAAX,MAAgB,IAAhB,IAAgBI,aAAhB,GAAgB,MAAhB,GAAgBA,GAAEF,MAAlB,MAA6B,CAD7B,IAEAT,IAAI,CAACS,MAAL,KAAgB,CAHjB,EAIE;MACD,MAAM,IAAIG,8BAAJ,CAAuB,CAC5B;QACCC,YAAY,EAAE,IADf;QAECC,UAAU,EAAE,GAFb;QAGCC,OAAO,EAAE,UAHV;QAICC,OAAO,EAAE,gDAJV;QAKCC,MAAM,EAAEjB;MALT,CAD4B,CAAvB,CAAN;IASA;;IAED,OAAO,KAAKL,UAAL,CAAgBO,QAAhB,CAAyBE,UAAzB,EAAqCJ,IAArC,EAAmDC,OAAnD,CAAP;EACA;;AA3CwB;;AAA1BiB","names":["Web3Validator","constructor","_validator","validator_js_1","factory","validateJSONSchema","schema","data","options","validate","silent","jsonSchema","Array","isArray","items","_a","length","undefined","_b","errors_js_1","instancePath","schemaPath","keyword","message","params","exports"],"sources":["/home/rupam/Desktop/Faucet-React/node_modules/web3-validator/src/web3_validator.ts"],"sourcesContent":["ï»¿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { Web3ValidationErrorObject } from 'web3-types';\n\nimport { Validator } from './validator.js';\nimport { ethAbiToJsonSchema } from './utils.js';\nimport { Json, ValidationSchemaInput, Web3ValidationOptions } from './types.js';\nimport { Web3ValidatorError } from './errors.js';\n\nexport class Web3Validator {\n\tprivate readonly _validator: Validator;\n\tpublic constructor() {\n\t\tthis._validator = Validator.factory();\n\t}\n\tpublic validateJSONSchema(\n\t\tschema: object,\n\t\tdata: object,\n\t\toptions?: Web3ValidationOptions,\n\t): Web3ValidationErrorObject[] | undefined {\n\t\treturn this._validator.validate(schema, data as Json, options);\n\t}\n\tpublic validate(\n\t\tschema: ValidationSchemaInput,\n\t\tdata: ReadonlyArray<unknown>,\n\t\toptions: Web3ValidationOptions = { silent: false },\n\t): Web3ValidationErrorObject[] | undefined {\n\t\tconst jsonSchema = ethAbiToJsonSchema(schema);\n\t\tif (\n\t\t\tArray.isArray(jsonSchema.items) &&\n\t\t\tjsonSchema.items?.length === 0 &&\n\t\t\tdata.length === 0\n\t\t) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (\n\t\t\tArray.isArray(jsonSchema.items) &&\n\t\t\tjsonSchema.items?.length === 0 &&\n\t\t\tdata.length !== 0\n\t\t) {\n\t\t\tthrow new Web3ValidatorError([\n\t\t\t\t{\n\t\t\t\t\tinstancePath: '/0',\n\t\t\t\t\tschemaPath: '/',\n\t\t\t\t\tkeyword: 'required',\n\t\t\t\t\tmessage: 'empty schema against data can not be validated',\n\t\t\t\t\tparams: data,\n\t\t\t\t},\n\t\t\t]);\n\t\t}\n\n\t\treturn this._validator.validate(jsonSchema, data as Json, options);\n\t}\n}\n"]},"metadata":{},"sourceType":"script"}