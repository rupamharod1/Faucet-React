{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Validator = void 0;\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nconst web3_errors_1 = require(\"web3-errors\");\n\nconst zod_1 = require(\"zod\");\n\nconst errors_js_1 = require(\"./errors.js\");\n\nconst formats_js_1 = __importDefault(require(\"./formats.js\"));\n\nconst convertToZod = schema => {\n  if ((!(schema === null || schema === void 0 ? void 0 : schema.type) || (schema === null || schema === void 0 ? void 0 : schema.type) === 'object') && (schema === null || schema === void 0 ? void 0 : schema.properties)) {\n    const obj = {};\n\n    for (const name of Object.keys(schema.properties)) {\n      const zItem = convertToZod(schema.properties[name]);\n\n      if (zItem) {\n        obj[name] = zItem;\n      }\n    }\n\n    if (Array.isArray(schema.required)) {\n      return zod_1.z.object(obj).partial().required(schema.required.reduce((acc, v) => Object.assign(Object.assign({}, acc), {\n        [v]: true\n      }), {}));\n    }\n\n    return zod_1.z.object(obj).partial();\n  }\n\n  if ((schema === null || schema === void 0 ? void 0 : schema.type) === 'array' && (schema === null || schema === void 0 ? void 0 : schema.items)) {\n    if (Array.isArray(schema.items) && schema.items.length > 0) {\n      const arr = [];\n\n      for (const item of schema.items) {\n        const zItem = convertToZod(item);\n\n        if (zItem) {\n          arr.push(zItem);\n        }\n      }\n\n      return zod_1.z.tuple(arr);\n    }\n\n    return zod_1.z.array(convertToZod(schema.items));\n  }\n\n  if (schema.oneOf && Array.isArray(schema.oneOf)) {\n    return zod_1.z.union(schema.oneOf.map(oneOfSchema => convertToZod(oneOfSchema)));\n  }\n\n  if (schema === null || schema === void 0 ? void 0 : schema.format) {\n    if (!formats_js_1.default[schema.format]) {\n      throw new web3_errors_1.SchemaFormatError(schema.format);\n    }\n\n    return zod_1.z.any().refine(formats_js_1.default[schema.format], value => ({\n      params: {\n        value,\n        format: schema.format\n      }\n    }));\n  }\n\n  if ((schema === null || schema === void 0 ? void 0 : schema.type) && (schema === null || schema === void 0 ? void 0 : schema.type) !== 'object' && typeof zod_1.z[String(schema.type)] === 'function') {\n    return zod_1.z[String(schema.type)]();\n  }\n\n  return zod_1.z.object({\n    data: zod_1.z.any()\n  }).partial();\n};\n\nclass Validator {\n  // eslint-disable-next-line no-useless-constructor, @typescript-eslint/no-empty-function\n  static factory() {\n    if (!Validator.validatorInstance) {\n      Validator.validatorInstance = new Validator();\n    }\n\n    return Validator.validatorInstance;\n  }\n\n  validate(schema, data, options) {\n    var _a, _b;\n\n    const zod = convertToZod(schema);\n    const result = zod.safeParse(data);\n\n    if (!result.success) {\n      const errors = this.convertErrors((_b = (_a = result.error) === null || _a === void 0 ? void 0 : _a.issues) !== null && _b !== void 0 ? _b : []);\n\n      if (errors) {\n        if (options === null || options === void 0 ? void 0 : options.silent) {\n          return errors;\n        }\n\n        throw new errors_js_1.Web3ValidatorError(errors);\n      }\n    }\n\n    return undefined;\n  } // eslint-disable-next-line class-methods-use-this\n\n\n  convertErrors(errors) {\n    if (errors && Array.isArray(errors) && errors.length > 0) {\n      return errors.map(error => {\n        var _a;\n\n        let message;\n        let keyword;\n        let params;\n        let schemaPath;\n        schemaPath = error.path.join('/');\n        const field = String(error.path[error.path.length - 1]);\n        const instancePath = error.path.join('/');\n\n        if (error.code === zod_1.ZodIssueCode.too_big) {\n          keyword = 'maxItems';\n          schemaPath = `${instancePath}/maxItems`;\n          params = {\n            limit: error.maximum\n          };\n          message = `must NOT have more than ${error.maximum} items`;\n        } else if (error.code === zod_1.ZodIssueCode.too_small) {\n          keyword = 'minItems';\n          schemaPath = `${instancePath}/minItems`;\n          params = {\n            limit: error.minimum\n          };\n          message = `must NOT have fewer than ${error.minimum} items`;\n        } else if (error.code === zod_1.ZodIssueCode.custom) {\n          const {\n            value,\n            format\n          } = (_a = error.params) !== null && _a !== void 0 ? _a : {};\n\n          if (typeof value === 'undefined') {\n            message = `value at \"/${schemaPath}\" is required`;\n          } else {\n            message = `value \"${// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n            typeof value === 'object' ? JSON.stringify(value) : value}\" at \"/${schemaPath}\" must pass \"${format}\" validation`;\n          }\n\n          params = {\n            value\n          };\n        }\n\n        return {\n          keyword: keyword !== null && keyword !== void 0 ? keyword : field,\n          instancePath: instancePath ? `/${instancePath}` : '',\n          schemaPath: schemaPath ? `#${schemaPath}` : '#',\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n          params: params !== null && params !== void 0 ? params : {\n            value: error.message\n          },\n          message: message !== null && message !== void 0 ? message : error.message\n        };\n      });\n    }\n\n    return undefined;\n  }\n\n}\n\nexports.Validator = Validator;","map":{"version":3,"mappings":"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","names":["convertToZod","schema","type","properties","obj","name","Object","keys","zItem","Array","isArray","required","zod_1","object","partial","reduce","acc","v","items","length","arr","item","push","tuple","array","oneOf","union","map","oneOfSchema","format","formats_js_1","web3_errors_1","any","refine","value","params","String","data","Validator","factory","validatorInstance","validate","options","zod","result","safeParse","success","errors","convertErrors","error","_a","issues","_b","silent","errors_js_1","undefined","message","keyword","schemaPath","path","join","field","instancePath","code","too_big","limit","maximum","too_small","minimum","custom","JSON","stringify","exports"],"sources":["/home/rupam/Desktop/Faucet-React/node_modules/web3-validator/src/validator.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { SchemaFormatError } from 'web3-errors';\nimport { Web3ValidationErrorObject } from 'web3-types';\n\nimport { z, ZodType, ZodIssue, ZodIssueCode, ZodTypeAny } from 'zod';\n\nimport { RawCreateParams } from 'zod/lib/types';\nimport { Web3ValidatorError } from './errors.js';\nimport { Json, JsonSchema } from './types.js';\nimport formats from './formats.js';\n\nconst convertToZod = (schema: JsonSchema): ZodType => {\n\tif ((!schema?.type || schema?.type === 'object') && schema?.properties) {\n\t\tconst obj: { [key: string]: ZodType } = {};\n\t\tfor (const name of Object.keys(schema.properties)) {\n\t\t\tconst zItem = convertToZod(schema.properties[name]);\n\t\t\tif (zItem) {\n\t\t\t\tobj[name] = zItem;\n\t\t\t}\n\t\t}\n\n\t\tif (Array.isArray(schema.required)) {\n\t\t\treturn z\n\t\t\t\t.object(obj)\n\t\t\t\t.partial()\n\t\t\t\t.required(schema.required.reduce((acc, v: string) => ({ ...acc, [v]: true }), {}));\n\t\t}\n\t\treturn z.object(obj).partial();\n\t}\n\n\tif (schema?.type === 'array' && schema?.items) {\n\t\tif (Array.isArray(schema.items) && schema.items.length > 0) {\n\t\t\tconst arr: Partial<[ZodTypeAny, ...ZodTypeAny[]]> = [];\n\t\t\tfor (const item of schema.items) {\n\t\t\t\tconst zItem = convertToZod(item);\n\t\t\t\tif (zItem) {\n\t\t\t\t\tarr.push(zItem);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn z.tuple(arr as [ZodTypeAny, ...ZodTypeAny[]]);\n\t\t}\n\t\treturn z.array(convertToZod(schema.items as JsonSchema));\n\t}\n\n\tif (schema.oneOf && Array.isArray(schema.oneOf)) {\n\t\treturn z.union(\n\t\t\tschema.oneOf.map(oneOfSchema => convertToZod(oneOfSchema)) as [\n\t\t\t\tZodTypeAny,\n\t\t\t\tZodTypeAny,\n\t\t\t\t...ZodTypeAny[],\n\t\t\t],\n\t\t);\n\t}\n\n\tif (schema?.format) {\n\t\tif (!formats[schema.format]) {\n\t\t\tthrow new SchemaFormatError(schema.format);\n\t\t}\n\n\t\treturn z.any().refine(formats[schema.format], (value: unknown) => ({\n\t\t\tparams: { value, format: schema.format },\n\t\t}));\n\t}\n\n\tif (\n\t\tschema?.type &&\n\t\tschema?.type !== 'object' &&\n\t\ttypeof (z as unknown as { [key: string]: (params?: RawCreateParams) => ZodType })[\n\t\t\tString(schema.type)\n\t\t] === 'function'\n\t) {\n\t\treturn (z as unknown as { [key: string]: (params?: RawCreateParams) => ZodType })[\n\t\t\tString(schema.type)\n\t\t]();\n\t}\n\treturn z.object({ data: z.any() }).partial();\n};\n\nexport class Validator {\n\t// eslint-disable-next-line no-use-before-define\n\tprivate static validatorInstance?: Validator;\n\n\t// eslint-disable-next-line no-useless-constructor, @typescript-eslint/no-empty-function\n\tpublic static factory(): Validator {\n\t\tif (!Validator.validatorInstance) {\n\t\t\tValidator.validatorInstance = new Validator();\n\t\t}\n\t\treturn Validator.validatorInstance;\n\t}\n\n\tpublic validate(schema: JsonSchema, data: Json, options?: { silent?: boolean }) {\n\t\tconst zod = convertToZod(schema);\n\t\tconst result = zod.safeParse(data);\n\t\tif (!result.success) {\n\t\t\tconst errors = this.convertErrors(result.error?.issues ?? []);\n\t\t\tif (errors) {\n\t\t\t\tif (options?.silent) {\n\t\t\t\t\treturn errors;\n\t\t\t\t}\n\t\t\t\tthrow new Web3ValidatorError(errors);\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\t// eslint-disable-next-line class-methods-use-this\n\tprivate convertErrors(errors: ZodIssue[] | undefined): Web3ValidationErrorObject[] | undefined {\n\t\tif (errors && Array.isArray(errors) && errors.length > 0) {\n\t\t\treturn errors.map((error: ZodIssue) => {\n\t\t\t\tlet message;\n\t\t\t\tlet keyword;\n\t\t\t\tlet params;\n\t\t\t\tlet schemaPath;\n\n\t\t\t\tschemaPath = error.path.join('/');\n\n\t\t\t\tconst field = String(error.path[error.path.length - 1]);\n\t\t\t\tconst instancePath = error.path.join('/');\n\t\t\t\tif (error.code === ZodIssueCode.too_big) {\n\t\t\t\t\tkeyword = 'maxItems';\n\t\t\t\t\tschemaPath = `${instancePath}/maxItems`;\n\t\t\t\t\tparams = { limit: error.maximum };\n\t\t\t\t\tmessage = `must NOT have more than ${error.maximum} items`;\n\t\t\t\t} else if (error.code === ZodIssueCode.too_small) {\n\t\t\t\t\tkeyword = 'minItems';\n\t\t\t\t\tschemaPath = `${instancePath}/minItems`;\n\t\t\t\t\tparams = { limit: error.minimum };\n\t\t\t\t\tmessage = `must NOT have fewer than ${error.minimum} items`;\n\t\t\t\t} else if (error.code === ZodIssueCode.custom) {\n\t\t\t\t\tconst { value, format } = (error.params ?? {}) as {\n\t\t\t\t\t\tvalue: unknown;\n\t\t\t\t\t\tformat: string;\n\t\t\t\t\t};\n\n\t\t\t\t\tif (typeof value === 'undefined') {\n\t\t\t\t\t\tmessage = `value at \"/${schemaPath}\" is required`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmessage = `value \"${\n\t\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t\t\t\t\ttypeof value === 'object' ? JSON.stringify(value) : value\n\t\t\t\t\t\t}\" at \"/${schemaPath}\" must pass \"${format}\" validation`;\n\t\t\t\t\t}\n\n\t\t\t\t\tparams = { value };\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tkeyword: keyword ?? field,\n\t\t\t\t\tinstancePath: instancePath ? `/${instancePath}` : '',\n\t\t\t\t\tschemaPath: schemaPath ? `#${schemaPath}` : '#',\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n\t\t\t\t\tparams: params ?? { value: error.message },\n\t\t\t\t\tmessage: message ?? error.message,\n\t\t\t\t} as Web3ValidationErrorObject;\n\t\t\t});\n\t\t}\n\t\treturn undefined;\n\t}\n}\n"]},"metadata":{},"sourceType":"script"}