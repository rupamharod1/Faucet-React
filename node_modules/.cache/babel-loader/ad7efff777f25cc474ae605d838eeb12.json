{"ast":null,"code":"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { isAddress } from './address.js';\nimport { isBlockNumberOrTag } from './block.js';\nimport { isNullish } from './object.js';\nimport { isTopic } from './topic.js';\n/**\n * First we check if all properties in the provided value are expected,\n * then because all Filter properties are optional, we check if the expected properties\n * are defined. If defined and they're not the expected type, we immediately return false,\n * otherwise we return true after all checks pass.\n */\n\nexport const isFilterObject = value => {\n  const expectedFilterProperties = ['fromBlock', 'toBlock', 'address', 'topics', 'blockHash'];\n  if (isNullish(value) || typeof value !== 'object') return false;\n  if (!Object.keys(value).every(property => expectedFilterProperties.includes(property))) return false;\n  if (!isNullish(value.fromBlock) && !isBlockNumberOrTag(value.fromBlock) || !isNullish(value.toBlock) && !isBlockNumberOrTag(value.toBlock)) return false;\n\n  if (!isNullish(value.address)) {\n    if (Array.isArray(value.address)) {\n      if (!value.address.every(address => isAddress(address))) return false;\n    } else if (!isAddress(value.address)) return false;\n  }\n\n  if (!isNullish(value.topics)) {\n    if (!value.topics.every(topic => {\n      if (isNullish(topic)) return true;\n\n      if (Array.isArray(topic)) {\n        return topic.every(nestedTopic => isTopic(nestedTopic));\n      }\n\n      if (isTopic(topic)) return true;\n      return false;\n    })) return false;\n  }\n\n  return true;\n};","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAkBA,SAASA,SAAT,QAA0B,cAA1B;AACA,SAASC,kBAAT,QAAmC,YAAnC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,OAAT,QAAwB,YAAxB;AAEA;;;;;;;AAMA,OAAO,MAAMC,cAAc,GAAIC,KAAD,IAAkB;EAC/C,MAAMC,wBAAwB,GAAqB,CAClD,WADkD,EAElD,SAFkD,EAGlD,SAHkD,EAIlD,QAJkD,EAKlD,WALkD,CAAnD;EAOA,IAAIJ,SAAS,CAACG,KAAD,CAAT,IAAoB,OAAOA,KAAP,KAAiB,QAAzC,EAAmD,OAAO,KAAP;EAEnD,IACC,CAACE,MAAM,CAACC,IAAP,CAAYH,KAAZ,EAAmBI,KAAnB,CAAyBC,QAAQ,IACjCJ,wBAAwB,CAACK,QAAzB,CAAkCD,QAAlC,CADA,CADF,EAKC,OAAO,KAAP;EAED,IACE,CAACR,SAAS,CAACG,KAAK,CAACO,SAAP,CAAV,IAA+B,CAACX,kBAAkB,CAACI,KAAK,CAACO,SAAP,CAAnD,IACC,CAACV,SAAS,CAACG,KAAK,CAACQ,OAAP,CAAV,IAA6B,CAACZ,kBAAkB,CAACI,KAAK,CAACQ,OAAP,CAFlD,EAIC,OAAO,KAAP;;EAED,IAAI,CAACX,SAAS,CAACG,KAAK,CAACS,OAAP,CAAd,EAA+B;IAC9B,IAAIC,KAAK,CAACC,OAAN,CAAcX,KAAK,CAACS,OAApB,CAAJ,EAAkC;MACjC,IAAI,CAACT,KAAK,CAACS,OAAN,CAAcL,KAAd,CAAoBK,OAAO,IAAId,SAAS,CAACc,OAAD,CAAxC,CAAL,EAAyD,OAAO,KAAP;IACzD,CAFD,MAEO,IAAI,CAACd,SAAS,CAACK,KAAK,CAACS,OAAP,CAAd,EAA+B,OAAO,KAAP;EACtC;;EAED,IAAI,CAACZ,SAAS,CAACG,KAAK,CAACY,MAAP,CAAd,EAA8B;IAC7B,IACC,CAACZ,KAAK,CAACY,MAAN,CAAaR,KAAb,CAAmBS,KAAK,IAAG;MAC3B,IAAIhB,SAAS,CAACgB,KAAD,CAAb,EAAsB,OAAO,IAAP;;MAEtB,IAAIH,KAAK,CAACC,OAAN,CAAcE,KAAd,CAAJ,EAA0B;QACzB,OAAOA,KAAK,CAACT,KAAN,CAAYU,WAAW,IAAIhB,OAAO,CAACgB,WAAD,CAAlC,CAAP;MACA;;MAED,IAAIhB,OAAO,CAACe,KAAD,CAAX,EAAoB,OAAO,IAAP;MAEpB,OAAO,KAAP;IACA,CAVA,CADF,EAaC,OAAO,KAAP;EACD;;EAED,OAAO,IAAP;AACA,CA/CM","names":["isAddress","isBlockNumberOrTag","isNullish","isTopic","isFilterObject","value","expectedFilterProperties","Object","keys","every","property","includes","fromBlock","toBlock","address","Array","isArray","topics","topic","nestedTopic"],"sources":["/home/rupam/Desktop/Faucet-React/node_modules/web3-validator/src/validation/filter.ts"],"sourcesContent":["ï»¿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { Filter } from 'web3-types';\nimport { isAddress } from './address.js';\nimport { isBlockNumberOrTag } from './block.js';\nimport { isNullish } from './object.js';\nimport { isTopic } from './topic.js';\n\n/**\n * First we check if all properties in the provided value are expected,\n * then because all Filter properties are optional, we check if the expected properties\n * are defined. If defined and they're not the expected type, we immediately return false,\n * otherwise we return true after all checks pass.\n */\nexport const isFilterObject = (value: Filter) => {\n\tconst expectedFilterProperties: (keyof Filter)[] = [\n\t\t'fromBlock',\n\t\t'toBlock',\n\t\t'address',\n\t\t'topics',\n\t\t'blockHash',\n\t];\n\tif (isNullish(value) || typeof value !== 'object') return false;\n\n\tif (\n\t\t!Object.keys(value).every(property =>\n\t\t\texpectedFilterProperties.includes(property as keyof Filter),\n\t\t)\n\t)\n\t\treturn false;\n\n\tif (\n\t\t(!isNullish(value.fromBlock) && !isBlockNumberOrTag(value.fromBlock)) ||\n\t\t(!isNullish(value.toBlock) && !isBlockNumberOrTag(value.toBlock))\n\t)\n\t\treturn false;\n\n\tif (!isNullish(value.address)) {\n\t\tif (Array.isArray(value.address)) {\n\t\t\tif (!value.address.every(address => isAddress(address))) return false;\n\t\t} else if (!isAddress(value.address)) return false;\n\t}\n\n\tif (!isNullish(value.topics)) {\n\t\tif (\n\t\t\t!value.topics.every(topic => {\n\t\t\t\tif (isNullish(topic)) return true;\n\n\t\t\t\tif (Array.isArray(topic)) {\n\t\t\t\t\treturn topic.every(nestedTopic => isTopic(nestedTopic));\n\t\t\t\t}\n\n\t\t\t\tif (isTopic(topic)) return true;\n\n\t\t\t\treturn false;\n\t\t\t})\n\t\t)\n\t\t\treturn false;\n\t}\n\n\treturn true;\n};\n"]},"metadata":{},"sourceType":"module"}