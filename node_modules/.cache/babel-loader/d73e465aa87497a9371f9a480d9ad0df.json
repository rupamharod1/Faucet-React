{"ast":null,"code":"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { AbiError } from 'web3-errors';\nimport { uint8ArrayConcat } from 'web3-utils'; // eslint-disable-next-line import/no-cycle\n\nimport { decodeParamFromAbiParameter, encodeParamFromAbiParameter } from '.';\nimport { encodeDynamicParams } from './utils.js';\nimport { isDynamic } from '../utils.js';\nimport { decodeNumber } from './number.js';\nexport function encodeTuple(param, input) {\n  var _a, _b, _c;\n\n  let dynamic = false;\n\n  if (!Array.isArray(input) && typeof input !== 'object') {\n    throw new AbiError('param must be either Array or Object', {\n      param,\n      input\n    });\n  }\n\n  const narrowedInput = input;\n  const encoded = [];\n\n  for (let i = 0; i < ((_b = (_a = param.components) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0); i += 1) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const paramComponent = param.components[i];\n    let result;\n\n    if (Array.isArray(narrowedInput)) {\n      if (i >= narrowedInput.length) {\n        throw new AbiError('input param length missmatch', {\n          param,\n          input\n        });\n      }\n\n      result = encodeParamFromAbiParameter(paramComponent, narrowedInput[i]);\n    } else {\n      const paramInput = narrowedInput[(_c = paramComponent.name) !== null && _c !== void 0 ? _c : '']; // eslint-disable-next-line no-null/no-null\n\n      if (paramInput === undefined || paramInput === null) {\n        throw new AbiError('missing input defined in abi', {\n          param,\n          input,\n          paramName: paramComponent.name\n        });\n      }\n\n      result = encodeParamFromAbiParameter(paramComponent, paramInput);\n    }\n\n    if (result.dynamic) {\n      dynamic = true;\n    }\n\n    encoded.push(result);\n  }\n\n  if (dynamic) {\n    return {\n      dynamic: true,\n      encoded: encodeDynamicParams(encoded)\n    };\n  }\n\n  return {\n    dynamic: false,\n    encoded: uint8ArrayConcat(...encoded.map(e => e.encoded))\n  };\n}\nexport function decodeTuple(param, bytes) {\n  const result = {\n    __length__: 0\n  }; // tracks how much static params consumed bytes\n\n  let consumed = 0;\n\n  if (!param.components) {\n    return {\n      result,\n      encoded: bytes,\n      consumed\n    };\n  } // track how much dynamic params consumed bytes\n\n\n  let dynamicConsumed = 0;\n\n  for (const [index, childParam] of param.components.entries()) {\n    let decodedResult;\n\n    if (isDynamic(childParam)) {\n      // if dynamic, we will have offset encoded\n      const offsetResult = decodeNumber({\n        type: 'uint32',\n        name: ''\n      }, bytes.subarray(consumed)); // offset counts from start of original byte sequence\n\n      decodedResult = decodeParamFromAbiParameter(childParam, bytes.subarray(Number(offsetResult.result)));\n      consumed += offsetResult.consumed;\n      dynamicConsumed += decodedResult.consumed;\n    } else {\n      // static param, just decode\n      decodedResult = decodeParamFromAbiParameter(childParam, bytes.subarray(consumed));\n      consumed += decodedResult.consumed;\n    }\n\n    result.__length__ += 1;\n    result[index] = decodedResult.result;\n\n    if (childParam.name && childParam.name !== '') {\n      result[childParam.name] = decodedResult.result;\n    }\n  }\n\n  return {\n    encoded: bytes.subarray(consumed + dynamicConsumed),\n    result,\n    consumed: consumed + dynamicConsumed\n  };\n}","map":{"version":3,"mappings":"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","names":["AbiError","uint8ArrayConcat","decodeParamFromAbiParameter","encodeParamFromAbiParameter","encodeDynamicParams","isDynamic","decodeNumber","encodeTuple","param","input","dynamic","Array","isArray","narrowedInput","encoded","i","components","_a","length","_b","paramComponent","result","paramInput","name","_c","undefined","paramName","push","map","e","decodeTuple","bytes","__length__","consumed","dynamicConsumed","index","childParam","entries","decodedResult","offsetResult","type","subarray","Number"],"sources":["/home/rupam/Desktop/Faucet-React/node_modules/web3-eth-abi/src/coders/base/tuple.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { AbiError } from 'web3-errors';\nimport { AbiParameter } from 'web3-types';\nimport { uint8ArrayConcat } from 'web3-utils';\nimport { DecoderResult, EncoderResult } from '../types.js';\n// eslint-disable-next-line import/no-cycle\nimport { decodeParamFromAbiParameter, encodeParamFromAbiParameter } from '.';\nimport { encodeDynamicParams } from './utils.js';\nimport { isDynamic } from '../utils.js';\nimport { decodeNumber } from './number.js';\n\nexport function encodeTuple(param: AbiParameter, input: unknown): EncoderResult {\n\tlet dynamic = false;\n\tif (!Array.isArray(input) && typeof input !== 'object') {\n\t\tthrow new AbiError('param must be either Array or Object', {\n\t\t\tparam,\n\t\t\tinput,\n\t\t});\n\t}\n\tconst narrowedInput = input as Array<unknown> | Record<string, unknown>;\n\tconst encoded: Array<EncoderResult> = [];\n\tfor (let i = 0; i < (param.components?.length ?? 0); i += 1) {\n\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\tconst paramComponent = param.components![i];\n\t\tlet result: EncoderResult;\n\t\tif (Array.isArray(narrowedInput)) {\n\t\t\tif (i >= narrowedInput.length) {\n\t\t\t\tthrow new AbiError('input param length missmatch', {\n\t\t\t\t\tparam,\n\t\t\t\t\tinput,\n\t\t\t\t});\n\t\t\t}\n\t\t\tresult = encodeParamFromAbiParameter(paramComponent, narrowedInput[i]);\n\t\t} else {\n\t\t\tconst paramInput = narrowedInput[paramComponent.name ?? ''];\n\t\t\t// eslint-disable-next-line no-null/no-null\n\t\t\tif (paramInput === undefined || paramInput === null) {\n\t\t\t\tthrow new AbiError('missing input defined in abi', {\n\t\t\t\t\tparam,\n\t\t\t\t\tinput,\n\t\t\t\t\tparamName: paramComponent.name,\n\t\t\t\t});\n\t\t\t}\n\t\t\tresult = encodeParamFromAbiParameter(paramComponent, paramInput);\n\t\t}\n\t\tif (result.dynamic) {\n\t\t\tdynamic = true;\n\t\t}\n\t\tencoded.push(result);\n\t}\n\n\tif (dynamic) {\n\t\treturn {\n\t\t\tdynamic: true,\n\t\t\tencoded: encodeDynamicParams(encoded),\n\t\t};\n\t}\n\treturn {\n\t\tdynamic: false,\n\t\tencoded: uint8ArrayConcat(...encoded.map(e => e.encoded)),\n\t};\n}\n\nexport function decodeTuple(\n\tparam: AbiParameter,\n\tbytes: Uint8Array,\n): DecoderResult<{ [key: string]: unknown; __length__: number }> {\n\tconst result: { [key: string]: unknown; __length__: number } = {\n\t\t__length__: 0,\n\t};\n\n\t// tracks how much static params consumed bytes\n\tlet consumed = 0;\n\n\tif (!param.components) {\n\t\treturn {\n\t\t\tresult,\n\t\t\tencoded: bytes,\n\t\t\tconsumed,\n\t\t};\n\t}\n\t// track how much dynamic params consumed bytes\n\tlet dynamicConsumed = 0;\n\tfor (const [index, childParam] of param.components.entries()) {\n\t\tlet decodedResult: DecoderResult;\n\t\tif (isDynamic(childParam)) {\n\t\t\t// if dynamic, we will have offset encoded\n\t\t\tconst offsetResult = decodeNumber(\n\t\t\t\t{ type: 'uint32', name: '' },\n\t\t\t\tbytes.subarray(consumed),\n\t\t\t);\n\t\t\t// offset counts from start of original byte sequence\n\t\t\tdecodedResult = decodeParamFromAbiParameter(\n\t\t\t\tchildParam,\n\t\t\t\tbytes.subarray(Number(offsetResult.result)),\n\t\t\t);\n\t\t\tconsumed += offsetResult.consumed;\n\t\t\tdynamicConsumed += decodedResult.consumed;\n\t\t} else {\n\t\t\t// static param, just decode\n\t\t\tdecodedResult = decodeParamFromAbiParameter(childParam, bytes.subarray(consumed));\n\t\t\tconsumed += decodedResult.consumed;\n\t\t}\n\t\tresult.__length__ += 1;\n\t\tresult[index] = decodedResult.result;\n\t\tif (childParam.name && childParam.name !== '') {\n\t\t\tresult[childParam.name] = decodedResult.result;\n\t\t}\n\t}\n\treturn {\n\t\tencoded: bytes.subarray(consumed + dynamicConsumed),\n\t\tresult,\n\t\tconsumed: consumed + dynamicConsumed,\n\t};\n}\n"]},"metadata":{},"sourceType":"module"}