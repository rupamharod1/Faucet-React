{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.accountSchema = exports.storageProofSchema = exports.feeHistorySchema = exports.SignatureObjectSchema = exports.transactionReceiptSchema = exports.syncSchema = exports.logSchema = exports.blockHeaderSchema = exports.withdrawalsSchema = exports.blockSchema = exports.transactionInfoSchema = exports.transactionSchema = exports.customChainSchema = exports.hardforkSchema = exports.chainSchema = exports.accessListResultSchema = exports.accessListSchema = exports.accessListItemSchema = void 0;\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nexports.accessListItemSchema = {\n  type: 'object',\n  properties: {\n    address: {\n      format: 'address'\n    },\n    storageKeys: {\n      type: 'array',\n      items: {\n        format: 'bytes32'\n      }\n    }\n  }\n};\nexports.accessListSchema = {\n  type: 'array',\n  items: Object.assign({}, exports.accessListItemSchema)\n};\nexports.accessListResultSchema = {\n  type: 'object',\n  properties: {\n    accessList: Object.assign({}, exports.accessListSchema),\n    gasUsed: {\n      type: 'string'\n    }\n  }\n};\nexports.chainSchema = {\n  type: 'string',\n  enum: ['goerli', 'kovan', 'mainnet', 'rinkeby', 'ropsten', 'sepolia']\n};\nexports.hardforkSchema = {\n  type: 'string',\n  enum: ['arrowGlacier', 'berlin', 'byzantium', 'chainstart', 'constantinople', 'dao', 'homestead', 'istanbul', 'london', 'merge', 'muirGlacier', 'petersburg', 'shanghai', 'spuriousDragon', 'tangerineWhistle']\n};\nexports.customChainSchema = {\n  type: 'object',\n  properties: {\n    name: {\n      format: 'string'\n    },\n    networkId: {\n      format: 'uint'\n    },\n    chainId: {\n      format: 'uint'\n    }\n  }\n};\nexports.transactionSchema = {\n  type: 'object',\n  properties: {\n    from: {\n      format: 'address'\n    },\n    to: {\n      oneOf: [{\n        format: 'address'\n      }, {\n        type: 'null'\n      }]\n    },\n    value: {\n      format: 'uint'\n    },\n    gas: {\n      format: 'uint'\n    },\n    gasPrice: {\n      format: 'uint'\n    },\n    effectiveGasPrice: {\n      format: 'uint'\n    },\n    type: {\n      format: 'uint'\n    },\n    maxFeePerGas: {\n      format: 'uint'\n    },\n    maxPriorityFeePerGas: {\n      format: 'uint'\n    },\n    accessList: Object.assign({}, exports.accessListSchema),\n    data: {\n      format: 'bytes'\n    },\n    input: {\n      format: 'bytes'\n    },\n    nonce: {\n      format: 'uint'\n    },\n    chain: Object.assign({}, exports.chainSchema),\n    hardfork: Object.assign({}, exports.hardforkSchema),\n    chainId: {\n      format: 'uint'\n    },\n    networkId: {\n      format: 'uint'\n    },\n    common: {\n      type: 'object',\n      properties: {\n        customChain: Object.assign({}, exports.customChainSchema),\n        baseChain: Object.assign({}, exports.chainSchema),\n        hardfork: Object.assign({}, exports.hardforkSchema)\n      }\n    },\n    gasLimit: {\n      format: 'uint'\n    },\n    v: {\n      format: 'uint'\n    },\n    r: {\n      format: 'bytes32'\n    },\n    s: {\n      format: 'bytes32'\n    }\n  }\n};\nexports.transactionInfoSchema = {\n  type: 'object',\n  properties: Object.assign(Object.assign({}, exports.transactionSchema.properties), {\n    blockHash: {\n      format: 'bytes32'\n    },\n    blockNumber: {\n      format: 'uint'\n    },\n    hash: {\n      format: 'bytes32'\n    },\n    transactionIndex: {\n      format: 'uint'\n    },\n    from: {\n      format: 'address'\n    },\n    to: {\n      oneOf: [{\n        format: 'address'\n      }, {\n        type: 'null'\n      }]\n    },\n    value: {\n      format: 'uint'\n    },\n    gas: {\n      format: 'uint'\n    },\n    gasPrice: {\n      format: 'uint'\n    },\n    effectiveGasPrice: {\n      format: 'uint'\n    },\n    type: {\n      format: 'uint'\n    },\n    maxFeePerGas: {\n      format: 'uint'\n    },\n    maxPriorityFeePerGas: {\n      format: 'uint'\n    },\n    accessList: Object.assign({}, exports.accessListSchema),\n    data: {\n      format: 'bytes'\n    },\n    input: {\n      format: 'bytes'\n    },\n    nonce: {\n      format: 'uint'\n    },\n    gasLimit: {\n      format: 'uint'\n    },\n    v: {\n      format: 'uint'\n    },\n    r: {\n      format: 'bytes32'\n    },\n    s: {\n      format: 'bytes32'\n    }\n  })\n};\nexports.blockSchema = {\n  type: 'object',\n  properties: {\n    parentHash: {\n      format: 'bytes32'\n    },\n    sha3Uncles: {\n      format: 'bytes32'\n    },\n    miner: {\n      format: 'bytes'\n    },\n    stateRoot: {\n      format: 'bytes32'\n    },\n    transactionsRoot: {\n      format: 'bytes32'\n    },\n    receiptsRoot: {\n      format: 'bytes32'\n    },\n    logsBloom: {\n      format: 'bytes256'\n    },\n    difficulty: {\n      format: 'uint'\n    },\n    number: {\n      format: 'uint'\n    },\n    gasLimit: {\n      format: 'uint'\n    },\n    gasUsed: {\n      format: 'uint'\n    },\n    timestamp: {\n      format: 'uint'\n    },\n    extraData: {\n      format: 'bytes'\n    },\n    mixHash: {\n      format: 'bytes32'\n    },\n    nonce: {\n      format: 'uint'\n    },\n    totalDifficulty: {\n      format: 'uint'\n    },\n    baseFeePerGas: {\n      format: 'uint'\n    },\n    size: {\n      format: 'uint'\n    },\n    transactions: {\n      oneOf: [{\n        type: 'array',\n        items: Object.assign({}, exports.transactionInfoSchema)\n      }, {\n        type: 'array',\n        items: {\n          format: 'bytes32'\n        }\n      }]\n    },\n    uncles: {\n      type: 'array',\n      items: {\n        format: 'bytes32'\n      }\n    },\n    hash: {\n      format: 'bytes32'\n    }\n  }\n};\nexports.withdrawalsSchema = {\n  type: 'object',\n  properties: {\n    index: {\n      format: 'uint'\n    },\n    validatorIndex: {\n      format: 'uint'\n    },\n    address: {\n      format: 'address'\n    },\n    amount: {\n      format: 'uint'\n    }\n  }\n};\nexports.blockHeaderSchema = {\n  type: 'object',\n  properties: {\n    author: {\n      format: 'bytes32'\n    },\n    hash: {\n      format: 'bytes32'\n    },\n    parentHash: {\n      format: 'bytes32'\n    },\n    receiptsRoot: {\n      format: 'bytes32'\n    },\n    miner: {\n      format: 'bytes'\n    },\n    stateRoot: {\n      format: 'bytes32'\n    },\n    transactionsRoot: {\n      format: 'bytes32'\n    },\n    withdrawalsRoot: {\n      format: 'bytes32'\n    },\n    logsBloom: {\n      format: 'bytes256'\n    },\n    difficulty: {\n      format: 'uint'\n    },\n    totalDifficulty: {\n      format: 'uint'\n    },\n    number: {\n      format: 'uint'\n    },\n    gasLimit: {\n      format: 'uint'\n    },\n    gasUsed: {\n      format: 'uint'\n    },\n    timestamp: {\n      format: 'uint'\n    },\n    extraData: {\n      format: 'bytes'\n    },\n    nonce: {\n      format: 'uint'\n    },\n    sha3Uncles: {\n      format: 'bytes32'\n    },\n    size: {\n      format: 'uint'\n    },\n    baseFeePerGas: {\n      format: 'uint'\n    },\n    excessDataGas: {\n      format: 'uint'\n    },\n    mixHash: {\n      format: 'bytes32'\n    },\n    transactions: {\n      type: 'array',\n      items: {\n        format: 'bytes32'\n      }\n    },\n    uncles: {\n      type: 'array',\n      items: {\n        format: 'bytes32'\n      }\n    },\n    withdrawals: {\n      type: 'array',\n      items: Object.assign({}, exports.withdrawalsSchema)\n    }\n  }\n};\nexports.logSchema = {\n  type: 'object',\n  properties: {\n    removed: {\n      format: 'bool'\n    },\n    logIndex: {\n      format: 'uint'\n    },\n    transactionIndex: {\n      format: 'uint'\n    },\n    transactionHash: {\n      format: 'bytes32'\n    },\n    blockHash: {\n      format: 'bytes32'\n    },\n    blockNumber: {\n      format: 'uint'\n    },\n    address: {\n      format: 'address'\n    },\n    data: {\n      format: 'bytes'\n    },\n    topics: {\n      type: 'array',\n      items: {\n        format: 'bytes32'\n      }\n    }\n  }\n};\nexports.syncSchema = {\n  type: 'object',\n  properties: {\n    startingBlock: {\n      format: 'string'\n    },\n    currentBlock: {\n      format: 'string'\n    },\n    highestBlock: {\n      format: 'string'\n    },\n    knownStates: {\n      format: 'string'\n    },\n    pulledStates: {\n      format: 'string'\n    }\n  }\n};\nexports.transactionReceiptSchema = {\n  type: 'object',\n  properties: {\n    transactionHash: {\n      format: 'bytes32'\n    },\n    transactionIndex: {\n      format: 'uint'\n    },\n    blockHash: {\n      format: 'bytes32'\n    },\n    blockNumber: {\n      format: 'uint'\n    },\n    from: {\n      format: 'address'\n    },\n    to: {\n      format: 'address'\n    },\n    cumulativeGasUsed: {\n      format: 'uint'\n    },\n    gasUsed: {\n      format: 'uint'\n    },\n    effectiveGasPrice: {\n      format: 'uint'\n    },\n    contractAddress: {\n      format: 'address'\n    },\n    logs: {\n      type: 'array',\n      items: Object.assign({}, exports.logSchema)\n    },\n    logsBloom: {\n      format: 'bytes'\n    },\n    root: {\n      format: 'bytes'\n    },\n    status: {\n      format: 'uint'\n    },\n    type: {\n      format: 'uint'\n    }\n  }\n};\nexports.SignatureObjectSchema = {\n  type: 'object',\n  properties: {\n    messageHash: {\n      format: 'bytes'\n    },\n    r: {\n      format: 'bytes32'\n    },\n    s: {\n      format: 'bytes32'\n    },\n    v: {\n      format: 'bytes'\n    },\n    message: {\n      format: 'bytes'\n    },\n    signature: {\n      format: 'bytes'\n    }\n  }\n};\nexports.feeHistorySchema = {\n  type: 'object',\n  properties: {\n    oldestBlock: {\n      format: 'uint'\n    },\n    baseFeePerGas: {\n      type: 'array',\n      items: {\n        format: 'uint'\n      }\n    },\n    reward: {\n      type: 'array',\n      items: {\n        type: 'array',\n        items: {\n          format: 'uint'\n        }\n      }\n    },\n    gasUsedRatio: {\n      type: 'array',\n      items: {\n        type: 'number'\n      }\n    }\n  }\n};\nexports.storageProofSchema = {\n  type: 'object',\n  properties: {\n    key: {\n      format: 'bytes32'\n    },\n    value: {\n      format: 'uint'\n    },\n    proof: {\n      type: 'array',\n      items: {\n        format: 'bytes32'\n      }\n    }\n  }\n};\nexports.accountSchema = {\n  type: 'object',\n  properties: {\n    balance: {\n      format: 'uint'\n    },\n    codeHash: {\n      format: 'bytes32'\n    },\n    nonce: {\n      format: 'uint'\n    },\n    storageHash: {\n      format: 'bytes32'\n    },\n    accountProof: {\n      type: 'array',\n      items: {\n        format: 'bytes32'\n      }\n    },\n    storageProof: {\n      type: 'array',\n      items: Object.assign({}, exports.storageProofSchema)\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["exports","type","properties","address","format","storageKeys","items","accessList","gasUsed","enum","name","networkId","chainId","from","to","oneOf","value","gas","gasPrice","effectiveGasPrice","maxFeePerGas","maxPriorityFeePerGas","data","input","nonce","chain","hardfork","common","customChain","baseChain","gasLimit","v","r","s","blockHash","blockNumber","hash","transactionIndex","parentHash","sha3Uncles","miner","stateRoot","transactionsRoot","receiptsRoot","logsBloom","difficulty","number","timestamp","extraData","mixHash","totalDifficulty","baseFeePerGas","size","transactions","uncles","index","validatorIndex","amount","author","withdrawalsRoot","excessDataGas","withdrawals","removed","logIndex","transactionHash","topics","startingBlock","currentBlock","highestBlock","knownStates","pulledStates","cumulativeGasUsed","contractAddress","logs","root","status","messageHash","message","signature","oldestBlock","reward","gasUsedRatio","key","proof","balance","codeHash","storageHash","accountProof","storageProof"],"sources":["/home/rupam/Desktop/Faucet-React/node_modules/web3-eth/src/schemas.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nexport const accessListItemSchema = {\n\ttype: 'object',\n\tproperties: {\n\t\taddress: {\n\t\t\tformat: 'address',\n\t\t},\n\t\tstorageKeys: {\n\t\t\ttype: 'array',\n\t\t\titems: {\n\t\t\t\tformat: 'bytes32',\n\t\t\t},\n\t\t},\n\t},\n};\n\nexport const accessListSchema = {\n\ttype: 'array',\n\titems: {\n\t\t...accessListItemSchema,\n\t},\n};\n\nexport const accessListResultSchema = {\n\ttype: 'object',\n\tproperties: {\n\t\taccessList: {\n\t\t\t...accessListSchema,\n\t\t},\n\t\tgasUsed: {\n\t\t\ttype: 'string',\n\t\t},\n\t},\n};\n\nexport const chainSchema = {\n\ttype: 'string',\n\tenum: ['goerli', 'kovan', 'mainnet', 'rinkeby', 'ropsten', 'sepolia'],\n};\n\nexport const hardforkSchema = {\n\ttype: 'string',\n\tenum: [\n\t\t'arrowGlacier',\n\t\t'berlin',\n\t\t'byzantium',\n\t\t'chainstart',\n\t\t'constantinople',\n\t\t'dao',\n\t\t'homestead',\n\t\t'istanbul',\n\t\t'london',\n\t\t'merge',\n\t\t'muirGlacier',\n\t\t'petersburg',\n\t\t'shanghai',\n\t\t'spuriousDragon',\n\t\t'tangerineWhistle',\n\t],\n};\n\nexport const customChainSchema = {\n\ttype: 'object',\n\tproperties: {\n\t\tname: {\n\t\t\tformat: 'string',\n\t\t},\n\t\tnetworkId: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tchainId: {\n\t\t\tformat: 'uint',\n\t\t},\n\t},\n};\n\nexport const transactionSchema = {\n\ttype: 'object',\n\tproperties: {\n\t\tfrom: {\n\t\t\tformat: 'address',\n\t\t},\n\t\tto: {\n\t\t\toneOf: [{ format: 'address' }, { type: 'null' }],\n\t\t},\n\t\tvalue: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tgas: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tgasPrice: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\teffectiveGasPrice: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\ttype: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tmaxFeePerGas: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tmaxPriorityFeePerGas: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\taccessList: {\n\t\t\t...accessListSchema,\n\t\t},\n\t\tdata: {\n\t\t\tformat: 'bytes',\n\t\t},\n\t\tinput: {\n\t\t\tformat: 'bytes',\n\t\t},\n\t\tnonce: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tchain: { ...chainSchema },\n\t\thardfork: { ...hardforkSchema },\n\t\tchainId: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tnetworkId: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tcommon: {\n\t\t\ttype: 'object',\n\t\t\tproperties: {\n\t\t\t\tcustomChain: { ...customChainSchema },\n\t\t\t\tbaseChain: {\n\t\t\t\t\t...chainSchema,\n\t\t\t\t},\n\t\t\t\thardfork: {\n\t\t\t\t\t...hardforkSchema,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tgasLimit: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tv: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tr: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\ts: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t},\n};\n\nexport const transactionInfoSchema = {\n\ttype: 'object',\n\tproperties: {\n\t\t...transactionSchema.properties,\n\t\tblockHash: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\tblockNumber: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\thash: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\ttransactionIndex: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tfrom: {\n\t\t\tformat: 'address',\n\t\t},\n\t\tto: {\n\t\t\toneOf: [{ format: 'address' }, { type: 'null' }],\n\t\t},\n\t\tvalue: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tgas: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tgasPrice: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\teffectiveGasPrice: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\ttype: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tmaxFeePerGas: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tmaxPriorityFeePerGas: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\taccessList: {\n\t\t\t...accessListSchema,\n\t\t},\n\t\tdata: {\n\t\t\tformat: 'bytes',\n\t\t},\n\t\tinput: {\n\t\t\tformat: 'bytes',\n\t\t},\n\t\tnonce: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tgasLimit: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tv: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tr: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\ts: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t},\n};\n\nexport const blockSchema = {\n\ttype: 'object',\n\tproperties: {\n\t\tparentHash: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\tsha3Uncles: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\tminer: {\n\t\t\tformat: 'bytes',\n\t\t},\n\t\tstateRoot: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\ttransactionsRoot: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\treceiptsRoot: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\tlogsBloom: {\n\t\t\tformat: 'bytes256',\n\t\t},\n\t\tdifficulty: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tnumber: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tgasLimit: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tgasUsed: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\ttimestamp: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\textraData: {\n\t\t\tformat: 'bytes',\n\t\t},\n\t\tmixHash: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\tnonce: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\ttotalDifficulty: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tbaseFeePerGas: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tsize: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\ttransactions: {\n\t\t\toneOf: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'array',\n\t\t\t\t\titems: {\n\t\t\t\t\t\t...transactionInfoSchema,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: 'array',\n\t\t\t\t\titems: {\n\t\t\t\t\t\tformat: 'bytes32',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t\tuncles: {\n\t\t\ttype: 'array',\n\t\t\titems: {\n\t\t\t\tformat: 'bytes32',\n\t\t\t},\n\t\t},\n\t\thash: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t},\n};\n\nexport const withdrawalsSchema = {\n\ttype: 'object',\n\tproperties: {\n\t\tindex: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tvalidatorIndex: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\taddress: {\n\t\t\tformat: 'address',\n\t\t},\n\t\tamount: {\n\t\t\tformat: 'uint',\n\t\t},\n\t},\n};\n\nexport const blockHeaderSchema = {\n\ttype: 'object',\n\tproperties: {\n\t\tauthor: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\thash: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\tparentHash: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\treceiptsRoot: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\tminer: {\n\t\t\tformat: 'bytes',\n\t\t},\n\t\tstateRoot: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\ttransactionsRoot: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\twithdrawalsRoot: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\tlogsBloom: {\n\t\t\tformat: 'bytes256',\n\t\t},\n\t\tdifficulty: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\ttotalDifficulty: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tnumber: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tgasLimit: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tgasUsed: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\ttimestamp: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\textraData: {\n\t\t\tformat: 'bytes',\n\t\t},\n\t\tnonce: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tsha3Uncles: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\tsize: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tbaseFeePerGas: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\texcessDataGas: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tmixHash: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\ttransactions: {\n\t\t\ttype: 'array',\n\t\t\titems: {\n\t\t\t\tformat: 'bytes32',\n\t\t\t},\n\t\t},\n\t\tuncles: {\n\t\t\ttype: 'array',\n\t\t\titems: {\n\t\t\t\tformat: 'bytes32',\n\t\t\t},\n\t\t},\n\t\twithdrawals: {\n\t\t\ttype: 'array',\n\t\t\titems: {\n\t\t\t\t...withdrawalsSchema,\n\t\t\t},\n\t\t},\n\t},\n};\n\nexport const logSchema = {\n\ttype: 'object',\n\tproperties: {\n\t\tremoved: {\n\t\t\tformat: 'bool',\n\t\t},\n\t\tlogIndex: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\ttransactionIndex: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\ttransactionHash: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\tblockHash: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\tblockNumber: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\taddress: {\n\t\t\tformat: 'address',\n\t\t},\n\t\tdata: {\n\t\t\tformat: 'bytes',\n\t\t},\n\t\ttopics: {\n\t\t\ttype: 'array',\n\t\t\titems: {\n\t\t\t\tformat: 'bytes32',\n\t\t\t},\n\t\t},\n\t},\n};\nexport const syncSchema = {\n\ttype: 'object',\n\tproperties: {\n\t\tstartingBlock: {\n\t\t\tformat: 'string',\n\t\t},\n\t\tcurrentBlock: {\n\t\t\tformat: 'string',\n\t\t},\n\t\thighestBlock: {\n\t\t\tformat: 'string',\n\t\t},\n\t\tknownStates: {\n\t\t\tformat: 'string',\n\t\t},\n\t\tpulledStates: {\n\t\t\tformat: 'string',\n\t\t},\n\t},\n};\n\nexport const transactionReceiptSchema = {\n\ttype: 'object',\n\tproperties: {\n\t\ttransactionHash: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\ttransactionIndex: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tblockHash: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\tblockNumber: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tfrom: {\n\t\t\tformat: 'address',\n\t\t},\n\t\tto: {\n\t\t\tformat: 'address',\n\t\t},\n\t\tcumulativeGasUsed: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tgasUsed: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\teffectiveGasPrice: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tcontractAddress: {\n\t\t\tformat: 'address',\n\t\t},\n\t\tlogs: {\n\t\t\ttype: 'array',\n\t\t\titems: {\n\t\t\t\t...logSchema,\n\t\t\t},\n\t\t},\n\t\tlogsBloom: {\n\t\t\tformat: 'bytes',\n\t\t},\n\t\troot: {\n\t\t\tformat: 'bytes',\n\t\t},\n\t\tstatus: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\ttype: {\n\t\t\tformat: 'uint',\n\t\t},\n\t},\n};\n\nexport const SignatureObjectSchema = {\n\ttype: 'object',\n\tproperties: {\n\t\tmessageHash: {\n\t\t\tformat: 'bytes',\n\t\t},\n\t\tr: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\ts: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\tv: {\n\t\t\tformat: 'bytes',\n\t\t},\n\t\tmessage: {\n\t\t\tformat: 'bytes',\n\t\t},\n\t\tsignature: {\n\t\t\tformat: 'bytes',\n\t\t},\n\t},\n};\nexport const feeHistorySchema = {\n\ttype: 'object',\n\tproperties: {\n\t\toldestBlock: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tbaseFeePerGas: {\n\t\t\ttype: 'array',\n\t\t\titems: {\n\t\t\t\tformat: 'uint',\n\t\t\t},\n\t\t},\n\t\treward: {\n\t\t\ttype: 'array',\n\t\t\titems: {\n\t\t\t\ttype: 'array',\n\t\t\t\titems: {\n\t\t\t\t\tformat: 'uint',\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tgasUsedRatio: {\n\t\t\ttype: 'array',\n\t\t\titems: {\n\t\t\t\ttype: 'number',\n\t\t\t},\n\t\t},\n\t},\n};\n\nexport const storageProofSchema = {\n\ttype: 'object',\n\tproperties: {\n\t\tkey: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\tvalue: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tproof: {\n\t\t\ttype: 'array',\n\t\t\titems: {\n\t\t\t\tformat: 'bytes32',\n\t\t\t},\n\t\t},\n\t},\n};\n\nexport const accountSchema = {\n\ttype: 'object',\n\tproperties: {\n\t\tbalance: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tcodeHash: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\tnonce: {\n\t\t\tformat: 'uint',\n\t\t},\n\t\tstorageHash: {\n\t\t\tformat: 'bytes32',\n\t\t},\n\t\taccountProof: {\n\t\t\ttype: 'array',\n\t\t\titems: {\n\t\t\t\tformat: 'bytes32',\n\t\t\t},\n\t\t},\n\t\tstorageProof: {\n\t\t\ttype: 'array',\n\t\t\titems: {\n\t\t\t\t...storageProofSchema,\n\t\t\t},\n\t\t},\n\t},\n};\n"]},"metadata":{},"sourceType":"script"}