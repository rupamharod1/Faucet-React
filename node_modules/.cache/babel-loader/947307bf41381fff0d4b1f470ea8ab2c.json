{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sha384 = exports.sha512_256 = exports.sha512_224 = exports.sha512 = exports.SHA512 = void 0;\n\nconst _sha2_js_1 = require(\"./_sha2.js\");\n\nconst _u64_js_1 = require(\"./_u64.js\");\n\nconst utils_js_1 = require(\"./utils.js\"); // Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\n\n\nconst [SHA512_Kh, SHA512_Kl] = _u64_js_1.default.split(['0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc', '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118', '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2', '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694', '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65', '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5', '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4', '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70', '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df', '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b', '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30', '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8', '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8', '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3', '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec', '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b', '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178', '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b', '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c', '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'].map(n => BigInt(n))); // Temporary buffer, not used to store anything between runs\n\n\nconst SHA512_W_H = new Uint32Array(80);\nconst SHA512_W_L = new Uint32Array(80);\n\nclass SHA512 extends _sha2_js_1.SHA2 {\n  constructor() {\n    super(128, 64, 16, false); // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n    // Also looks cleaner and easier to verify with spec.\n    // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n    // h -- high 32 bits, l -- low 32 bits\n\n    this.Ah = 0x6a09e667 | 0;\n    this.Al = 0xf3bcc908 | 0;\n    this.Bh = 0xbb67ae85 | 0;\n    this.Bl = 0x84caa73b | 0;\n    this.Ch = 0x3c6ef372 | 0;\n    this.Cl = 0xfe94f82b | 0;\n    this.Dh = 0xa54ff53a | 0;\n    this.Dl = 0x5f1d36f1 | 0;\n    this.Eh = 0x510e527f | 0;\n    this.El = 0xade682d1 | 0;\n    this.Fh = 0x9b05688c | 0;\n    this.Fl = 0x2b3e6c1f | 0;\n    this.Gh = 0x1f83d9ab | 0;\n    this.Gl = 0xfb41bd6b | 0;\n    this.Hh = 0x5be0cd19 | 0;\n    this.Hl = 0x137e2179 | 0;\n  } // prettier-ignore\n\n\n  get() {\n    const {\n      Ah,\n      Al,\n      Bh,\n      Bl,\n      Ch,\n      Cl,\n      Dh,\n      Dl,\n      Eh,\n      El,\n      Fh,\n      Fl,\n      Gh,\n      Gl,\n      Hh,\n      Hl\n    } = this;\n    return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n  } // prettier-ignore\n\n\n  set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n    this.Ah = Ah | 0;\n    this.Al = Al | 0;\n    this.Bh = Bh | 0;\n    this.Bl = Bl | 0;\n    this.Ch = Ch | 0;\n    this.Cl = Cl | 0;\n    this.Dh = Dh | 0;\n    this.Dl = Dl | 0;\n    this.Eh = Eh | 0;\n    this.El = El | 0;\n    this.Fh = Fh | 0;\n    this.Fl = Fl | 0;\n    this.Gh = Gh | 0;\n    this.Gl = Gl | 0;\n    this.Hh = Hh | 0;\n    this.Hl = Hl | 0;\n  }\n\n  process(view, offset) {\n    // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) {\n      SHA512_W_H[i] = view.getUint32(offset);\n      SHA512_W_L[i] = view.getUint32(offset += 4);\n    }\n\n    for (let i = 16; i < 80; i++) {\n      // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n      const W15h = SHA512_W_H[i - 15] | 0;\n      const W15l = SHA512_W_L[i - 15] | 0;\n\n      const s0h = _u64_js_1.default.rotrSH(W15h, W15l, 1) ^ _u64_js_1.default.rotrSH(W15h, W15l, 8) ^ _u64_js_1.default.shrSH(W15h, W15l, 7);\n\n      const s0l = _u64_js_1.default.rotrSL(W15h, W15l, 1) ^ _u64_js_1.default.rotrSL(W15h, W15l, 8) ^ _u64_js_1.default.shrSL(W15h, W15l, 7); // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n\n\n      const W2h = SHA512_W_H[i - 2] | 0;\n      const W2l = SHA512_W_L[i - 2] | 0;\n\n      const s1h = _u64_js_1.default.rotrSH(W2h, W2l, 19) ^ _u64_js_1.default.rotrBH(W2h, W2l, 61) ^ _u64_js_1.default.shrSH(W2h, W2l, 6);\n\n      const s1l = _u64_js_1.default.rotrSL(W2h, W2l, 19) ^ _u64_js_1.default.rotrBL(W2h, W2l, 61) ^ _u64_js_1.default.shrSL(W2h, W2l, 6); // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n\n\n      const SUMl = _u64_js_1.default.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n\n      const SUMh = _u64_js_1.default.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n\n      SHA512_W_H[i] = SUMh | 0;\n      SHA512_W_L[i] = SUMl | 0;\n    }\n\n    let {\n      Ah,\n      Al,\n      Bh,\n      Bl,\n      Ch,\n      Cl,\n      Dh,\n      Dl,\n      Eh,\n      El,\n      Fh,\n      Fl,\n      Gh,\n      Gl,\n      Hh,\n      Hl\n    } = this; // Compression function main loop, 80 rounds\n\n    for (let i = 0; i < 80; i++) {\n      // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n      const sigma1h = _u64_js_1.default.rotrSH(Eh, El, 14) ^ _u64_js_1.default.rotrSH(Eh, El, 18) ^ _u64_js_1.default.rotrBH(Eh, El, 41);\n\n      const sigma1l = _u64_js_1.default.rotrSL(Eh, El, 14) ^ _u64_js_1.default.rotrSL(Eh, El, 18) ^ _u64_js_1.default.rotrBL(Eh, El, 41); //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n\n\n      const CHIh = Eh & Fh ^ ~Eh & Gh;\n      const CHIl = El & Fl ^ ~El & Gl; // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n      // prettier-ignore\n\n      const T1ll = _u64_js_1.default.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n\n      const T1h = _u64_js_1.default.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n\n      const T1l = T1ll | 0; // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n\n      const sigma0h = _u64_js_1.default.rotrSH(Ah, Al, 28) ^ _u64_js_1.default.rotrBH(Ah, Al, 34) ^ _u64_js_1.default.rotrBH(Ah, Al, 39);\n\n      const sigma0l = _u64_js_1.default.rotrSL(Ah, Al, 28) ^ _u64_js_1.default.rotrBL(Ah, Al, 34) ^ _u64_js_1.default.rotrBL(Ah, Al, 39);\n\n      const MAJh = Ah & Bh ^ Ah & Ch ^ Bh & Ch;\n      const MAJl = Al & Bl ^ Al & Cl ^ Bl & Cl;\n      Hh = Gh | 0;\n      Hl = Gl | 0;\n      Gh = Fh | 0;\n      Gl = Fl | 0;\n      Fh = Eh | 0;\n      Fl = El | 0;\n      ({\n        h: Eh,\n        l: El\n      } = _u64_js_1.default.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n      Dh = Ch | 0;\n      Dl = Cl | 0;\n      Ch = Bh | 0;\n      Cl = Bl | 0;\n      Bh = Ah | 0;\n      Bl = Al | 0;\n\n      const All = _u64_js_1.default.add3L(T1l, sigma0l, MAJl);\n\n      Ah = _u64_js_1.default.add3H(All, T1h, sigma0h, MAJh);\n      Al = All | 0;\n    } // Add the compressed chunk to the current hash value\n\n\n    ({\n      h: Ah,\n      l: Al\n    } = _u64_js_1.default.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n    ({\n      h: Bh,\n      l: Bl\n    } = _u64_js_1.default.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n    ({\n      h: Ch,\n      l: Cl\n    } = _u64_js_1.default.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n    ({\n      h: Dh,\n      l: Dl\n    } = _u64_js_1.default.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n    ({\n      h: Eh,\n      l: El\n    } = _u64_js_1.default.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n    ({\n      h: Fh,\n      l: Fl\n    } = _u64_js_1.default.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n    ({\n      h: Gh,\n      l: Gl\n    } = _u64_js_1.default.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n    ({\n      h: Hh,\n      l: Hl\n    } = _u64_js_1.default.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n    this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n  }\n\n  roundClean() {\n    SHA512_W_H.fill(0);\n    SHA512_W_L.fill(0);\n  }\n\n  destroy() {\n    this.buffer.fill(0);\n    this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n  }\n\n}\n\nexports.SHA512 = SHA512;\n\nclass SHA512_224 extends SHA512 {\n  constructor() {\n    super(); // h -- high 32 bits, l -- low 32 bits\n\n    this.Ah = 0x8c3d37c8 | 0;\n    this.Al = 0x19544da2 | 0;\n    this.Bh = 0x73e19966 | 0;\n    this.Bl = 0x89dcd4d6 | 0;\n    this.Ch = 0x1dfab7ae | 0;\n    this.Cl = 0x32ff9c82 | 0;\n    this.Dh = 0x679dd514 | 0;\n    this.Dl = 0x582f9fcf | 0;\n    this.Eh = 0x0f6d2b69 | 0;\n    this.El = 0x7bd44da8 | 0;\n    this.Fh = 0x77e36f73 | 0;\n    this.Fl = 0x04c48942 | 0;\n    this.Gh = 0x3f9d85a8 | 0;\n    this.Gl = 0x6a1d36c8 | 0;\n    this.Hh = 0x1112e6ad | 0;\n    this.Hl = 0x91d692a1 | 0;\n    this.outputLen = 28;\n  }\n\n}\n\nclass SHA512_256 extends SHA512 {\n  constructor() {\n    super(); // h -- high 32 bits, l -- low 32 bits\n\n    this.Ah = 0x22312194 | 0;\n    this.Al = 0xfc2bf72c | 0;\n    this.Bh = 0x9f555fa3 | 0;\n    this.Bl = 0xc84c64c2 | 0;\n    this.Ch = 0x2393b86b | 0;\n    this.Cl = 0x6f53b151 | 0;\n    this.Dh = 0x96387719 | 0;\n    this.Dl = 0x5940eabd | 0;\n    this.Eh = 0x96283ee2 | 0;\n    this.El = 0xa88effe3 | 0;\n    this.Fh = 0xbe5e1e25 | 0;\n    this.Fl = 0x53863992 | 0;\n    this.Gh = 0x2b0199fc | 0;\n    this.Gl = 0x2c85b8aa | 0;\n    this.Hh = 0x0eb72ddc | 0;\n    this.Hl = 0x81c52ca2 | 0;\n    this.outputLen = 32;\n  }\n\n}\n\nclass SHA384 extends SHA512 {\n  constructor() {\n    super(); // h -- high 32 bits, l -- low 32 bits\n\n    this.Ah = 0xcbbb9d5d | 0;\n    this.Al = 0xc1059ed8 | 0;\n    this.Bh = 0x629a292a | 0;\n    this.Bl = 0x367cd507 | 0;\n    this.Ch = 0x9159015a | 0;\n    this.Cl = 0x3070dd17 | 0;\n    this.Dh = 0x152fecd8 | 0;\n    this.Dl = 0xf70e5939 | 0;\n    this.Eh = 0x67332667 | 0;\n    this.El = 0xffc00b31 | 0;\n    this.Fh = 0x8eb44a87 | 0;\n    this.Fl = 0x68581511 | 0;\n    this.Gh = 0xdb0c2e0d | 0;\n    this.Gl = 0x64f98fa7 | 0;\n    this.Hh = 0x47b5481d | 0;\n    this.Hl = 0xbefa4fa4 | 0;\n    this.outputLen = 48;\n  }\n\n}\n\nexports.sha512 = (0, utils_js_1.wrapConstructor)(() => new SHA512());\nexports.sha512_224 = (0, utils_js_1.wrapConstructor)(() => new SHA512_224());\nexports.sha512_256 = (0, utils_js_1.wrapConstructor)(() => new SHA512_256());\nexports.sha384 = (0, utils_js_1.wrapConstructor)(() => new SHA384());","map":{"version":3,"mappings":"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","names":["SHA512_Kh","SHA512_Kl","_u64_js_1","split","map","n","BigInt","SHA512_W_H","Uint32Array","SHA512_W_L","SHA512","_sha2_js_1","constructor","get","Ah","Al","Bh","Bl","Ch","Cl","Dh","Dl","Eh","El","Fh","Fl","Gh","Gl","Hh","Hl","set","process","view","offset","i","getUint32","W15h","W15l","s0h","rotrSH","shrSH","s0l","rotrSL","shrSL","W2h","W2l","s1h","rotrBH","s1l","rotrBL","SUMl","add4L","SUMh","add4H","sigma1h","sigma1l","CHIh","CHIl","T1ll","add5L","T1h","add5H","T1l","sigma0h","sigma0l","MAJh","MAJl","h","l","add","All","add3L","add3H","roundClean","fill","destroy","buffer","exports","SHA512_224","outputLen","SHA512_256","SHA384"],"sources":["/home/rupam/Desktop/Faucet-React/node_modules/@noble/hashes/src/sha512.ts"],"sourcesContent":["import { SHA2 } from './_sha2.js';\nimport u64 from './_u64.js';\nimport { wrapConstructor } from './utils.js';\n\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = u64.split([\n  '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n  '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n  '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n  '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n  '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n  '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n  '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n  '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n  '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n  '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n  '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n  '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n  '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n  '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n  '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n  '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n  '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n  '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n  '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n  '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n)));\n\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = new Uint32Array(80);\nconst SHA512_W_L = new Uint32Array(80);\n\nexport class SHA512 extends SHA2<SHA512> {\n  // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n  // Also looks cleaner and easier to verify with spec.\n  // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0x6a09e667 | 0;\n  Al = 0xf3bcc908 | 0;\n  Bh = 0xbb67ae85 | 0;\n  Bl = 0x84caa73b | 0;\n  Ch = 0x3c6ef372 | 0;\n  Cl = 0xfe94f82b | 0;\n  Dh = 0xa54ff53a | 0;\n  Dl = 0x5f1d36f1 | 0;\n  Eh = 0x510e527f | 0;\n  El = 0xade682d1 | 0;\n  Fh = 0x9b05688c | 0;\n  Fl = 0x2b3e6c1f | 0;\n  Gh = 0x1f83d9ab | 0;\n  Gl = 0xfb41bd6b | 0;\n  Hh = 0x5be0cd19 | 0;\n  Hl = 0x137e2179 | 0;\n\n  constructor() {\n    super(128, 64, 16, false);\n  }\n  // prettier-ignore\n  protected get(): [\n    number, number, number, number, number, number, number, number,\n    number, number, number, number, number, number, number, number\n  ] {\n    const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n    return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n  }\n  // prettier-ignore\n  protected set(\n    Ah: number, Al: number, Bh: number, Bl: number, Ch: number, Cl: number, Dh: number, Dl: number,\n    Eh: number, El: number, Fh: number, Fl: number, Gh: number, Gl: number, Hh: number, Hl: number\n  ) {\n    this.Ah = Ah | 0;\n    this.Al = Al | 0;\n    this.Bh = Bh | 0;\n    this.Bl = Bl | 0;\n    this.Ch = Ch | 0;\n    this.Cl = Cl | 0;\n    this.Dh = Dh | 0;\n    this.Dl = Dl | 0;\n    this.Eh = Eh | 0;\n    this.El = El | 0;\n    this.Fh = Fh | 0;\n    this.Fl = Fl | 0;\n    this.Gh = Gh | 0;\n    this.Gl = Gl | 0;\n    this.Hh = Hh | 0;\n    this.Hl = Hl | 0;\n  }\n  protected process(view: DataView, offset: number) {\n    // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) {\n      SHA512_W_H[i] = view.getUint32(offset);\n      SHA512_W_L[i] = view.getUint32((offset += 4));\n    }\n    for (let i = 16; i < 80; i++) {\n      // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n      const W15h = SHA512_W_H[i - 15] | 0;\n      const W15l = SHA512_W_L[i - 15] | 0;\n      const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n      const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n      // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n      const W2h = SHA512_W_H[i - 2] | 0;\n      const W2l = SHA512_W_L[i - 2] | 0;\n      const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n      const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n      // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n      const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n      const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n      SHA512_W_H[i] = SUMh | 0;\n      SHA512_W_L[i] = SUMl | 0;\n    }\n    let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n    // Compression function main loop, 80 rounds\n    for (let i = 0; i < 80; i++) {\n      // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n      const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n      const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n      //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n      const CHIl = (El & Fl) ^ (~El & Gl);\n      // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n      // prettier-ignore\n      const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n      const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n      const T1l = T1ll | 0;\n      // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n      const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n      const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n      const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n      const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n      Hh = Gh | 0;\n      Hl = Gl | 0;\n      Gh = Fh | 0;\n      Gl = Fl | 0;\n      Fh = Eh | 0;\n      Fl = El | 0;\n      ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n      Dh = Ch | 0;\n      Dl = Cl | 0;\n      Ch = Bh | 0;\n      Cl = Bl | 0;\n      Bh = Ah | 0;\n      Bl = Al | 0;\n      const All = u64.add3L(T1l, sigma0l, MAJl);\n      Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n      Al = All | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n    ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n    ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n    ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n    ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n    ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n    ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n    ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n    this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n  }\n  protected roundClean() {\n    SHA512_W_H.fill(0);\n    SHA512_W_L.fill(0);\n  }\n  destroy() {\n    this.buffer.fill(0);\n    this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n  }\n}\n\nclass SHA512_224 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0x8c3d37c8 | 0;\n  Al = 0x19544da2 | 0;\n  Bh = 0x73e19966 | 0;\n  Bl = 0x89dcd4d6 | 0;\n  Ch = 0x1dfab7ae | 0;\n  Cl = 0x32ff9c82 | 0;\n  Dh = 0x679dd514 | 0;\n  Dl = 0x582f9fcf | 0;\n  Eh = 0x0f6d2b69 | 0;\n  El = 0x7bd44da8 | 0;\n  Fh = 0x77e36f73 | 0;\n  Fl = 0x04c48942 | 0;\n  Gh = 0x3f9d85a8 | 0;\n  Gl = 0x6a1d36c8 | 0;\n  Hh = 0x1112e6ad | 0;\n  Hl = 0x91d692a1 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\nclass SHA512_256 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0x22312194 | 0;\n  Al = 0xfc2bf72c | 0;\n  Bh = 0x9f555fa3 | 0;\n  Bl = 0xc84c64c2 | 0;\n  Ch = 0x2393b86b | 0;\n  Cl = 0x6f53b151 | 0;\n  Dh = 0x96387719 | 0;\n  Dl = 0x5940eabd | 0;\n  Eh = 0x96283ee2 | 0;\n  El = 0xa88effe3 | 0;\n  Fh = 0xbe5e1e25 | 0;\n  Fl = 0x53863992 | 0;\n  Gh = 0x2b0199fc | 0;\n  Gl = 0x2c85b8aa | 0;\n  Hh = 0x0eb72ddc | 0;\n  Hl = 0x81c52ca2 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 32;\n  }\n}\n\nclass SHA384 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0xcbbb9d5d | 0;\n  Al = 0xc1059ed8 | 0;\n  Bh = 0x629a292a | 0;\n  Bl = 0x367cd507 | 0;\n  Ch = 0x9159015a | 0;\n  Cl = 0x3070dd17 | 0;\n  Dh = 0x152fecd8 | 0;\n  Dl = 0xf70e5939 | 0;\n  Eh = 0x67332667 | 0;\n  El = 0xffc00b31 | 0;\n  Fh = 0x8eb44a87 | 0;\n  Fl = 0x68581511 | 0;\n  Gh = 0xdb0c2e0d | 0;\n  Gl = 0x64f98fa7 | 0;\n  Hh = 0x47b5481d | 0;\n  Hl = 0xbefa4fa4 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 48;\n  }\n}\n\nexport const sha512 = wrapConstructor(() => new SHA512());\nexport const sha512_224 = wrapConstructor(() => new SHA512_224());\nexport const sha512_256 = wrapConstructor(() => new SHA512_256());\nexport const sha384 = wrapConstructor(() => new SHA384());\n"]},"metadata":{},"sourceType":"script"}