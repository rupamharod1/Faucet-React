{"ast":null,"code":"\"use strict\";\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/* eslint-disable max-classes-per-file */\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EventEmitter = void 0;\n\nconst events_1 = require(\"events\");\n\nconst wrapFunction = fn => params => fn(params.detail);\n/**\n * This class copy the behavior of Node.js EventEmitter class.\n * It is used to provide the same interface for the browser environment.\n */\n\n\nclass EventEmitterAtBrowser extends EventTarget {\n  constructor() {\n    super(...arguments);\n    this._listeners = {};\n    this.maxListeners = Number.MAX_SAFE_INTEGER;\n  }\n\n  on(eventName, fn) {\n    this.addEventListener(eventName, fn);\n    return this;\n  }\n\n  once(eventName, fn) {\n    const onceCallback = params => __awaiter(this, void 0, void 0, function* () {\n      this.off(eventName, onceCallback);\n      yield fn(params);\n    });\n\n    return this.on(eventName, onceCallback);\n  }\n\n  off(eventName, fn) {\n    this.removeEventListener(eventName, fn);\n    return this;\n  }\n\n  emit(eventName, params) {\n    const event = new CustomEvent(eventName, {\n      detail: params\n    });\n    return super.dispatchEvent(event);\n  }\n\n  listenerCount(eventName) {\n    const eventListeners = this._listeners[eventName];\n    return eventListeners ? eventListeners.length : 0;\n  }\n\n  listeners(eventName) {\n    return this._listeners[eventName].map(value => value[0]) || [];\n  }\n\n  eventNames() {\n    return Object.keys(this._listeners);\n  }\n\n  removeAllListeners() {\n    Object.keys(this._listeners).forEach(event => {\n      this._listeners[event].forEach(listener => {\n        super.removeEventListener(event, listener[1]);\n      });\n    });\n    this._listeners = {};\n    return this;\n  }\n\n  setMaxListeners(maxListeners) {\n    this.maxListeners = maxListeners;\n    return this;\n  }\n\n  getMaxListeners() {\n    return this.maxListeners;\n  }\n\n  addEventListener(eventName, fn) {\n    const wrappedFn = wrapFunction(fn);\n    super.addEventListener(eventName, wrappedFn);\n\n    if (!this._listeners[eventName]) {\n      this._listeners[eventName] = [];\n    }\n\n    this._listeners[eventName].push([fn, wrappedFn]);\n  }\n\n  removeEventListener(eventName, fn) {\n    const eventListeners = this._listeners[eventName];\n\n    if (eventListeners) {\n      const index = eventListeners.findIndex(item => item[0] === fn);\n\n      if (index !== -1) {\n        super.removeEventListener(eventName, eventListeners[index][1]);\n        eventListeners.splice(index, 1);\n      }\n    }\n  }\n\n} // eslint-disable-next-line import/no-mutable-exports\n\n\nlet EventEmitterType; // Check if the code is running in a Node.js environment\n\nif (typeof window === 'undefined') {\n  EventEmitterType = events_1.EventEmitter;\n} else {\n  // Fallback for the browser environment\n  EventEmitterType = EventEmitterAtBrowser;\n}\n\nclass EventEmitter extends EventEmitterType {}\n\nexports.EventEmitter = EventEmitter;","map":{"version":3,"mappings":"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","names":["wrapFunction","fn","params","detail","EventEmitterAtBrowser","EventTarget","constructor","Number","MAX_SAFE_INTEGER","on","eventName","addEventListener","once","onceCallback","__awaiter","off","removeEventListener","emit","event","CustomEvent","dispatchEvent","listenerCount","eventListeners","_listeners","length","listeners","map","value","eventNames","Object","keys","removeAllListeners","forEach","listener","setMaxListeners","maxListeners","getMaxListeners","wrappedFn","push","index","findIndex","item","splice","EventEmitterType","window","events_1","EventEmitter","exports"],"sources":["/home/rupam/Desktop/Faucet-React/node_modules/web3-utils/src/event_emitter.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/* eslint-disable max-classes-per-file */\n\nimport { EventEmitter as EventEmitterAtNode } from 'events';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype Callback = (params: any) => void | Promise<void>;\n\ntype EventTargetCallback = (params: CustomEvent) => void;\n\nconst wrapFunction =\n\t(fn: Callback): EventTargetCallback =>\n\t(params: CustomEvent) =>\n\t\tfn(params.detail);\n\n/**\n * This class copy the behavior of Node.js EventEmitter class.\n * It is used to provide the same interface for the browser environment.\n */\nclass EventEmitterAtBrowser extends EventTarget {\n\tprivate _listeners: Record<string, [key: Callback, value: EventTargetCallback][]> = {};\n\tprivate maxListeners = Number.MAX_SAFE_INTEGER;\n\n\tpublic on(eventName: string, fn: Callback) {\n\t\tthis.addEventListener(eventName, fn);\n\t\treturn this;\n\t}\n\n\tpublic once(eventName: string, fn: Callback) {\n\t\tconst onceCallback = async (params: Callback) => {\n\t\t\tthis.off(eventName, onceCallback);\n\t\t\tawait fn(params);\n\t\t};\n\t\treturn this.on(eventName, onceCallback);\n\t}\n\n\tpublic off(eventName: string, fn: Callback) {\n\t\tthis.removeEventListener(eventName, fn);\n\t\treturn this;\n\t}\n\n\tpublic emit(eventName: string, params: unknown) {\n\t\tconst event = new CustomEvent(eventName, { detail: params });\n\t\treturn super.dispatchEvent(event);\n\t}\n\n\tpublic listenerCount(eventName: string): number {\n\t\tconst eventListeners = this._listeners[eventName];\n\t\treturn eventListeners ? eventListeners.length : 0;\n\t}\n\n\tpublic listeners(eventName: string): Callback[] {\n\t\treturn this._listeners[eventName].map(value => value[0]) || [];\n\t}\n\n\tpublic eventNames(): string[] {\n\t\treturn Object.keys(this._listeners);\n\t}\n\n\tpublic removeAllListeners() {\n\t\tObject.keys(this._listeners).forEach(event => {\n\t\t\tthis._listeners[event].forEach(\n\t\t\t\t(listener: [key: Callback, value: EventTargetCallback]) => {\n\t\t\t\t\tsuper.removeEventListener(event, listener[1] as EventListener);\n\t\t\t\t},\n\t\t\t);\n\t\t});\n\n\t\tthis._listeners = {};\n\t\treturn this;\n\t}\n\n\tpublic setMaxListeners(maxListeners: number) {\n\t\tthis.maxListeners = maxListeners;\n\t\treturn this;\n\t}\n\n\tpublic getMaxListeners(): number {\n\t\treturn this.maxListeners;\n\t}\n\n\tpublic addEventListener(eventName: string, fn: Callback) {\n\t\tconst wrappedFn = wrapFunction(fn);\n\t\tsuper.addEventListener(eventName, wrappedFn as EventListener);\n\t\tif (!this._listeners[eventName]) {\n\t\t\tthis._listeners[eventName] = [];\n\t\t}\n\t\tthis._listeners[eventName].push([fn, wrappedFn]);\n\t}\n\n\tpublic removeEventListener(eventName: string, fn: Callback) {\n\t\tconst eventListeners = this._listeners[eventName];\n\t\tif (eventListeners) {\n\t\t\tconst index = eventListeners.findIndex(item => item[0] === fn);\n\t\t\tif (index !== -1) {\n\t\t\t\tsuper.removeEventListener(eventName, eventListeners[index][1] as EventListener);\n\t\t\t\teventListeners.splice(index, 1);\n\t\t\t}\n\t\t}\n\t}\n}\n\n// eslint-disable-next-line import/no-mutable-exports\nlet EventEmitterType: typeof EventEmitterAtNode;\n// Check if the code is running in a Node.js environment\nif (typeof window === 'undefined') {\n\tEventEmitterType = EventEmitterAtNode;\n} else {\n\t// Fallback for the browser environment\n\tEventEmitterType = EventEmitterAtBrowser as unknown as typeof EventEmitterAtNode;\n}\n\nexport class EventEmitter extends EventEmitterType {}"]},"metadata":{},"sourceType":"script"}