{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CustomChain = exports.ConsensusAlgorithm = exports.ConsensusType = exports.Hardfork = exports.Chain = void 0;\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nvar Chain;\n\n(function (Chain) {\n  Chain[Chain[\"Mainnet\"] = 1] = \"Mainnet\";\n  Chain[Chain[\"Goerli\"] = 5] = \"Goerli\";\n  Chain[Chain[\"Sepolia\"] = 11155111] = \"Sepolia\";\n})(Chain = exports.Chain || (exports.Chain = {}));\n\nvar Hardfork;\n\n(function (Hardfork) {\n  Hardfork[\"Chainstart\"] = \"chainstart\";\n  Hardfork[\"Homestead\"] = \"homestead\";\n  Hardfork[\"Dao\"] = \"dao\";\n  Hardfork[\"TangerineWhistle\"] = \"tangerineWhistle\";\n  Hardfork[\"SpuriousDragon\"] = \"spuriousDragon\";\n  Hardfork[\"Byzantium\"] = \"byzantium\";\n  Hardfork[\"Constantinople\"] = \"constantinople\";\n  Hardfork[\"Petersburg\"] = \"petersburg\";\n  Hardfork[\"Istanbul\"] = \"istanbul\";\n  Hardfork[\"MuirGlacier\"] = \"muirGlacier\";\n  Hardfork[\"Berlin\"] = \"berlin\";\n  Hardfork[\"London\"] = \"london\";\n  Hardfork[\"ArrowGlacier\"] = \"arrowGlacier\";\n  Hardfork[\"GrayGlacier\"] = \"grayGlacier\";\n  Hardfork[\"MergeForkIdTransition\"] = \"mergeForkIdTransition\";\n  Hardfork[\"Merge\"] = \"merge\";\n  Hardfork[\"Shanghai\"] = \"shanghai\";\n  Hardfork[\"ShardingForkDev\"] = \"shardingFork\";\n})(Hardfork = exports.Hardfork || (exports.Hardfork = {}));\n\nvar ConsensusType;\n\n(function (ConsensusType) {\n  ConsensusType[\"ProofOfStake\"] = \"pos\";\n  ConsensusType[\"ProofOfWork\"] = \"pow\";\n  ConsensusType[\"ProofOfAuthority\"] = \"poa\";\n})(ConsensusType = exports.ConsensusType || (exports.ConsensusType = {}));\n\nvar ConsensusAlgorithm;\n\n(function (ConsensusAlgorithm) {\n  ConsensusAlgorithm[\"Ethash\"] = \"ethash\";\n  ConsensusAlgorithm[\"Clique\"] = \"clique\";\n  ConsensusAlgorithm[\"Casper\"] = \"casper\";\n})(ConsensusAlgorithm = exports.ConsensusAlgorithm || (exports.ConsensusAlgorithm = {}));\n\nvar CustomChain;\n\n(function (CustomChain) {\n  /**\n   * Polygon (Matic) Mainnet\n   *\n   * - [Documentation](https://docs.matic.network/docs/develop/network-details/network)\n   */\n  CustomChain[\"PolygonMainnet\"] = \"polygon-mainnet\";\n  /**\n   * Polygon (Matic) Mumbai Testnet\n   *\n   * - [Documentation](https://docs.matic.network/docs/develop/network-details/network)\n   */\n\n  CustomChain[\"PolygonMumbai\"] = \"polygon-mumbai\";\n  /**\n   * Arbitrum Rinkeby Testnet\n   *\n   * - [Documentation](https://developer.offchainlabs.com/docs/public_testnet)\n   */\n\n  CustomChain[\"ArbitrumRinkebyTestnet\"] = \"arbitrum-rinkeby-testnet\";\n  /**\n   * Arbitrum One - mainnet for Arbitrum roll-up\n   *\n   * - [Documentation](https://developer.offchainlabs.com/public-chains)\n   */\n\n  CustomChain[\"ArbitrumOne\"] = \"arbitrum-one\";\n  /**\n   * xDai EVM sidechain with a native stable token\n   *\n   * - [Documentation](https://www.xdaichain.com/)\n   */\n\n  CustomChain[\"xDaiChain\"] = \"x-dai-chain\";\n  /**\n   * Optimistic Kovan - testnet for Optimism roll-up\n   *\n   * - [Documentation](https://community.optimism.io/docs/developers/tutorials.html)\n   */\n\n  CustomChain[\"OptimisticKovan\"] = \"optimistic-kovan\";\n  /**\n   * Optimistic Ethereum - mainnet for Optimism roll-up\n   *\n   * - [Documentation](https://community.optimism.io/docs/developers/tutorials.html)\n   */\n\n  CustomChain[\"OptimisticEthereum\"] = \"optimistic-ethereum\";\n})(CustomChain = exports.CustomChain || (exports.CustomChain = {}));","map":{"version":3,"mappings":";;;;;;AAAA;;;;;;;;;;;;;;;;;AAgBA,IAAYA,KAAZ;;AAAA,WAAYA,KAAZ,EAAiB;EAChBA;EACAA;EACAA;AACA,CAJD,EAAYA,KAAK,GAALC,kCAAK,EAAL,CAAZ;;AAMA,IAAYC,QAAZ;;AAAA,WAAYA,QAAZ,EAAoB;EACnBA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;AACA,CAnBD,EAAYA,QAAQ,GAARD,wCAAQ,EAAR,CAAZ;;AAqBA,IAAYE,aAAZ;;AAAA,WAAYA,aAAZ,EAAyB;EACxBA;EACAA;EACAA;AACA,CAJD,EAAYA,aAAa,GAAbF,kDAAa,EAAb,CAAZ;;AAMA,IAAYG,kBAAZ;;AAAA,WAAYA,kBAAZ,EAA8B;EAC7BA;EACAA;EACAA;AACA,CAJD,EAAYA,kBAAkB,GAAlBH,4DAAkB,EAAlB,CAAZ;;AAMA,IAAYI,WAAZ;;AAAA,WAAYA,WAAZ,EAAuB;EACtB;;;;;EAKAA;EAEA;;;;;;EAKAA;EAEA;;;;;;EAKAA;EAEA;;;;;;EAKAA;EAEA;;;;;;EAKAA;EAEA;;;;;;EAKAA;EAEA;;;;;;EAKAA;AACA,CAjDD,EAAYA,WAAW,GAAXJ,8CAAW,EAAX,CAAZ","names":["Chain","exports","Hardfork","ConsensusType","ConsensusAlgorithm","CustomChain"],"sources":["/home/rupam/Desktop/Faucet-React/node_modules/web3-eth-accounts/src/common/enums.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nexport enum Chain {\n\tMainnet = 1,\n\tGoerli = 5,\n\tSepolia = 11155111,\n}\n\nexport enum Hardfork {\n\tChainstart = 'chainstart',\n\tHomestead = 'homestead',\n\tDao = 'dao',\n\tTangerineWhistle = 'tangerineWhistle',\n\tSpuriousDragon = 'spuriousDragon',\n\tByzantium = 'byzantium',\n\tConstantinople = 'constantinople',\n\tPetersburg = 'petersburg',\n\tIstanbul = 'istanbul',\n\tMuirGlacier = 'muirGlacier',\n\tBerlin = 'berlin',\n\tLondon = 'london',\n\tArrowGlacier = 'arrowGlacier',\n\tGrayGlacier = 'grayGlacier',\n\tMergeForkIdTransition = 'mergeForkIdTransition',\n\tMerge = 'merge',\n\tShanghai = 'shanghai',\n\tShardingForkDev = 'shardingFork',\n}\n\nexport enum ConsensusType {\n\tProofOfStake = 'pos',\n\tProofOfWork = 'pow',\n\tProofOfAuthority = 'poa',\n}\n\nexport enum ConsensusAlgorithm {\n\tEthash = 'ethash',\n\tClique = 'clique',\n\tCasper = 'casper',\n}\n\nexport enum CustomChain {\n\t/**\n\t * Polygon (Matic) Mainnet\n\t *\n\t * - [Documentation](https://docs.matic.network/docs/develop/network-details/network)\n\t */\n\tPolygonMainnet = 'polygon-mainnet',\n\n\t/**\n\t * Polygon (Matic) Mumbai Testnet\n\t *\n\t * - [Documentation](https://docs.matic.network/docs/develop/network-details/network)\n\t */\n\tPolygonMumbai = 'polygon-mumbai',\n\n\t/**\n\t * Arbitrum Rinkeby Testnet\n\t *\n\t * - [Documentation](https://developer.offchainlabs.com/docs/public_testnet)\n\t */\n\tArbitrumRinkebyTestnet = 'arbitrum-rinkeby-testnet',\n\n\t/**\n\t * Arbitrum One - mainnet for Arbitrum roll-up\n\t *\n\t * - [Documentation](https://developer.offchainlabs.com/public-chains)\n\t */\n\tArbitrumOne = 'arbitrum-one',\n\n\t/**\n\t * xDai EVM sidechain with a native stable token\n\t *\n\t * - [Documentation](https://www.xdaichain.com/)\n\t */\n\txDaiChain = 'x-dai-chain',\n\n\t/**\n\t * Optimistic Kovan - testnet for Optimism roll-up\n\t *\n\t * - [Documentation](https://community.optimism.io/docs/developers/tutorials.html)\n\t */\n\tOptimisticKovan = 'optimistic-kovan',\n\n\t/**\n\t * Optimistic Ethereum - mainnet for Optimism roll-up\n\t *\n\t * - [Documentation](https://community.optimism.io/docs/developers/tutorials.html)\n\t */\n\tOptimisticEthereum = 'optimistic-ethereum',\n}\n"]},"metadata":{},"sourceType":"script"}