{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.pbkdf2Sync = exports.pbkdf2 = void 0;\n\nconst pbkdf2_1 = require(\"@noble/hashes/pbkdf2\");\n\nconst sha256_1 = require(\"@noble/hashes/sha256\");\n\nconst sha512_1 = require(\"@noble/hashes/sha512\");\n\nconst utils_js_1 = require(\"./utils.js\");\n\nasync function pbkdf2(password, salt, iterations, keylen, digest) {\n  if (![\"sha256\", \"sha512\"].includes(digest)) {\n    throw new Error(\"Only sha256 and sha512 are supported\");\n  }\n\n  (0, utils_js_1.assertBytes)(password);\n  (0, utils_js_1.assertBytes)(salt);\n  return (0, pbkdf2_1.pbkdf2Async)(digest === \"sha256\" ? sha256_1.sha256 : sha512_1.sha512, password, salt, {\n    c: iterations,\n    dkLen: keylen\n  });\n}\n\nexports.pbkdf2 = pbkdf2;\n\nfunction pbkdf2Sync(password, salt, iterations, keylen, digest) {\n  if (![\"sha256\", \"sha512\"].includes(digest)) {\n    throw new Error(\"Only sha256 and sha512 are supported\");\n  }\n\n  (0, utils_js_1.assertBytes)(password);\n  (0, utils_js_1.assertBytes)(salt);\n  return (0, pbkdf2_1.pbkdf2)(digest === \"sha256\" ? sha256_1.sha256 : sha512_1.sha512, password, salt, {\n    c: iterations,\n    dkLen: keylen\n  });\n}\n\nexports.pbkdf2Sync = pbkdf2Sync;","map":{"version":3,"names":["Object","defineProperty","exports","value","pbkdf2Sync","pbkdf2","pbkdf2_1","require","sha256_1","sha512_1","utils_js_1","password","salt","iterations","keylen","digest","includes","Error","assertBytes","pbkdf2Async","sha256","sha512","c","dkLen"],"sources":["/home/rupam/Desktop/Faucet-React/node_modules/ethereum-cryptography/pbkdf2.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.pbkdf2Sync = exports.pbkdf2 = void 0;\nconst pbkdf2_1 = require(\"@noble/hashes/pbkdf2\");\nconst sha256_1 = require(\"@noble/hashes/sha256\");\nconst sha512_1 = require(\"@noble/hashes/sha512\");\nconst utils_js_1 = require(\"./utils.js\");\nasync function pbkdf2(password, salt, iterations, keylen, digest) {\n    if (![\"sha256\", \"sha512\"].includes(digest)) {\n        throw new Error(\"Only sha256 and sha512 are supported\");\n    }\n    (0, utils_js_1.assertBytes)(password);\n    (0, utils_js_1.assertBytes)(salt);\n    return (0, pbkdf2_1.pbkdf2Async)(digest === \"sha256\" ? sha256_1.sha256 : sha512_1.sha512, password, salt, {\n        c: iterations,\n        dkLen: keylen\n    });\n}\nexports.pbkdf2 = pbkdf2;\nfunction pbkdf2Sync(password, salt, iterations, keylen, digest) {\n    if (![\"sha256\", \"sha512\"].includes(digest)) {\n        throw new Error(\"Only sha256 and sha512 are supported\");\n    }\n    (0, utils_js_1.assertBytes)(password);\n    (0, utils_js_1.assertBytes)(salt);\n    return (0, pbkdf2_1.pbkdf2)(digest === \"sha256\" ? sha256_1.sha256 : sha512_1.sha512, password, salt, {\n        c: iterations,\n        dkLen: keylen\n    });\n}\nexports.pbkdf2Sync = pbkdf2Sync;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,UAAR,GAAqBF,OAAO,CAACG,MAAR,GAAiB,KAAK,CAA3C;;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,sBAAD,CAAxB;;AACA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,sBAAD,CAAxB;;AACA,MAAME,QAAQ,GAAGF,OAAO,CAAC,sBAAD,CAAxB;;AACA,MAAMG,UAAU,GAAGH,OAAO,CAAC,YAAD,CAA1B;;AACA,eAAeF,MAAf,CAAsBM,QAAtB,EAAgCC,IAAhC,EAAsCC,UAAtC,EAAkDC,MAAlD,EAA0DC,MAA1D,EAAkE;EAC9D,IAAI,CAAC,CAAC,QAAD,EAAW,QAAX,EAAqBC,QAArB,CAA8BD,MAA9B,CAAL,EAA4C;IACxC,MAAM,IAAIE,KAAJ,CAAU,sCAAV,CAAN;EACH;;EACD,CAAC,GAAGP,UAAU,CAACQ,WAAf,EAA4BP,QAA5B;EACA,CAAC,GAAGD,UAAU,CAACQ,WAAf,EAA4BN,IAA5B;EACA,OAAO,CAAC,GAAGN,QAAQ,CAACa,WAAb,EAA0BJ,MAAM,KAAK,QAAX,GAAsBP,QAAQ,CAACY,MAA/B,GAAwCX,QAAQ,CAACY,MAA3E,EAAmFV,QAAnF,EAA6FC,IAA7F,EAAmG;IACtGU,CAAC,EAAET,UADmG;IAEtGU,KAAK,EAAET;EAF+F,CAAnG,CAAP;AAIH;;AACDZ,OAAO,CAACG,MAAR,GAAiBA,MAAjB;;AACA,SAASD,UAAT,CAAoBO,QAApB,EAA8BC,IAA9B,EAAoCC,UAApC,EAAgDC,MAAhD,EAAwDC,MAAxD,EAAgE;EAC5D,IAAI,CAAC,CAAC,QAAD,EAAW,QAAX,EAAqBC,QAArB,CAA8BD,MAA9B,CAAL,EAA4C;IACxC,MAAM,IAAIE,KAAJ,CAAU,sCAAV,CAAN;EACH;;EACD,CAAC,GAAGP,UAAU,CAACQ,WAAf,EAA4BP,QAA5B;EACA,CAAC,GAAGD,UAAU,CAACQ,WAAf,EAA4BN,IAA5B;EACA,OAAO,CAAC,GAAGN,QAAQ,CAACD,MAAb,EAAqBU,MAAM,KAAK,QAAX,GAAsBP,QAAQ,CAACY,MAA/B,GAAwCX,QAAQ,CAACY,MAAtE,EAA8EV,QAA9E,EAAwFC,IAAxF,EAA8F;IACjGU,CAAC,EAAET,UAD8F;IAEjGU,KAAK,EAAET;EAF0F,CAA9F,CAAP;AAIH;;AACDZ,OAAO,CAACE,UAAR,GAAqBA,UAArB"},"metadata":{},"sourceType":"script"}