{"ast":null,"code":"const {\n  ethers\n} = require(\"hardhat\");\n\nconst fs = require('fs'); // Replace these with your private key and network configuration\n\n\nconst PRIVATE_KEY = \"3fc744512ed8c4f80325781715ce481c18617ef0182414b5f0900b8f147bcb4d\";\nconst RPC_ENDPOINT = \"http://143.110.190.194:8547/\";\nexport async function createAndFundWallets(to_address) {\n  const provider = new ethers.providers.JsonRpcProvider(RPC_ENDPOINT);\n  const wallet = new ethers.Wallet(PRIVATE_KEY, provider);\n  const currentNonce = await provider.getTransactionCount(wallet.address, 'latest'); // Transfer native Ethereum tokens to the newly created wallet\n\n  const valueToSend = ethers.utils.parseEther('1'); // Change this value as needed\n\n  const transaction = {\n    to: to_address,\n    gasLimit: ethers.utils.hexlify(60000),\n    value: valueToSend,\n    nonce: currentNonce,\n    // Use the updated nonce here\n    chainId: 903011\n  };\n  const txResponse = await wallet.sendTransaction(transaction);\n  const txReceipt = await txResponse.wait(1);\n  console.log('Transaction sent:', txReceipt);\n}","map":{"version":3,"names":["ethers","require","fs","PRIVATE_KEY","RPC_ENDPOINT","createAndFundWallets","to_address","provider","providers","JsonRpcProvider","wallet","Wallet","currentNonce","getTransactionCount","address","valueToSend","utils","parseEther","transaction","to","gasLimit","hexlify","value","nonce","chainId","txResponse","sendTransaction","txReceipt","wait","console","log"],"sources":["/home/rupam/Desktop/Faucet-React/src/web3.js"],"sourcesContent":["const { ethers } = require(\"hardhat\");\nconst fs = require('fs');\n\n\n// Replace these with your private key and network configuration\nconst PRIVATE_KEY = \"3fc744512ed8c4f80325781715ce481c18617ef0182414b5f0900b8f147bcb4d\";\nconst RPC_ENDPOINT = \"http://143.110.190.194:8547/\";\n\n\nexport async function createAndFundWallets(to_address) {\n  const provider = new ethers.providers.JsonRpcProvider(RPC_ENDPOINT);\n  const wallet = new ethers.Wallet(PRIVATE_KEY, provider);\n\n    const currentNonce = await provider.getTransactionCount(wallet.address, 'latest');\n    \n    // Transfer native Ethereum tokens to the newly created wallet\n    const valueToSend = ethers.utils.parseEther('1'); // Change this value as needed\n    const transaction = {\n      to: to_address,\n      gasLimit: ethers.utils.hexlify(60000),\n      value: valueToSend,\n      nonce: currentNonce, // Use the updated nonce here\n      chainId: 903011,\n    };\n\n    const txResponse = await wallet.sendTransaction(transaction);\n    const txReceipt = await txResponse.wait(1)\n    console.log('Transaction sent:', txReceipt);\n}\n\n"],"mappings":"AAAA,MAAM;EAAEA;AAAF,IAAaC,OAAO,CAAC,SAAD,CAA1B;;AACA,MAAMC,EAAE,GAAGD,OAAO,CAAC,IAAD,CAAlB,C,CAGA;;;AACA,MAAME,WAAW,GAAG,kEAApB;AACA,MAAMC,YAAY,GAAG,8BAArB;AAGA,OAAO,eAAeC,oBAAf,CAAoCC,UAApC,EAAgD;EACrD,MAAMC,QAAQ,GAAG,IAAIP,MAAM,CAACQ,SAAP,CAAiBC,eAArB,CAAqCL,YAArC,CAAjB;EACA,MAAMM,MAAM,GAAG,IAAIV,MAAM,CAACW,MAAX,CAAkBR,WAAlB,EAA+BI,QAA/B,CAAf;EAEE,MAAMK,YAAY,GAAG,MAAML,QAAQ,CAACM,mBAAT,CAA6BH,MAAM,CAACI,OAApC,EAA6C,QAA7C,CAA3B,CAJmD,CAMnD;;EACA,MAAMC,WAAW,GAAGf,MAAM,CAACgB,KAAP,CAAaC,UAAb,CAAwB,GAAxB,CAApB,CAPmD,CAOD;;EAClD,MAAMC,WAAW,GAAG;IAClBC,EAAE,EAAEb,UADc;IAElBc,QAAQ,EAAEpB,MAAM,CAACgB,KAAP,CAAaK,OAAb,CAAqB,KAArB,CAFQ;IAGlBC,KAAK,EAAEP,WAHW;IAIlBQ,KAAK,EAAEX,YAJW;IAIG;IACrBY,OAAO,EAAE;EALS,CAApB;EAQA,MAAMC,UAAU,GAAG,MAAMf,MAAM,CAACgB,eAAP,CAAuBR,WAAvB,CAAzB;EACA,MAAMS,SAAS,GAAG,MAAMF,UAAU,CAACG,IAAX,CAAgB,CAAhB,CAAxB;EACAC,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCH,SAAjC;AACH"},"metadata":{},"sourceType":"module"}