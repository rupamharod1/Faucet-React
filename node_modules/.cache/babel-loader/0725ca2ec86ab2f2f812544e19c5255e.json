{"ast":null,"code":"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nexport class BaseWeb3Error extends Error {\n  constructor(msg, innerError) {\n    super(msg);\n    this.innerError = innerError;\n    this.name = this.constructor.name;\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(new.target.constructor);\n    } else {\n      this.stack = new Error().stack;\n    }\n  }\n\n  static convertToString(value) {\n    let unquotValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    // Using \"null\" value intentionally for validation\n    // eslint-disable-next-line no-null/no-null\n    if (value === null || value === undefined) return 'undefined';\n    const result = JSON.stringify(value, (_, v) => typeof v === 'bigint' ? v.toString() : v);\n    return unquotValue && ['bigint', 'string'].includes(typeof value) ? result.replace(/['\\\\\"]+/g, '') : result;\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      code: this.code,\n      message: this.message,\n      innerError: this.innerError\n    };\n  }\n\n}\nexport class InvalidValueError extends BaseWeb3Error {\n  constructor(value, msg) {\n    super(`Invalid value given \"${BaseWeb3Error.convertToString(value, true)}\". Error: ${msg}.`);\n    this.name = this.constructor.name;\n  }\n\n}","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAqBA,OAAM,MAAgBA,aAAhB,SAAsCC,KAAtC,CAA2C;EAMhDC,YAAmBC,GAAnB,EAAiCC,UAAjC,EAA6D;IAC5D,MAAMD,GAAN;IACA,KAAKC,UAAL,GAAkBA,UAAlB;IACA,KAAKC,IAAL,GAAY,KAAKH,WAAL,CAAiBG,IAA7B;;IAEA,IAAI,OAAOJ,KAAK,CAACK,iBAAb,KAAmC,UAAvC,EAAmD;MAClDL,KAAK,CAACK,iBAAN,CAAwBC,GAAG,CAACC,MAAJ,CAAWN,WAAnC;IACA,CAFD,MAEO;MACN,KAAKO,KAAL,GAAa,IAAIR,KAAJ,GAAYQ,KAAzB;IACA;EACD;;EAE4B,OAAfC,eAAe,CAACC,KAAD,EAAoC;IAAA,IAAnBC,WAAmB,uEAAL,KAAK;IAChE;IACA;IACA,IAAID,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAKE,SAAhC,EAA2C,OAAO,WAAP;IAE3C,MAAMC,MAAM,GAAGC,IAAI,CAACC,SAAL,CACdL,KADc,EAEd,CAACM,CAAD,EAAIC,CAAJ,KAAW,OAAOA,CAAP,KAAa,QAAb,GAAwBA,CAAC,CAACC,QAAF,EAAxB,GAAuCD,CAFpC,CAAf;IAKA,OAAON,WAAW,IAAI,CAAC,QAAD,EAAW,QAAX,EAAqBQ,QAArB,CAA8B,OAAOT,KAArC,CAAf,GACJG,MAAM,CAACO,OAAP,CAAe,UAAf,EAA2B,EAA3B,CADI,GAEJP,MAFH;EAGA;;EAEMQ,MAAM;IACZ,OAAO;MACNjB,IAAI,EAAE,KAAKA,IADL;MAENkB,IAAI,EAAE,KAAKA,IAFL;MAGNC,OAAO,EAAE,KAAKA,OAHR;MAINpB,UAAU,EAAE,KAAKA;IAJX,CAAP;EAMA;;AAxC+C;AA2CjD,OAAM,MAAgBqB,iBAAhB,SAA0CzB,aAA1C,CAAuD;EAG5DE,YAAmBS,KAAnB,EAAmCR,GAAnC,EAA8C;IAC7C,MACC,wBAAwBH,aAAa,CAACU,eAAd,CAA8BC,KAA9B,EAAqC,IAArC,CAA0C,aAAaR,GAAG,GADnF;IAGA,KAAKE,IAAL,GAAY,KAAKH,WAAL,CAAiBG,IAA7B;EACA;;AAR2D","names":["BaseWeb3Error","Error","constructor","msg","innerError","name","captureStackTrace","new","target","stack","convertToString","value","unquotValue","undefined","result","JSON","stringify","_","v","toString","includes","replace","toJSON","code","message","InvalidValueError"],"sources":["/home/rupam/Desktop/Faucet-React/node_modules/web3-errors/src/web3_error_base.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/* eslint-disable max-classes-per-file */\n\nimport { Web3Error } from 'web3-types';\n\nexport abstract class BaseWeb3Error extends Error implements Web3Error {\n\tpublic readonly name: string;\n\tpublic abstract readonly code: number;\n\tpublic stack: string | undefined;\n\tpublic innerError: Error | Error[] | undefined;\n\n\tpublic constructor(msg?: string, innerError?: Error | Error[]) {\n\t\tsuper(msg);\n\t\tthis.innerError = innerError;\n\t\tthis.name = this.constructor.name;\n\n\t\tif (typeof Error.captureStackTrace === 'function') {\n\t\t\tError.captureStackTrace(new.target.constructor);\n\t\t} else {\n\t\t\tthis.stack = new Error().stack;\n\t\t}\n\t}\n\n\tpublic static convertToString(value: unknown, unquotValue = false) {\n\t\t// Using \"null\" value intentionally for validation\n\t\t// eslint-disable-next-line no-null/no-null\n\t\tif (value === null || value === undefined) return 'undefined';\n\n\t\tconst result = JSON.stringify(\n\t\t\tvalue,\n\t\t\t(_, v) => (typeof v === 'bigint' ? v.toString() : v) as unknown,\n\t\t);\n\n\t\treturn unquotValue && ['bigint', 'string'].includes(typeof value)\n\t\t\t? result.replace(/['\\\\\"]+/g, '')\n\t\t\t: result;\n\t}\n\n\tpublic toJSON() {\n\t\treturn {\n\t\t\tname: this.name,\n\t\t\tcode: this.code,\n\t\t\tmessage: this.message,\n\t\t\tinnerError: this.innerError,\n\t\t};\n\t}\n}\n\nexport abstract class InvalidValueError extends BaseWeb3Error {\n\tpublic readonly name: string;\n\n\tpublic constructor(value: unknown, msg: string) {\n\t\tsuper(\n\t\t\t`Invalid value given \"${BaseWeb3Error.convertToString(value, true)}\". Error: ${msg}.`,\n\t\t);\n\t\tthis.name = this.constructor.name;\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}