{"ast":null,"code":"import assert from \"@noble/hashes/_assert\";\nimport { hexToBytes as _hexToBytes } from \"@noble/hashes/utils\";\nconst assertBool = assert.bool;\nconst assertBytes = assert.bytes;\nexport { assertBool, assertBytes };\nexport { bytesToHex, bytesToHex as toHex, concatBytes, createView, utf8ToBytes } from \"@noble/hashes/utils\"; // buf.toString('utf8') -> bytesToUtf8(buf)\n\nexport function bytesToUtf8(data) {\n  if (!(data instanceof Uint8Array)) {\n    throw new TypeError(`bytesToUtf8 expected Uint8Array, got ${typeof data}`);\n  }\n\n  return new TextDecoder().decode(data);\n}\nexport function hexToBytes(data) {\n  const sliced = data.startsWith(\"0x\") ? data.substring(2) : data;\n  return _hexToBytes(sliced);\n} // buf.equals(buf2) -> equalsBytes(buf, buf2)\n\nexport function equalsBytes(a, b) {\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  for (let i = 0; i < a.length; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n\n  return true;\n} // Internal utils\n\nexport function wrapHash(hash) {\n  return msg => {\n    assert.bytes(msg);\n    return hash(msg);\n  };\n} // TODO(v3): switch away from node crypto, remove this unnecessary variable.\n\nexport const crypto = (() => {\n  const webCrypto = typeof globalThis === \"object\" && \"crypto\" in globalThis ? globalThis.crypto : undefined;\n\n  const nodeRequire = typeof module !== \"undefined\" && typeof module.require === \"function\" && module.require.bind(module);\n\n  return {\n    node: nodeRequire && !webCrypto ? nodeRequire(\"crypto\") : undefined,\n    web: webCrypto\n  };\n})();","map":{"version":3,"names":["assert","hexToBytes","_hexToBytes","assertBool","bool","assertBytes","bytes","bytesToHex","toHex","concatBytes","createView","utf8ToBytes","bytesToUtf8","data","Uint8Array","TypeError","TextDecoder","decode","sliced","startsWith","substring","equalsBytes","a","b","length","i","wrapHash","hash","msg","crypto","webCrypto","globalThis","undefined","nodeRequire","module","require","bind","node","web"],"sources":["/home/rupam/Desktop/Faucet-React/node_modules/ethereum-cryptography/esm/utils.js"],"sourcesContent":["import assert from \"@noble/hashes/_assert\";\nimport { hexToBytes as _hexToBytes } from \"@noble/hashes/utils\";\nconst assertBool = assert.bool;\nconst assertBytes = assert.bytes;\nexport { assertBool, assertBytes };\nexport { bytesToHex, bytesToHex as toHex, concatBytes, createView, utf8ToBytes } from \"@noble/hashes/utils\";\n// buf.toString('utf8') -> bytesToUtf8(buf)\nexport function bytesToUtf8(data) {\n    if (!(data instanceof Uint8Array)) {\n        throw new TypeError(`bytesToUtf8 expected Uint8Array, got ${typeof data}`);\n    }\n    return new TextDecoder().decode(data);\n}\nexport function hexToBytes(data) {\n    const sliced = data.startsWith(\"0x\") ? data.substring(2) : data;\n    return _hexToBytes(sliced);\n}\n// buf.equals(buf2) -> equalsBytes(buf, buf2)\nexport function equalsBytes(a, b) {\n    if (a.length !== b.length) {\n        return false;\n    }\n    for (let i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n// Internal utils\nexport function wrapHash(hash) {\n    return (msg) => {\n        assert.bytes(msg);\n        return hash(msg);\n    };\n}\n// TODO(v3): switch away from node crypto, remove this unnecessary variable.\nexport const crypto = (() => {\n    const webCrypto = typeof globalThis === \"object\" && \"crypto\" in globalThis ? globalThis.crypto : undefined;\n    const nodeRequire = typeof module !== \"undefined\" &&\n        typeof module.require === \"function\" &&\n        module.require.bind(module);\n    return {\n        node: nodeRequire && !webCrypto ? nodeRequire(\"crypto\") : undefined,\n        web: webCrypto\n    };\n})();\n"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,uBAAnB;AACA,SAASC,UAAU,IAAIC,WAAvB,QAA0C,qBAA1C;AACA,MAAMC,UAAU,GAAGH,MAAM,CAACI,IAA1B;AACA,MAAMC,WAAW,GAAGL,MAAM,CAACM,KAA3B;AACA,SAASH,UAAT,EAAqBE,WAArB;AACA,SAASE,UAAT,EAAqBA,UAAU,IAAIC,KAAnC,EAA0CC,WAA1C,EAAuDC,UAAvD,EAAmEC,WAAnE,QAAsF,qBAAtF,C,CACA;;AACA,OAAO,SAASC,WAAT,CAAqBC,IAArB,EAA2B;EAC9B,IAAI,EAAEA,IAAI,YAAYC,UAAlB,CAAJ,EAAmC;IAC/B,MAAM,IAAIC,SAAJ,CAAe,wCAAuC,OAAOF,IAAK,EAAlE,CAAN;EACH;;EACD,OAAO,IAAIG,WAAJ,GAAkBC,MAAlB,CAAyBJ,IAAzB,CAAP;AACH;AACD,OAAO,SAASZ,UAAT,CAAoBY,IAApB,EAA0B;EAC7B,MAAMK,MAAM,GAAGL,IAAI,CAACM,UAAL,CAAgB,IAAhB,IAAwBN,IAAI,CAACO,SAAL,CAAe,CAAf,CAAxB,GAA4CP,IAA3D;EACA,OAAOX,WAAW,CAACgB,MAAD,CAAlB;AACH,C,CACD;;AACA,OAAO,SAASG,WAAT,CAAqBC,CAArB,EAAwBC,CAAxB,EAA2B;EAC9B,IAAID,CAAC,CAACE,MAAF,KAAaD,CAAC,CAACC,MAAnB,EAA2B;IACvB,OAAO,KAAP;EACH;;EACD,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,CAAC,CAACE,MAAtB,EAA8BC,CAAC,EAA/B,EAAmC;IAC/B,IAAIH,CAAC,CAACG,CAAD,CAAD,KAASF,CAAC,CAACE,CAAD,CAAd,EAAmB;MACf,OAAO,KAAP;IACH;EACJ;;EACD,OAAO,IAAP;AACH,C,CACD;;AACA,OAAO,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;EAC3B,OAAQC,GAAD,IAAS;IACZ5B,MAAM,CAACM,KAAP,CAAasB,GAAb;IACA,OAAOD,IAAI,CAACC,GAAD,CAAX;EACH,CAHD;AAIH,C,CACD;;AACA,OAAO,MAAMC,MAAM,GAAG,CAAC,MAAM;EACzB,MAAMC,SAAS,GAAG,OAAOC,UAAP,KAAsB,QAAtB,IAAkC,YAAYA,UAA9C,GAA2DA,UAAU,CAACF,MAAtE,GAA+EG,SAAjG;;EACA,MAAMC,WAAW,GAAG,OAAOC,MAAP,KAAkB,WAAlB,IAChB,OAAOA,MAAM,CAACC,OAAd,KAA0B,UADV,IAEhBD,MAAM,CAACC,OAAP,CAAeC,IAAf,CAAoBF,MAApB,CAFJ;;EAGA,OAAO;IACHG,IAAI,EAAEJ,WAAW,IAAI,CAACH,SAAhB,GAA4BG,WAAW,CAAC,QAAD,CAAvC,GAAoDD,SADvD;IAEHM,GAAG,EAAER;EAFF,CAAP;AAIH,CATqB,GAAf"},"metadata":{},"sourceType":"module"}