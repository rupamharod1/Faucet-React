{"ast":null,"code":"\"use strict\";\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.decodeParamFromAbiParameter = exports.encodeParamFromAbiParameter = exports.decodeArray = exports.encodeArray = exports.decodeTuple = exports.encodeTuple = exports.decodeString = exports.encodeString = exports.decodeNumber = exports.encodeNumber = exports.decodeBytes = exports.encodeBytes = exports.decodeBool = exports.encodeBoolean = exports.decodeAddress = exports.encodeAddress = void 0;\n\nconst address_js_1 = require(\"./address.js\");\n\nconst bool_js_1 = require(\"./bool.js\");\n\nconst bytes_js_1 = require(\"./bytes.js\");\n\nconst number_js_1 = require(\"./number.js\");\n\nconst string_js_1 = require(\"./string.js\"); // eslint-disable-next-line import/no-cycle\n\n\nconst tuple_js_1 = require(\"./tuple.js\"); // eslint-disable-next-line import/no-cycle\n\n\nconst array_js_1 = require(\"./array.js\");\n\nvar address_js_2 = require(\"./address.js\");\n\nObject.defineProperty(exports, \"encodeAddress\", {\n  enumerable: true,\n  get: function () {\n    return address_js_2.encodeAddress;\n  }\n});\nObject.defineProperty(exports, \"decodeAddress\", {\n  enumerable: true,\n  get: function () {\n    return address_js_2.decodeAddress;\n  }\n});\n\nvar bool_js_2 = require(\"./bool.js\");\n\nObject.defineProperty(exports, \"encodeBoolean\", {\n  enumerable: true,\n  get: function () {\n    return bool_js_2.encodeBoolean;\n  }\n});\nObject.defineProperty(exports, \"decodeBool\", {\n  enumerable: true,\n  get: function () {\n    return bool_js_2.decodeBool;\n  }\n});\n\nvar bytes_js_2 = require(\"./bytes.js\");\n\nObject.defineProperty(exports, \"encodeBytes\", {\n  enumerable: true,\n  get: function () {\n    return bytes_js_2.encodeBytes;\n  }\n});\nObject.defineProperty(exports, \"decodeBytes\", {\n  enumerable: true,\n  get: function () {\n    return bytes_js_2.decodeBytes;\n  }\n});\n\nvar number_js_2 = require(\"./number.js\");\n\nObject.defineProperty(exports, \"encodeNumber\", {\n  enumerable: true,\n  get: function () {\n    return number_js_2.encodeNumber;\n  }\n});\nObject.defineProperty(exports, \"decodeNumber\", {\n  enumerable: true,\n  get: function () {\n    return number_js_2.decodeNumber;\n  }\n});\n\nvar string_js_2 = require(\"./string.js\");\n\nObject.defineProperty(exports, \"encodeString\", {\n  enumerable: true,\n  get: function () {\n    return string_js_2.encodeString;\n  }\n});\nObject.defineProperty(exports, \"decodeString\", {\n  enumerable: true,\n  get: function () {\n    return string_js_2.decodeString;\n  }\n}); // eslint-disable-next-line import/no-cycle\n\nvar tuple_js_2 = require(\"./tuple.js\");\n\nObject.defineProperty(exports, \"encodeTuple\", {\n  enumerable: true,\n  get: function () {\n    return tuple_js_2.encodeTuple;\n  }\n});\nObject.defineProperty(exports, \"decodeTuple\", {\n  enumerable: true,\n  get: function () {\n    return tuple_js_2.decodeTuple;\n  }\n}); // eslint-disable-next-line import/no-cycle\n\nvar array_js_2 = require(\"./array.js\");\n\nObject.defineProperty(exports, \"encodeArray\", {\n  enumerable: true,\n  get: function () {\n    return array_js_2.encodeArray;\n  }\n});\nObject.defineProperty(exports, \"decodeArray\", {\n  enumerable: true,\n  get: function () {\n    return array_js_2.decodeArray;\n  }\n});\n\nfunction encodeParamFromAbiParameter(param, value) {\n  if (param.type === 'string') {\n    return (0, string_js_1.encodeString)(param, value);\n  }\n\n  if (param.type === 'bool') {\n    return (0, bool_js_1.encodeBoolean)(param, value);\n  }\n\n  if (param.type === 'address') {\n    return (0, address_js_1.encodeAddress)(param, value);\n  }\n\n  if (param.type === 'tuple') {\n    return (0, tuple_js_1.encodeTuple)(param, value);\n  }\n\n  if (param.type.endsWith(']')) {\n    return (0, array_js_1.encodeArray)(param, value);\n  }\n\n  if (param.type.startsWith('bytes')) {\n    return (0, bytes_js_1.encodeBytes)(param, value);\n  }\n\n  if (param.type.startsWith('uint') || param.type.startsWith('int')) {\n    return (0, number_js_1.encodeNumber)(param, value);\n  }\n\n  throw new Error('Unsupported');\n}\n\nexports.encodeParamFromAbiParameter = encodeParamFromAbiParameter;\n\nfunction decodeParamFromAbiParameter(param, bytes) {\n  if (param.type === 'string') {\n    return (0, string_js_1.decodeString)(param, bytes);\n  }\n\n  if (param.type === 'bool') {\n    return (0, bool_js_1.decodeBool)(param, bytes);\n  }\n\n  if (param.type === 'address') {\n    return (0, address_js_1.decodeAddress)(param, bytes);\n  }\n\n  if (param.type === 'tuple') {\n    return (0, tuple_js_1.decodeTuple)(param, bytes);\n  }\n\n  if (param.type.endsWith(']')) {\n    return (0, array_js_1.decodeArray)(param, bytes);\n  }\n\n  if (param.type.startsWith('bytes')) {\n    return (0, bytes_js_1.decodeBytes)(param, bytes);\n  }\n\n  if (param.type.startsWith('uint') || param.type.startsWith('int')) {\n    return (0, number_js_1.decodeNumber)(param, bytes);\n  }\n\n  throw new Error('Unsupported');\n}\n\nexports.decodeParamFromAbiParameter = decodeParamFromAbiParameter;","map":{"version":3,"mappings":"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","names":["Object","enumerable","get","encodeParamFromAbiParameter","param","value","type","endsWith","startsWith","Error","exports","decodeParamFromAbiParameter","bytes"],"sources":["/home/rupam/Desktop/Faucet-React/node_modules/web3-eth-abi/src/coders/base/index.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { AbiParameter } from 'web3-types';\nimport { EncoderResult, DecoderResult } from '../types.js';\nimport { decodeAddress, encodeAddress } from './address.js';\nimport { decodeBool, encodeBoolean } from './bool.js';\nimport { decodeBytes, encodeBytes } from './bytes.js';\nimport { decodeNumber, encodeNumber } from './number.js';\nimport { decodeString, encodeString } from './string.js';\n// eslint-disable-next-line import/no-cycle\nimport { decodeTuple, encodeTuple } from './tuple.js';\n// eslint-disable-next-line import/no-cycle\nimport { decodeArray, encodeArray } from './array.js';\n\nexport { encodeAddress, decodeAddress } from './address.js';\nexport { encodeBoolean, decodeBool } from './bool.js';\nexport { encodeBytes, decodeBytes } from './bytes.js';\nexport { encodeNumber, decodeNumber } from './number.js';\nexport { encodeString, decodeString } from './string.js';\n// eslint-disable-next-line import/no-cycle\nexport { encodeTuple, decodeTuple } from './tuple.js';\n// eslint-disable-next-line import/no-cycle\nexport { encodeArray, decodeArray } from './array.js';\n\nexport function encodeParamFromAbiParameter(param: AbiParameter, value: unknown): EncoderResult {\n\tif (param.type === 'string') {\n\t\treturn encodeString(param, value);\n\t}\n\tif (param.type === 'bool') {\n\t\treturn encodeBoolean(param, value);\n\t}\n\tif (param.type === 'address') {\n\t\treturn encodeAddress(param, value);\n\t}\n\tif (param.type === 'tuple') {\n\t\treturn encodeTuple(param, value);\n\t}\n\tif (param.type.endsWith(']')) {\n\t\treturn encodeArray(param, value);\n\t}\n\tif (param.type.startsWith('bytes')) {\n\t\treturn encodeBytes(param, value);\n\t}\n\tif (param.type.startsWith('uint') || param.type.startsWith('int')) {\n\t\treturn encodeNumber(param, value);\n\t}\n\tthrow new Error('Unsupported');\n}\n\nexport function decodeParamFromAbiParameter(param: AbiParameter, bytes: Uint8Array): DecoderResult {\n\tif (param.type === 'string') {\n\t\treturn decodeString(param, bytes);\n\t}\n\tif (param.type === 'bool') {\n\t\treturn decodeBool(param, bytes);\n\t}\n\tif (param.type === 'address') {\n\t\treturn decodeAddress(param, bytes);\n\t}\n\tif (param.type === 'tuple') {\n\t\treturn decodeTuple(param, bytes);\n\t}\n\tif (param.type.endsWith(']')) {\n\t\treturn decodeArray(param, bytes);\n\t}\n\tif (param.type.startsWith('bytes')) {\n\t\treturn decodeBytes(param, bytes);\n\t}\n\tif (param.type.startsWith('uint') || param.type.startsWith('int')) {\n\t\treturn decodeNumber(param, bytes);\n\t}\n\tthrow new Error('Unsupported');\n}\n"]},"metadata":{},"sourceType":"script"}