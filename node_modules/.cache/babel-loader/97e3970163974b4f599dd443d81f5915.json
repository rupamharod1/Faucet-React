{"ast":null,"code":"\"use strict\";\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.decodeContractErrorData = void 0;\n\nconst errors_api_js_1 = require(\"./api/errors_api.js\");\n\nconst parameters_api_js_1 = require(\"./api/parameters_api.js\");\n\nconst utils_js_1 = require(\"./utils.js\");\n\nconst decodeContractErrorData = (errorsAbi, error) => {\n  if (error === null || error === void 0 ? void 0 : error.data) {\n    let errorName;\n    let errorSignature;\n    let errorArgs;\n\n    try {\n      const errorSha = error.data.slice(0, 10);\n      const errorAbi = errorsAbi.find(abi => (0, errors_api_js_1.encodeErrorSignature)(abi).startsWith(errorSha));\n\n      if (errorAbi === null || errorAbi === void 0 ? void 0 : errorAbi.inputs) {\n        errorName = errorAbi.name;\n        errorSignature = (0, utils_js_1.jsonInterfaceMethodToString)(errorAbi); // decode abi.inputs according to EIP-838\n\n        errorArgs = (0, parameters_api_js_1.decodeParameters)([...errorAbi.inputs], error.data.substring(10));\n      }\n    } catch (err) {\n      console.error(err);\n    }\n\n    if (errorName) {\n      error.setDecodedProperties(errorName, errorSignature, errorArgs);\n    }\n  }\n};\n\nexports.decodeContractErrorData = decodeContractErrorData;","map":{"version":3,"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;AAoBA;;AACA;;AACA;;AAEO,MAAMA,uBAAuB,GAAG,CACtCC,SADsC,EAEtCC,KAFsC,KAGnC;EACH,IAAIA,KAAK,SAAL,SAAK,WAAL,GAAK,MAAL,QAAK,CAAEC,IAAX,EAAiB;IAChB,IAAIC,SAAJ;IACA,IAAIC,cAAJ;IACA,IAAIC,SAAJ;;IACA,IAAI;MACH,MAAMC,QAAQ,GAAGL,KAAK,CAACC,IAAN,CAAWK,KAAX,CAAiB,CAAjB,EAAoB,EAApB,CAAjB;MACA,MAAMC,QAAQ,GAAGR,SAAS,CAACS,IAAV,CAAeC,GAAG,IAAI,0CAAqBA,GAArB,EAA0BC,UAA1B,CAAqCL,QAArC,CAAtB,CAAjB;;MAEA,IAAIE,QAAQ,SAAR,YAAQ,WAAR,GAAQ,MAAR,WAAQ,CAAEI,MAAd,EAAsB;QACrBT,SAAS,GAAGK,QAAQ,CAACK,IAArB;QACAT,cAAc,GAAG,4CAA4BI,QAA5B,CAAjB,CAFqB,CAGrB;;QACAH,SAAS,GAAG,0CAAiB,CAAC,GAAGG,QAAQ,CAACI,MAAb,CAAjB,EAAuCX,KAAK,CAACC,IAAN,CAAWY,SAAX,CAAqB,EAArB,CAAvC,CAAZ;MACA;IACD,CAVD,CAUE,OAAOC,GAAP,EAAY;MACbC,OAAO,CAACf,KAAR,CAAcc,GAAd;IACA;;IACD,IAAIZ,SAAJ,EAAe;MACdF,KAAK,CAACgB,oBAAN,CAA2Bd,SAA3B,EAAsCC,cAAtC,EAAsDC,SAAtD;IACA;EACD;AACD,CAzBM;;AAAMa,kCAAuBnB,uBAAvB","names":["decodeContractErrorData","errorsAbi","error","data","errorName","errorSignature","errorArgs","errorSha","slice","errorAbi","find","abi","startsWith","inputs","name","substring","err","console","setDecodedProperties","exports"],"sources":["/home/rupam/Desktop/Faucet-React/node_modules/web3-eth-abi/src/decode_contract_error_data.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { Eip838ExecutionError } from 'web3-errors';\nimport { AbiErrorFragment } from 'web3-types';\n\nimport { encodeErrorSignature } from './api/errors_api.js';\nimport { decodeParameters } from './api/parameters_api.js';\nimport { jsonInterfaceMethodToString } from './utils.js';\n\nexport const decodeContractErrorData = (\n\terrorsAbi: AbiErrorFragment[],\n\terror: Eip838ExecutionError,\n) => {\n\tif (error?.data) {\n\t\tlet errorName: string | undefined;\n\t\tlet errorSignature: string | undefined;\n\t\tlet errorArgs: { [K in string]: unknown } | undefined;\n\t\ttry {\n\t\t\tconst errorSha = error.data.slice(0, 10);\n\t\t\tconst errorAbi = errorsAbi.find(abi => encodeErrorSignature(abi).startsWith(errorSha));\n\n\t\t\tif (errorAbi?.inputs) {\n\t\t\t\terrorName = errorAbi.name;\n\t\t\t\terrorSignature = jsonInterfaceMethodToString(errorAbi);\n\t\t\t\t// decode abi.inputs according to EIP-838\n\t\t\t\terrorArgs = decodeParameters([...errorAbi.inputs], error.data.substring(10));\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.error(err);\n\t\t}\n\t\tif (errorName) {\n\t\t\terror.setDecodedProperties(errorName, errorSignature, errorArgs);\n\t\t}\n\t}\n};\n"]},"metadata":{},"sourceType":"script"}