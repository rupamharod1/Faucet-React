{"ast":null,"code":"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n// eslint-disable-next-line max-classes-per-file\nimport { Web3Context, isSupportedProvider } from 'web3-core';\nimport { Web3Eth, registeredSubscriptions } from 'web3-eth';\nimport Contract from 'web3-eth-contract';\nimport { ENS, registryAddresses } from 'web3-eth-ens';\nimport { Iban } from 'web3-eth-iban';\nimport { Personal } from 'web3-eth-personal';\nimport { Net } from 'web3-net';\nimport * as utils from 'web3-utils';\nimport { isNullish } from 'web3-utils';\nimport { InvalidMethodParamsError } from 'web3-errors';\nimport abi from './abi.js';\nimport { initAccountsForContext } from './accounts.js';\nimport { Web3PkgInfo } from './version.js';\nexport class Web3 extends Web3Context {\n  constructor(providerOrContext) {\n    var _a;\n\n    if (isNullish(providerOrContext) || typeof providerOrContext === 'string' && providerOrContext.trim() === '' || typeof providerOrContext !== 'string' && !isSupportedProvider(providerOrContext) && !providerOrContext.provider) {\n      console.warn('NOTE: web3.js is running without provider. You need to pass a provider in order to interact with the network!');\n    }\n\n    let contextInitOptions = {};\n\n    if (typeof providerOrContext === 'string' || isSupportedProvider(providerOrContext)) {\n      contextInitOptions.provider = providerOrContext;\n    } else if (providerOrContext) {\n      contextInitOptions = providerOrContext;\n    } else {\n      contextInitOptions = {};\n    }\n\n    contextInitOptions.registeredSubscriptions = Object.assign(Object.assign({}, registeredSubscriptions), (_a = contextInitOptions.registeredSubscriptions) !== null && _a !== void 0 ? _a : {});\n    super(contextInitOptions);\n    const accounts = initAccountsForContext(this); // Init protected properties\n\n    this._wallet = accounts.wallet;\n    this._accountProvider = accounts;\n    this.utils = utils; // Have to use local alias to initiate contract context\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n\n    const self = this;\n\n    class ContractBuilder extends Contract {\n      constructor(jsonInterface, addressOrOptions, options) {\n        if (typeof addressOrOptions === 'object' && typeof options === 'object') {\n          throw new InvalidMethodParamsError('Should not provide options at both 2nd and 3rd parameters');\n        }\n\n        if (isNullish(addressOrOptions)) {\n          super(jsonInterface, options, self.getContextObject());\n        } else if (typeof addressOrOptions === 'object') {\n          super(jsonInterface, addressOrOptions, self.getContextObject());\n        } else if (typeof addressOrOptions === 'string') {\n          super(jsonInterface, addressOrOptions, options !== null && options !== void 0 ? options : {}, self.getContextObject());\n        } else {\n          throw new InvalidMethodParamsError();\n        }\n\n        super.subscribeToContextEvents(self);\n      }\n\n    }\n\n    const eth = self.use(Web3Eth); // Eth Module\n\n    this.eth = Object.assign(eth, {\n      // ENS module\n      ens: self.use(ENS, registryAddresses.main),\n      // Iban helpers\n      Iban,\n      net: self.use(Net),\n      personal: self.use(Personal),\n      // Contract helper and module\n      Contract: ContractBuilder,\n      // ABI Helpers\n      abi,\n      // Accounts helper\n      accounts\n    });\n  }\n\n}\nWeb3.version = Web3PkgInfo.version;\nWeb3.utils = utils;\nWeb3.modules = {\n  Web3Eth,\n  Iban,\n  Net,\n  ENS,\n  Personal\n};\nexport default Web3;","map":{"version":3,"mappings":"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","names":["Web3Context","isSupportedProvider","Web3Eth","registeredSubscriptions","Contract","ENS","registryAddresses","Iban","Personal","Net","utils","isNullish","InvalidMethodParamsError","abi","initAccountsForContext","Web3PkgInfo","Web3","constructor","providerOrContext","trim","provider","console","warn","contextInitOptions","Object","_a","accounts","_wallet","wallet","_accountProvider","self","ContractBuilder","jsonInterface","addressOrOptions","options","getContextObject","subscribeToContextEvents","eth","use","assign","ens","main","net","personal","version"],"sources":["/home/rupam/Desktop/Faucet-React/node_modules/web3/src/web3.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n// eslint-disable-next-line max-classes-per-file\nimport {\n\tWeb3Context,\n\tWeb3ContextInitOptions,\n\tWeb3ContextObject,\n\tWeb3SubscriptionConstructor,\n\tisSupportedProvider,\n} from 'web3-core';\nimport { Web3Eth, RegisteredSubscription, registeredSubscriptions } from 'web3-eth';\nimport Contract from 'web3-eth-contract';\nimport { ENS, registryAddresses } from 'web3-eth-ens';\nimport { Iban } from 'web3-eth-iban';\nimport { Personal } from 'web3-eth-personal';\nimport { Net } from 'web3-net';\nimport * as utils from 'web3-utils';\nimport { isNullish } from 'web3-utils';\nimport {\n\tAddress,\n\tContractAbi,\n\tContractInitOptions,\n\tEthExecutionAPI,\n\tSupportedProviders,\n} from 'web3-types';\nimport { InvalidMethodParamsError } from 'web3-errors';\nimport abi from './abi.js';\nimport { initAccountsForContext } from './accounts.js';\nimport { Web3EthInterface } from './types.js';\nimport { Web3PkgInfo } from './version.js';\n\nexport class Web3<\n\tCustomRegisteredSubscription extends {\n\t\t[key: string]: Web3SubscriptionConstructor<EthExecutionAPI>;\n\t} = RegisteredSubscription,\n> extends Web3Context<EthExecutionAPI, CustomRegisteredSubscription & RegisteredSubscription> {\n\tpublic static version = Web3PkgInfo.version;\n\tpublic static utils = utils;\n\tpublic static modules = {\n\t\tWeb3Eth,\n\t\tIban,\n\t\tNet,\n\t\tENS,\n\t\tPersonal,\n\t};\n\n\tpublic utils: typeof utils;\n\n\tpublic eth: Web3EthInterface;\n\n\tpublic constructor(\n\t\tproviderOrContext?:\n\t\t\t| string\n\t\t\t| SupportedProviders<EthExecutionAPI>\n\t\t\t| Web3ContextInitOptions<EthExecutionAPI, CustomRegisteredSubscription>,\n\t) {\n\t\tif (\n\t\t\tisNullish(providerOrContext) ||\n\t\t\t(typeof providerOrContext === 'string' && providerOrContext.trim() === '') ||\n\t\t\t(typeof providerOrContext !== 'string' &&\n\t\t\t\t!isSupportedProvider(providerOrContext as SupportedProviders<EthExecutionAPI>) &&\n\t\t\t\t!(providerOrContext as Web3ContextInitOptions).provider)\n\t\t) {\n\t\t\tconsole.warn(\n\t\t\t\t'NOTE: web3.js is running without provider. You need to pass a provider in order to interact with the network!',\n\t\t\t);\n\t\t}\n\n\t\tlet contextInitOptions: Web3ContextInitOptions<EthExecutionAPI> = {};\n\t\tif (\n\t\t\ttypeof providerOrContext === 'string' ||\n\t\t\tisSupportedProvider(providerOrContext as SupportedProviders)\n\t\t) {\n\t\t\tcontextInitOptions.provider = providerOrContext as\n\t\t\t\t| undefined\n\t\t\t\t| string\n\t\t\t\t| SupportedProviders;\n\t\t} else if (providerOrContext) {\n\t\t\tcontextInitOptions = providerOrContext as Web3ContextInitOptions;\n\t\t} else {\n\t\t\tcontextInitOptions = {};\n\t\t}\n\n\t\tcontextInitOptions.registeredSubscriptions = {\n\t\t\t// all the Eth standard subscriptions\n\t\t\t...registeredSubscriptions,\n\t\t\t// overridden and combined with any custom subscriptions\n\t\t\t...(contextInitOptions.registeredSubscriptions ?? {}),\n\t\t} as CustomRegisteredSubscription;\n\n\t\tsuper(contextInitOptions);\n\t\tconst accounts = initAccountsForContext(this);\n\n\t\t// Init protected properties\n\t\tthis._wallet = accounts.wallet;\n\t\tthis._accountProvider = accounts;\n\n\t\tthis.utils = utils;\n\n\t\t// Have to use local alias to initiate contract context\n\t\t// eslint-disable-next-line @typescript-eslint/no-this-alias\n\t\tconst self = this;\n\n\t\tclass ContractBuilder<Abi extends ContractAbi> extends Contract<Abi> {\n\t\t\tpublic constructor(jsonInterface: Abi);\n\t\t\tpublic constructor(jsonInterface: Abi, address: Address);\n\t\t\tpublic constructor(jsonInterface: Abi, options: ContractInitOptions);\n\t\t\tpublic constructor(jsonInterface: Abi, address: Address, options: ContractInitOptions);\n\t\t\tpublic constructor(\n\t\t\t\tjsonInterface: Abi,\n\t\t\t\taddressOrOptions?: Address | ContractInitOptions,\n\t\t\t\toptions?: ContractInitOptions,\n\t\t\t) {\n\t\t\t\tif (typeof addressOrOptions === 'object' && typeof options === 'object') {\n\t\t\t\t\tthrow new InvalidMethodParamsError(\n\t\t\t\t\t\t'Should not provide options at both 2nd and 3rd parameters',\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif (isNullish(addressOrOptions)) {\n\t\t\t\t\tsuper(jsonInterface, options, self.getContextObject() as Web3ContextObject);\n\t\t\t\t} else if (typeof addressOrOptions === 'object') {\n\t\t\t\t\tsuper(\n\t\t\t\t\t\tjsonInterface,\n\t\t\t\t\t\taddressOrOptions,\n\t\t\t\t\t\tself.getContextObject() as Web3ContextObject,\n\t\t\t\t\t);\n\t\t\t\t} else if (typeof addressOrOptions === 'string') {\n\t\t\t\t\tsuper(\n\t\t\t\t\t\tjsonInterface,\n\t\t\t\t\t\taddressOrOptions,\n\t\t\t\t\t\toptions ?? {},\n\t\t\t\t\t\tself.getContextObject() as Web3ContextObject,\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new InvalidMethodParamsError();\n\t\t\t\t}\n\n\t\t\t\tsuper.subscribeToContextEvents(self);\n\t\t\t}\n\t\t}\n\n\t\tconst eth = self.use(Web3Eth);\n\n\t\t// Eth Module\n\t\tthis.eth = Object.assign(eth, {\n\t\t\t// ENS module\n\t\t\tens: self.use(ENS, registryAddresses.main), // registry address defaults to main network\n\n\t\t\t// Iban helpers\n\t\t\tIban,\n\n\t\t\tnet: self.use(Net),\n\t\t\tpersonal: self.use(Personal),\n\n\t\t\t// Contract helper and module\n\t\t\tContract: ContractBuilder,\n\n\t\t\t// ABI Helpers\n\t\t\tabi,\n\n\t\t\t// Accounts helper\n\t\t\taccounts,\n\t\t});\n\t}\n}\nexport default Web3;\n"]},"metadata":{},"sourceType":"module"}