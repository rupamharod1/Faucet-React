{"ast":null,"code":"\"use strict\";\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.InvalidPropertiesForTransactionTypeError = exports.LocalWalletNotAvailableError = exports.TransactionSigningError = exports.TransactionReceiptMissingBlockNumberError = exports.TransactionMissingReceiptOrBlockHashError = exports.TransactionBlockTimeoutError = exports.TransactionPollingTimeoutError = exports.TransactionSendTimeoutError = exports.TransactionDataAndInputError = exports.UnsupportedTransactionTypeError = exports.Eip1559NotSupportedError = exports.UnableToPopulateNonceError = exports.InvalidNonceOrChainIdError = exports.InvalidTransactionObjectError = exports.UnsupportedFeeMarketError = exports.Eip1559GasPriceError = exports.InvalidMaxPriorityFeePerGasOrMaxFeePerGas = exports.InvalidGasOrGasPrice = exports.TransactionGasMismatchError = exports.TransactionGasMismatchInnerError = exports.MissingGasError = exports.MissingGasInnerError = exports.MissingChainOrHardforkError = exports.CommonOrChainAndHardforkError = exports.HardforkMismatchError = exports.ChainMismatchError = exports.ChainIdMismatchError = exports.MissingCustomChainIdError = exports.MissingCustomChainError = exports.InvalidTransactionCall = exports.InvalidTransactionWithReceiver = exports.InvalidTransactionWithSender = exports.TransactionNotFound = exports.UndefinedRawTransactionError = exports.TransactionOutOfGasError = exports.TransactionRevertedWithoutReasonError = exports.ContractCodeNotStoredError = exports.NoContractAddressFoundError = exports.TransactionRevertWithCustomError = exports.TransactionRevertInstructionError = exports.RevertInstructionError = exports.TransactionError = void 0;\n\nconst error_codes_js_1 = require(\"../error_codes.js\");\n\nconst web3_error_base_js_1 = require(\"../web3_error_base.js\");\n\nclass TransactionError extends web3_error_base_js_1.BaseWeb3Error {\n  constructor(message, receipt) {\n    super(message);\n    this.receipt = receipt;\n    this.code = error_codes_js_1.ERR_TX;\n  }\n\n  toJSON() {\n    return Object.assign(Object.assign({}, super.toJSON()), {\n      receipt: this.receipt\n    });\n  }\n\n}\n\nexports.TransactionError = TransactionError;\n\nclass RevertInstructionError extends web3_error_base_js_1.BaseWeb3Error {\n  constructor(reason, signature) {\n    super(`Your request got reverted with the following reason string: ${reason}`);\n    this.reason = reason;\n    this.signature = signature;\n    this.code = error_codes_js_1.ERR_TX_REVERT_INSTRUCTION;\n  }\n\n  toJSON() {\n    return Object.assign(Object.assign({}, super.toJSON()), {\n      reason: this.reason,\n      signature: this.signature\n    });\n  }\n\n}\n\nexports.RevertInstructionError = RevertInstructionError;\n\nclass TransactionRevertInstructionError extends web3_error_base_js_1.BaseWeb3Error {\n  constructor(reason, signature, receipt, data) {\n    super(`Transaction has been reverted by the EVM${receipt === undefined ? '' : `:\\n ${web3_error_base_js_1.BaseWeb3Error.convertToString(receipt)}`}`);\n    this.reason = reason;\n    this.signature = signature;\n    this.receipt = receipt;\n    this.data = data;\n    this.code = error_codes_js_1.ERR_TX_REVERT_TRANSACTION;\n  }\n\n  toJSON() {\n    return Object.assign(Object.assign({}, super.toJSON()), {\n      reason: this.reason,\n      signature: this.signature,\n      receipt: this.receipt,\n      data: this.data\n    });\n  }\n\n}\n\nexports.TransactionRevertInstructionError = TransactionRevertInstructionError;\n/**\n * This error is used when a transaction to a smart contract fails and\n * a custom user error (https://blog.soliditylang.org/2021/04/21/custom-errors/)\n * is able to be parsed from the revert reason\n */\n\nclass TransactionRevertWithCustomError extends TransactionRevertInstructionError {\n  constructor(reason, customErrorName, customErrorDecodedSignature, customErrorArguments, signature, receipt, data) {\n    super(reason);\n    this.reason = reason;\n    this.customErrorName = customErrorName;\n    this.customErrorDecodedSignature = customErrorDecodedSignature;\n    this.customErrorArguments = customErrorArguments;\n    this.signature = signature;\n    this.receipt = receipt;\n    this.data = data;\n    this.code = error_codes_js_1.ERR_TX_REVERT_TRANSACTION_CUSTOM_ERROR;\n  }\n\n  toJSON() {\n    return Object.assign(Object.assign({}, super.toJSON()), {\n      reason: this.reason,\n      customErrorName: this.customErrorName,\n      customErrorDecodedSignature: this.customErrorDecodedSignature,\n      customErrorArguments: this.customErrorArguments,\n      signature: this.signature,\n      receipt: this.receipt,\n      data: this.data\n    });\n  }\n\n}\n\nexports.TransactionRevertWithCustomError = TransactionRevertWithCustomError;\n\nclass NoContractAddressFoundError extends TransactionError {\n  constructor(receipt) {\n    super(\"The transaction receipt didn't contain a contract address.\", receipt);\n    this.code = error_codes_js_1.ERR_TX_NO_CONTRACT_ADDRESS;\n  }\n\n  toJSON() {\n    return Object.assign(Object.assign({}, super.toJSON()), {\n      receipt: this.receipt\n    });\n  }\n\n}\n\nexports.NoContractAddressFoundError = NoContractAddressFoundError;\n\nclass ContractCodeNotStoredError extends TransactionError {\n  constructor(receipt) {\n    super(\"The contract code couldn't be stored, please check your gas limit.\", receipt);\n    this.code = error_codes_js_1.ERR_TX_CONTRACT_NOT_STORED;\n  }\n\n}\n\nexports.ContractCodeNotStoredError = ContractCodeNotStoredError;\n\nclass TransactionRevertedWithoutReasonError extends TransactionError {\n  constructor(receipt) {\n    super(`Transaction has been reverted by the EVM${receipt === undefined ? '' : `:\\n ${web3_error_base_js_1.BaseWeb3Error.convertToString(receipt)}`}`, receipt);\n    this.code = error_codes_js_1.ERR_TX_REVERT_WITHOUT_REASON;\n  }\n\n}\n\nexports.TransactionRevertedWithoutReasonError = TransactionRevertedWithoutReasonError;\n\nclass TransactionOutOfGasError extends TransactionError {\n  constructor(receipt) {\n    super(`Transaction ran out of gas. Please provide more gas:\\n ${JSON.stringify(receipt, undefined, 2)}`, receipt);\n    this.code = error_codes_js_1.ERR_TX_OUT_OF_GAS;\n  }\n\n}\n\nexports.TransactionOutOfGasError = TransactionOutOfGasError;\n\nclass UndefinedRawTransactionError extends TransactionError {\n  constructor() {\n    super(`Raw transaction undefined`);\n    this.code = error_codes_js_1.ERR_RAW_TX_UNDEFINED;\n  }\n\n}\n\nexports.UndefinedRawTransactionError = UndefinedRawTransactionError;\n\nclass TransactionNotFound extends TransactionError {\n  constructor() {\n    super('Transaction not found');\n    this.code = error_codes_js_1.ERR_TX_NOT_FOUND;\n  }\n\n}\n\nexports.TransactionNotFound = TransactionNotFound;\n\nclass InvalidTransactionWithSender extends web3_error_base_js_1.InvalidValueError {\n  constructor(value) {\n    super(value, 'invalid transaction with invalid sender');\n    this.code = error_codes_js_1.ERR_TX_INVALID_SENDER;\n  }\n\n}\n\nexports.InvalidTransactionWithSender = InvalidTransactionWithSender;\n\nclass InvalidTransactionWithReceiver extends web3_error_base_js_1.InvalidValueError {\n  constructor(value) {\n    super(value, 'invalid transaction with invalid receiver');\n    this.code = error_codes_js_1.ERR_TX_INVALID_RECEIVER;\n  }\n\n}\n\nexports.InvalidTransactionWithReceiver = InvalidTransactionWithReceiver;\n\nclass InvalidTransactionCall extends web3_error_base_js_1.InvalidValueError {\n  constructor(value) {\n    super(value, 'invalid transaction call');\n    this.code = error_codes_js_1.ERR_TX_INVALID_CALL;\n  }\n\n}\n\nexports.InvalidTransactionCall = InvalidTransactionCall;\n\nclass MissingCustomChainError extends web3_error_base_js_1.InvalidValueError {\n  constructor() {\n    super('MissingCustomChainError', 'If tx.common is provided it must have tx.common.customChain');\n    this.code = error_codes_js_1.ERR_TX_MISSING_CUSTOM_CHAIN;\n  }\n\n}\n\nexports.MissingCustomChainError = MissingCustomChainError;\n\nclass MissingCustomChainIdError extends web3_error_base_js_1.InvalidValueError {\n  constructor() {\n    super('MissingCustomChainIdError', 'If tx.common is provided it must have tx.common.customChain and tx.common.customChain.chainId');\n    this.code = error_codes_js_1.ERR_TX_MISSING_CUSTOM_CHAIN_ID;\n  }\n\n}\n\nexports.MissingCustomChainIdError = MissingCustomChainIdError;\n\nclass ChainIdMismatchError extends web3_error_base_js_1.InvalidValueError {\n  constructor(value) {\n    super(JSON.stringify(value), // https://github.com/ChainSafe/web3.js/blob/8783f4d64e424456bdc53b34ef1142d0a7cee4d7/packages/web3-eth-accounts/src/index.js#L176\n    'Chain Id doesnt match in tx.chainId tx.common.customChain.chainId');\n    this.code = error_codes_js_1.ERR_TX_CHAIN_ID_MISMATCH;\n  }\n\n}\n\nexports.ChainIdMismatchError = ChainIdMismatchError;\n\nclass ChainMismatchError extends web3_error_base_js_1.InvalidValueError {\n  constructor(value) {\n    super(JSON.stringify(value), 'Chain doesnt match in tx.chain tx.common.basechain');\n    this.code = error_codes_js_1.ERR_TX_CHAIN_MISMATCH;\n  }\n\n}\n\nexports.ChainMismatchError = ChainMismatchError;\n\nclass HardforkMismatchError extends web3_error_base_js_1.InvalidValueError {\n  constructor(value) {\n    super(JSON.stringify(value), 'hardfork doesnt match in tx.hardfork tx.common.hardfork');\n    this.code = error_codes_js_1.ERR_TX_HARDFORK_MISMATCH;\n  }\n\n}\n\nexports.HardforkMismatchError = HardforkMismatchError;\n\nclass CommonOrChainAndHardforkError extends web3_error_base_js_1.InvalidValueError {\n  constructor() {\n    super('CommonOrChainAndHardforkError', 'Please provide the common object or the chain and hardfork property but not all together.');\n    this.code = error_codes_js_1.ERR_TX_INVALID_CHAIN_INFO;\n  }\n\n}\n\nexports.CommonOrChainAndHardforkError = CommonOrChainAndHardforkError;\n\nclass MissingChainOrHardforkError extends web3_error_base_js_1.InvalidValueError {\n  constructor(value) {\n    var _a, _b;\n\n    super('MissingChainOrHardforkError', `When specifying chain and hardfork, both values must be defined. Received \"chain\": ${(_a = value.chain) !== null && _a !== void 0 ? _a : 'undefined'}, \"hardfork\": ${(_b = value.hardfork) !== null && _b !== void 0 ? _b : 'undefined'}`);\n    this.code = error_codes_js_1.ERR_TX_MISSING_CHAIN_INFO;\n  }\n\n}\n\nexports.MissingChainOrHardforkError = MissingChainOrHardforkError;\n\nclass MissingGasInnerError extends web3_error_base_js_1.BaseWeb3Error {\n  constructor() {\n    super('Missing properties in transaction, either define \"gas\" and \"gasPrice\" for type 0 transactions or \"gas\", \"maxPriorityFeePerGas\" and \"maxFeePerGas\" for type 2 transactions');\n    this.code = error_codes_js_1.ERR_TX_MISSING_GAS_INNER_ERROR;\n  }\n\n}\n\nexports.MissingGasInnerError = MissingGasInnerError;\n\nclass MissingGasError extends web3_error_base_js_1.InvalidValueError {\n  constructor(value) {\n    var _a, _b, _c, _d;\n\n    super(`gas: ${(_a = value.gas) !== null && _a !== void 0 ? _a : 'undefined'}, gasPrice: ${(_b = value.gasPrice) !== null && _b !== void 0 ? _b : 'undefined'}, maxPriorityFeePerGas: ${(_c = value.maxPriorityFeePerGas) !== null && _c !== void 0 ? _c : 'undefined'}, maxFeePerGas: ${(_d = value.maxFeePerGas) !== null && _d !== void 0 ? _d : 'undefined'}`, '\"gas\" is missing');\n    this.code = error_codes_js_1.ERR_TX_MISSING_GAS;\n    this.innerError = new MissingGasInnerError();\n  }\n\n}\n\nexports.MissingGasError = MissingGasError;\n\nclass TransactionGasMismatchInnerError extends web3_error_base_js_1.BaseWeb3Error {\n  constructor() {\n    super('Missing properties in transaction, either define \"gas\" and \"gasPrice\" for type 0 transactions or \"gas\", \"maxPriorityFeePerGas\" and \"maxFeePerGas\" for type 2 transactions, not both');\n    this.code = error_codes_js_1.ERR_TX_GAS_MISMATCH_INNER_ERROR;\n  }\n\n}\n\nexports.TransactionGasMismatchInnerError = TransactionGasMismatchInnerError;\n\nclass TransactionGasMismatchError extends web3_error_base_js_1.InvalidValueError {\n  constructor(value) {\n    var _a, _b, _c, _d;\n\n    super(`gas: ${(_a = value.gas) !== null && _a !== void 0 ? _a : 'undefined'}, gasPrice: ${(_b = value.gasPrice) !== null && _b !== void 0 ? _b : 'undefined'}, maxPriorityFeePerGas: ${(_c = value.maxPriorityFeePerGas) !== null && _c !== void 0 ? _c : 'undefined'}, maxFeePerGas: ${(_d = value.maxFeePerGas) !== null && _d !== void 0 ? _d : 'undefined'}`, 'transaction must specify legacy or fee market gas properties, not both');\n    this.code = error_codes_js_1.ERR_TX_GAS_MISMATCH;\n    this.innerError = new TransactionGasMismatchInnerError();\n  }\n\n}\n\nexports.TransactionGasMismatchError = TransactionGasMismatchError;\n\nclass InvalidGasOrGasPrice extends web3_error_base_js_1.InvalidValueError {\n  constructor(value) {\n    var _a, _b;\n\n    super(`gas: ${(_a = value.gas) !== null && _a !== void 0 ? _a : 'undefined'}, gasPrice: ${(_b = value.gasPrice) !== null && _b !== void 0 ? _b : 'undefined'}`, 'Gas or gasPrice is lower than 0');\n    this.code = error_codes_js_1.ERR_TX_INVALID_LEGACY_GAS;\n  }\n\n}\n\nexports.InvalidGasOrGasPrice = InvalidGasOrGasPrice;\n\nclass InvalidMaxPriorityFeePerGasOrMaxFeePerGas extends web3_error_base_js_1.InvalidValueError {\n  constructor(value) {\n    var _a, _b;\n\n    super(`maxPriorityFeePerGas: ${(_a = value.maxPriorityFeePerGas) !== null && _a !== void 0 ? _a : 'undefined'}, maxFeePerGas: ${(_b = value.maxFeePerGas) !== null && _b !== void 0 ? _b : 'undefined'}`, 'maxPriorityFeePerGas or maxFeePerGas is lower than 0');\n    this.code = error_codes_js_1.ERR_TX_INVALID_FEE_MARKET_GAS;\n  }\n\n}\n\nexports.InvalidMaxPriorityFeePerGasOrMaxFeePerGas = InvalidMaxPriorityFeePerGasOrMaxFeePerGas;\n\nclass Eip1559GasPriceError extends web3_error_base_js_1.InvalidValueError {\n  constructor(value) {\n    super(value, \"eip-1559 transactions don't support gasPrice\");\n    this.code = error_codes_js_1.ERR_TX_INVALID_FEE_MARKET_GAS_PRICE;\n  }\n\n}\n\nexports.Eip1559GasPriceError = Eip1559GasPriceError;\n\nclass UnsupportedFeeMarketError extends web3_error_base_js_1.InvalidValueError {\n  constructor(value) {\n    var _a, _b;\n\n    super(`maxPriorityFeePerGas: ${(_a = value.maxPriorityFeePerGas) !== null && _a !== void 0 ? _a : 'undefined'}, maxFeePerGas: ${(_b = value.maxFeePerGas) !== null && _b !== void 0 ? _b : 'undefined'}`, \"pre-eip-1559 transaction don't support maxFeePerGas/maxPriorityFeePerGas\");\n    this.code = error_codes_js_1.ERR_TX_INVALID_LEGACY_FEE_MARKET;\n  }\n\n}\n\nexports.UnsupportedFeeMarketError = UnsupportedFeeMarketError;\n\nclass InvalidTransactionObjectError extends web3_error_base_js_1.InvalidValueError {\n  constructor(value) {\n    super(value, 'invalid transaction object');\n    this.code = error_codes_js_1.ERR_TX_INVALID_OBJECT;\n  }\n\n}\n\nexports.InvalidTransactionObjectError = InvalidTransactionObjectError;\n\nclass InvalidNonceOrChainIdError extends web3_error_base_js_1.InvalidValueError {\n  constructor(value) {\n    var _a, _b;\n\n    super(`nonce: ${(_a = value.nonce) !== null && _a !== void 0 ? _a : 'undefined'}, chainId: ${(_b = value.chainId) !== null && _b !== void 0 ? _b : 'undefined'}`, 'Nonce or chainId is lower than 0');\n    this.code = error_codes_js_1.ERR_TX_INVALID_NONCE_OR_CHAIN_ID;\n  }\n\n}\n\nexports.InvalidNonceOrChainIdError = InvalidNonceOrChainIdError;\n\nclass UnableToPopulateNonceError extends web3_error_base_js_1.InvalidValueError {\n  constructor() {\n    super('UnableToPopulateNonceError', 'unable to populate nonce, no from address available');\n    this.code = error_codes_js_1.ERR_TX_UNABLE_TO_POPULATE_NONCE;\n  }\n\n}\n\nexports.UnableToPopulateNonceError = UnableToPopulateNonceError;\n\nclass Eip1559NotSupportedError extends web3_error_base_js_1.InvalidValueError {\n  constructor() {\n    super('Eip1559NotSupportedError', \"Network doesn't support eip-1559\");\n    this.code = error_codes_js_1.ERR_TX_UNSUPPORTED_EIP_1559;\n  }\n\n}\n\nexports.Eip1559NotSupportedError = Eip1559NotSupportedError;\n\nclass UnsupportedTransactionTypeError extends web3_error_base_js_1.InvalidValueError {\n  constructor(value) {\n    super(value, 'unsupported transaction type');\n    this.code = error_codes_js_1.ERR_TX_UNSUPPORTED_TYPE;\n  }\n\n}\n\nexports.UnsupportedTransactionTypeError = UnsupportedTransactionTypeError;\n\nclass TransactionDataAndInputError extends web3_error_base_js_1.InvalidValueError {\n  constructor(value) {\n    var _a, _b;\n\n    super(`data: ${(_a = value.data) !== null && _a !== void 0 ? _a : 'undefined'}, input: ${(_b = value.input) !== null && _b !== void 0 ? _b : 'undefined'}`, 'You can\\'t have \"data\" and \"input\" as properties of transactions at the same time, please use either \"data\" or \"input\" instead.');\n    this.code = error_codes_js_1.ERR_TX_DATA_AND_INPUT;\n  }\n\n}\n\nexports.TransactionDataAndInputError = TransactionDataAndInputError;\n\nclass TransactionSendTimeoutError extends web3_error_base_js_1.BaseWeb3Error {\n  constructor(value) {\n    super(`The connected Ethereum Node did not respond within ${value.numberOfSeconds} seconds, please make sure your transaction was properly sent and you are connected to a healthy Node. Be aware that transaction might still be pending or mined!\\n\\tTransaction Hash: ${value.transactionHash ? value.transactionHash.toString() : 'not available'}`);\n    this.code = error_codes_js_1.ERR_TX_SEND_TIMEOUT;\n  }\n\n}\n\nexports.TransactionSendTimeoutError = TransactionSendTimeoutError;\n\nfunction transactionTimeoutHint(transactionHash) {\n  return `Please make sure your transaction was properly sent and there no pervious pending transaction for the same account. However, be aware that it might still be mined!\\n\\tTransaction Hash: ${transactionHash ? transactionHash.toString() : 'not available'}`;\n}\n\nclass TransactionPollingTimeoutError extends web3_error_base_js_1.BaseWeb3Error {\n  constructor(value) {\n    super(`Transaction was not mined within ${value.numberOfSeconds} seconds. ${transactionTimeoutHint(value.transactionHash)}`);\n    this.code = error_codes_js_1.ERR_TX_POLLING_TIMEOUT;\n  }\n\n}\n\nexports.TransactionPollingTimeoutError = TransactionPollingTimeoutError;\n\nclass TransactionBlockTimeoutError extends web3_error_base_js_1.BaseWeb3Error {\n  constructor(value) {\n    super(`Transaction started at ${value.starterBlockNumber} but was not mined within ${value.numberOfBlocks} blocks. ${transactionTimeoutHint(value.transactionHash)}`);\n    this.code = error_codes_js_1.ERR_TX_BLOCK_TIMEOUT;\n  }\n\n}\n\nexports.TransactionBlockTimeoutError = TransactionBlockTimeoutError;\n\nclass TransactionMissingReceiptOrBlockHashError extends web3_error_base_js_1.InvalidValueError {\n  constructor(value) {\n    var _a, _b;\n\n    super(`receipt: ${JSON.stringify(value.receipt)}, blockHash: ${(_a = value.blockHash) === null || _a === void 0 ? void 0 : _a.toString()}, transactionHash: ${(_b = value.transactionHash) === null || _b === void 0 ? void 0 : _b.toString()}`, `Receipt missing or blockHash null`);\n    this.code = error_codes_js_1.ERR_TX_RECEIPT_MISSING_OR_BLOCKHASH_NULL;\n  }\n\n}\n\nexports.TransactionMissingReceiptOrBlockHashError = TransactionMissingReceiptOrBlockHashError;\n\nclass TransactionReceiptMissingBlockNumberError extends web3_error_base_js_1.InvalidValueError {\n  constructor(value) {\n    super(`receipt: ${JSON.stringify(value.receipt)}`, `Receipt missing block number`);\n    this.code = error_codes_js_1.ERR_TX_RECEIPT_MISSING_BLOCK_NUMBER;\n  }\n\n}\n\nexports.TransactionReceiptMissingBlockNumberError = TransactionReceiptMissingBlockNumberError;\n\nclass TransactionSigningError extends web3_error_base_js_1.BaseWeb3Error {\n  constructor(errorDetails) {\n    super(`Invalid signature. \"${errorDetails}\"`);\n    this.code = error_codes_js_1.ERR_TX_SIGNING;\n  }\n\n}\n\nexports.TransactionSigningError = TransactionSigningError;\n\nclass LocalWalletNotAvailableError extends web3_error_base_js_1.InvalidValueError {\n  constructor() {\n    super('LocalWalletNotAvailableError', `Attempted to index account in local wallet, but no wallet is available`);\n    this.code = error_codes_js_1.ERR_TX_LOCAL_WALLET_NOT_AVAILABLE;\n  }\n\n}\n\nexports.LocalWalletNotAvailableError = LocalWalletNotAvailableError;\n\nclass InvalidPropertiesForTransactionTypeError extends web3_error_base_js_1.BaseWeb3Error {\n  constructor(validationError, txType) {\n    const invalidPropertyNames = [];\n    validationError.forEach(error => invalidPropertyNames.push(error.keyword));\n    super(`The following properties are invalid for the transaction type ${txType}: ${invalidPropertyNames.join(', ')}`);\n    this.code = error_codes_js_1.ERR_TX_INVALID_PROPERTIES_FOR_TYPE;\n  }\n\n}\n\nexports.InvalidPropertiesForTransactionTypeError = InvalidPropertiesForTransactionTypeError;","map":{"version":3,"mappings":"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","names":["TransactionError","web3_error_base_js_1","constructor","message","receipt","error_codes_js_1","toJSON","exports","RevertInstructionError","reason","signature","TransactionRevertInstructionError","data","undefined","convertToString","TransactionRevertWithCustomError","customErrorName","customErrorDecodedSignature","customErrorArguments","NoContractAddressFoundError","code","ContractCodeNotStoredError","TransactionRevertedWithoutReasonError","TransactionOutOfGasError","JSON","stringify","UndefinedRawTransactionError","TransactionNotFound","InvalidTransactionWithSender","value","InvalidTransactionWithReceiver","InvalidTransactionCall","MissingCustomChainError","MissingCustomChainIdError","ChainIdMismatchError","ChainMismatchError","HardforkMismatchError","CommonOrChainAndHardforkError","MissingChainOrHardforkError","chain","_a","hardfork","_b","MissingGasInnerError","MissingGasError","gas","gasPrice","maxPriorityFeePerGas","_c","maxFeePerGas","_d","innerError","TransactionGasMismatchInnerError","TransactionGasMismatchError","InvalidGasOrGasPrice","InvalidMaxPriorityFeePerGasOrMaxFeePerGas","Eip1559GasPriceError","UnsupportedFeeMarketError","InvalidTransactionObjectError","InvalidNonceOrChainIdError","nonce","chainId","UnableToPopulateNonceError","Eip1559NotSupportedError","UnsupportedTransactionTypeError","TransactionDataAndInputError","input","TransactionSendTimeoutError","numberOfSeconds","transactionHash","toString","transactionTimeoutHint","TransactionPollingTimeoutError","TransactionBlockTimeoutError","starterBlockNumber","numberOfBlocks","TransactionMissingReceiptOrBlockHashError","blockHash","TransactionReceiptMissingBlockNumberError","TransactionSigningError","errorDetails","LocalWalletNotAvailableError","InvalidPropertiesForTransactionTypeError","validationError","txType","invalidPropertyNames","forEach","error","push","keyword","join"],"sources":["/home/rupam/Desktop/Faucet-React/node_modules/web3-errors/src/errors/transaction_errors.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/* eslint-disable max-classes-per-file */\n\nimport {\n\tBytes,\n\tHexString,\n\tNumbers,\n\tTransactionReceipt,\n\tWeb3ValidationErrorObject,\n} from 'web3-types';\nimport {\n\tERR_RAW_TX_UNDEFINED,\n\tERR_TX,\n\tERR_TX_BLOCK_TIMEOUT,\n\tERR_TX_CONTRACT_NOT_STORED,\n\tERR_TX_CHAIN_ID_MISMATCH,\n\tERR_TX_DATA_AND_INPUT,\n\tERR_TX_GAS_MISMATCH,\n\tERR_TX_CHAIN_MISMATCH,\n\tERR_TX_HARDFORK_MISMATCH,\n\tERR_TX_INVALID_CALL,\n\tERR_TX_INVALID_CHAIN_INFO,\n\tERR_TX_INVALID_FEE_MARKET_GAS,\n\tERR_TX_INVALID_FEE_MARKET_GAS_PRICE,\n\tERR_TX_INVALID_LEGACY_FEE_MARKET,\n\tERR_TX_INVALID_LEGACY_GAS,\n\tERR_TX_INVALID_NONCE_OR_CHAIN_ID,\n\tERR_TX_INVALID_OBJECT,\n\tERR_TX_INVALID_SENDER,\n\tERR_TX_INVALID_RECEIVER,\n\tERR_TX_LOCAL_WALLET_NOT_AVAILABLE,\n\tERR_TX_MISSING_CHAIN_INFO,\n\tERR_TX_MISSING_CUSTOM_CHAIN,\n\tERR_TX_MISSING_CUSTOM_CHAIN_ID,\n\tERR_TX_MISSING_GAS,\n\tERR_TX_NO_CONTRACT_ADDRESS,\n\tERR_TX_NOT_FOUND,\n\tERR_TX_OUT_OF_GAS,\n\tERR_TX_POLLING_TIMEOUT,\n\tERR_TX_RECEIPT_MISSING_BLOCK_NUMBER,\n\tERR_TX_RECEIPT_MISSING_OR_BLOCKHASH_NULL,\n\tERR_TX_REVERT_INSTRUCTION,\n\tERR_TX_REVERT_TRANSACTION,\n\tERR_TX_REVERT_WITHOUT_REASON,\n\tERR_TX_SEND_TIMEOUT,\n\tERR_TX_SIGNING,\n\tERR_TX_UNABLE_TO_POPULATE_NONCE,\n\tERR_TX_UNSUPPORTED_EIP_1559,\n\tERR_TX_UNSUPPORTED_TYPE,\n\tERR_TX_REVERT_TRANSACTION_CUSTOM_ERROR,\n\tERR_TX_INVALID_PROPERTIES_FOR_TYPE,\n\tERR_TX_MISSING_GAS_INNER_ERROR,\n\tERR_TX_GAS_MISMATCH_INNER_ERROR,\n} from '../error_codes.js';\nimport { InvalidValueError, BaseWeb3Error } from '../web3_error_base.js';\n\nexport class TransactionError<ReceiptType = TransactionReceipt> extends BaseWeb3Error {\n\tpublic code = ERR_TX;\n\n\tpublic constructor(message: string, public receipt?: ReceiptType) {\n\t\tsuper(message);\n\t}\n\n\tpublic toJSON() {\n\t\treturn { ...super.toJSON(), receipt: this.receipt };\n\t}\n}\n\nexport class RevertInstructionError extends BaseWeb3Error {\n\tpublic code = ERR_TX_REVERT_INSTRUCTION;\n\n\tpublic constructor(public reason: string, public signature: string) {\n\t\tsuper(`Your request got reverted with the following reason string: ${reason}`);\n\t}\n\n\tpublic toJSON() {\n\t\treturn { ...super.toJSON(), reason: this.reason, signature: this.signature };\n\t}\n}\n\nexport class TransactionRevertInstructionError<\n\tReceiptType = TransactionReceipt,\n> extends BaseWeb3Error {\n\tpublic code = ERR_TX_REVERT_TRANSACTION;\n\n\tpublic constructor(\n\t\tpublic reason: string,\n\t\tpublic signature?: string,\n\t\tpublic receipt?: ReceiptType,\n\t\tpublic data?: string,\n\t) {\n\t\tsuper(\n\t\t\t`Transaction has been reverted by the EVM${\n\t\t\t\treceipt === undefined ? '' : `:\\n ${BaseWeb3Error.convertToString(receipt)}`\n\t\t\t}`,\n\t\t);\n\t}\n\n\tpublic toJSON() {\n\t\treturn {\n\t\t\t...super.toJSON(),\n\t\t\treason: this.reason,\n\t\t\tsignature: this.signature,\n\t\t\treceipt: this.receipt,\n\t\t\tdata: this.data,\n\t\t};\n\t}\n}\n\n/**\n * This error is used when a transaction to a smart contract fails and\n * a custom user error (https://blog.soliditylang.org/2021/04/21/custom-errors/)\n * is able to be parsed from the revert reason\n */\nexport class TransactionRevertWithCustomError<\n\tReceiptType = TransactionReceipt,\n> extends TransactionRevertInstructionError<ReceiptType> {\n\tpublic code = ERR_TX_REVERT_TRANSACTION_CUSTOM_ERROR;\n\n\tpublic constructor(\n\t\tpublic reason: string,\n\t\tpublic customErrorName: string,\n\t\tpublic customErrorDecodedSignature: string,\n\t\tpublic customErrorArguments: Record<string, unknown>,\n\t\tpublic signature?: string,\n\t\tpublic receipt?: ReceiptType,\n\t\tpublic data?: string,\n\t) {\n\t\tsuper(reason);\n\t}\n\n\tpublic toJSON() {\n\t\treturn {\n\t\t\t...super.toJSON(),\n\t\t\treason: this.reason,\n\t\t\tcustomErrorName: this.customErrorName,\n\t\t\tcustomErrorDecodedSignature: this.customErrorDecodedSignature,\n\t\t\tcustomErrorArguments: this.customErrorArguments,\n\t\t\tsignature: this.signature,\n\t\t\treceipt: this.receipt,\n\t\t\tdata: this.data,\n\t\t};\n\t}\n}\n\nexport class NoContractAddressFoundError extends TransactionError {\n\tpublic constructor(receipt: TransactionReceipt) {\n\t\tsuper(\"The transaction receipt didn't contain a contract address.\", receipt);\n\t\tthis.code = ERR_TX_NO_CONTRACT_ADDRESS;\n\t}\n\n\tpublic toJSON() {\n\t\treturn { ...super.toJSON(), receipt: this.receipt };\n\t}\n}\n\nexport class ContractCodeNotStoredError extends TransactionError {\n\tpublic constructor(receipt: TransactionReceipt) {\n\t\tsuper(\"The contract code couldn't be stored, please check your gas limit.\", receipt);\n\t\tthis.code = ERR_TX_CONTRACT_NOT_STORED;\n\t}\n}\n\nexport class TransactionRevertedWithoutReasonError<\n\tReceiptType = TransactionReceipt,\n> extends TransactionError<ReceiptType> {\n\tpublic constructor(receipt?: ReceiptType) {\n\t\tsuper(\n\t\t\t`Transaction has been reverted by the EVM${\n\t\t\t\treceipt === undefined ? '' : `:\\n ${BaseWeb3Error.convertToString(receipt)}`\n\t\t\t}`,\n\t\t\treceipt,\n\t\t);\n\t\tthis.code = ERR_TX_REVERT_WITHOUT_REASON;\n\t}\n}\n\nexport class TransactionOutOfGasError extends TransactionError {\n\tpublic constructor(receipt: TransactionReceipt) {\n\t\tsuper(\n\t\t\t`Transaction ran out of gas. Please provide more gas:\\n ${JSON.stringify(\n\t\t\t\treceipt,\n\t\t\t\tundefined,\n\t\t\t\t2,\n\t\t\t)}`,\n\t\t\treceipt,\n\t\t);\n\t\tthis.code = ERR_TX_OUT_OF_GAS;\n\t}\n}\n\nexport class UndefinedRawTransactionError extends TransactionError {\n\tpublic constructor() {\n\t\tsuper(`Raw transaction undefined`);\n\t\tthis.code = ERR_RAW_TX_UNDEFINED;\n\t}\n}\nexport class TransactionNotFound extends TransactionError {\n\tpublic constructor() {\n\t\tsuper('Transaction not found');\n\t\tthis.code = ERR_TX_NOT_FOUND;\n\t}\n}\n\nexport class InvalidTransactionWithSender extends InvalidValueError {\n\tpublic code = ERR_TX_INVALID_SENDER;\n\n\tpublic constructor(value: unknown) {\n\t\tsuper(value, 'invalid transaction with invalid sender');\n\t}\n}\nexport class InvalidTransactionWithReceiver extends InvalidValueError {\n\tpublic code = ERR_TX_INVALID_RECEIVER;\n\n\tpublic constructor(value: unknown) {\n\t\tsuper(value, 'invalid transaction with invalid receiver');\n\t}\n}\nexport class InvalidTransactionCall extends InvalidValueError {\n\tpublic code = ERR_TX_INVALID_CALL;\n\n\tpublic constructor(value: unknown) {\n\t\tsuper(value, 'invalid transaction call');\n\t}\n}\n\nexport class MissingCustomChainError extends InvalidValueError {\n\tpublic code = ERR_TX_MISSING_CUSTOM_CHAIN;\n\n\tpublic constructor() {\n\t\tsuper(\n\t\t\t'MissingCustomChainError',\n\t\t\t'If tx.common is provided it must have tx.common.customChain',\n\t\t);\n\t}\n}\n\nexport class MissingCustomChainIdError extends InvalidValueError {\n\tpublic code = ERR_TX_MISSING_CUSTOM_CHAIN_ID;\n\n\tpublic constructor() {\n\t\tsuper(\n\t\t\t'MissingCustomChainIdError',\n\t\t\t'If tx.common is provided it must have tx.common.customChain and tx.common.customChain.chainId',\n\t\t);\n\t}\n}\n\nexport class ChainIdMismatchError extends InvalidValueError {\n\tpublic code = ERR_TX_CHAIN_ID_MISMATCH;\n\n\tpublic constructor(value: { txChainId: unknown; customChainId: unknown }) {\n\t\tsuper(\n\t\t\tJSON.stringify(value),\n\t\t\t// https://github.com/ChainSafe/web3.js/blob/8783f4d64e424456bdc53b34ef1142d0a7cee4d7/packages/web3-eth-accounts/src/index.js#L176\n\t\t\t'Chain Id doesnt match in tx.chainId tx.common.customChain.chainId',\n\t\t);\n\t}\n}\n\nexport class ChainMismatchError extends InvalidValueError {\n\tpublic code = ERR_TX_CHAIN_MISMATCH;\n\n\tpublic constructor(value: { txChain: unknown; baseChain: unknown }) {\n\t\tsuper(JSON.stringify(value), 'Chain doesnt match in tx.chain tx.common.basechain');\n\t}\n}\n\nexport class HardforkMismatchError extends InvalidValueError {\n\tpublic code = ERR_TX_HARDFORK_MISMATCH;\n\n\tpublic constructor(value: { txHardfork: unknown; commonHardfork: unknown }) {\n\t\tsuper(JSON.stringify(value), 'hardfork doesnt match in tx.hardfork tx.common.hardfork');\n\t}\n}\n\nexport class CommonOrChainAndHardforkError extends InvalidValueError {\n\tpublic code = ERR_TX_INVALID_CHAIN_INFO;\n\n\tpublic constructor() {\n\t\tsuper(\n\t\t\t'CommonOrChainAndHardforkError',\n\t\t\t'Please provide the common object or the chain and hardfork property but not all together.',\n\t\t);\n\t}\n}\n\nexport class MissingChainOrHardforkError extends InvalidValueError {\n\tpublic code = ERR_TX_MISSING_CHAIN_INFO;\n\n\tpublic constructor(value: { chain: string | undefined; hardfork: string | undefined }) {\n\t\tsuper(\n\t\t\t'MissingChainOrHardforkError',\n\t\t\t`When specifying chain and hardfork, both values must be defined. Received \"chain\": ${\n\t\t\t\tvalue.chain ?? 'undefined'\n\t\t\t}, \"hardfork\": ${value.hardfork ?? 'undefined'}`,\n\t\t);\n\t}\n}\n\nexport class MissingGasInnerError extends BaseWeb3Error {\n\tpublic code = ERR_TX_MISSING_GAS_INNER_ERROR;\n\n\tpublic constructor() {\n\t\tsuper(\n\t\t\t'Missing properties in transaction, either define \"gas\" and \"gasPrice\" for type 0 transactions or \"gas\", \"maxPriorityFeePerGas\" and \"maxFeePerGas\" for type 2 transactions',\n\t\t);\n\t}\n}\n\nexport class MissingGasError extends InvalidValueError {\n\tpublic code = ERR_TX_MISSING_GAS;\n\n\tpublic constructor(value: {\n\t\tgas: Numbers | undefined;\n\t\tgasPrice: Numbers | undefined;\n\t\tmaxPriorityFeePerGas: Numbers | undefined;\n\t\tmaxFeePerGas: Numbers | undefined;\n\t}) {\n\t\tsuper(\n\t\t\t`gas: ${value.gas ?? 'undefined'}, gasPrice: ${\n\t\t\t\tvalue.gasPrice ?? 'undefined'\n\t\t\t}, maxPriorityFeePerGas: ${value.maxPriorityFeePerGas ?? 'undefined'}, maxFeePerGas: ${\n\t\t\t\tvalue.maxFeePerGas ?? 'undefined'\n\t\t\t}`,\n\t\t\t'\"gas\" is missing',\n\t\t);\n\t\tthis.innerError = new MissingGasInnerError();\n\t}\n}\n\nexport class TransactionGasMismatchInnerError extends BaseWeb3Error {\n\tpublic code = ERR_TX_GAS_MISMATCH_INNER_ERROR;\n\n\tpublic constructor() {\n\t\tsuper(\n\t\t\t'Missing properties in transaction, either define \"gas\" and \"gasPrice\" for type 0 transactions or \"gas\", \"maxPriorityFeePerGas\" and \"maxFeePerGas\" for type 2 transactions, not both',\n\t\t);\n\t}\n}\n\nexport class TransactionGasMismatchError extends InvalidValueError {\n\tpublic code = ERR_TX_GAS_MISMATCH;\n\n\tpublic constructor(value: {\n\t\tgas: Numbers | undefined;\n\t\tgasPrice: Numbers | undefined;\n\t\tmaxPriorityFeePerGas: Numbers | undefined;\n\t\tmaxFeePerGas: Numbers | undefined;\n\t}) {\n\t\tsuper(\n\t\t\t`gas: ${value.gas ?? 'undefined'}, gasPrice: ${\n\t\t\t\tvalue.gasPrice ?? 'undefined'\n\t\t\t}, maxPriorityFeePerGas: ${value.maxPriorityFeePerGas ?? 'undefined'}, maxFeePerGas: ${\n\t\t\t\tvalue.maxFeePerGas ?? 'undefined'\n\t\t\t}`,\n\t\t\t'transaction must specify legacy or fee market gas properties, not both',\n\t\t);\n\t\tthis.innerError = new TransactionGasMismatchInnerError();\n\t}\n}\n\nexport class InvalidGasOrGasPrice extends InvalidValueError {\n\tpublic code = ERR_TX_INVALID_LEGACY_GAS;\n\n\tpublic constructor(value: { gas: Numbers | undefined; gasPrice: Numbers | undefined }) {\n\t\tsuper(\n\t\t\t`gas: ${value.gas ?? 'undefined'}, gasPrice: ${value.gasPrice ?? 'undefined'}`,\n\t\t\t'Gas or gasPrice is lower than 0',\n\t\t);\n\t}\n}\n\nexport class InvalidMaxPriorityFeePerGasOrMaxFeePerGas extends InvalidValueError {\n\tpublic code = ERR_TX_INVALID_FEE_MARKET_GAS;\n\n\tpublic constructor(value: {\n\t\tmaxPriorityFeePerGas: Numbers | undefined;\n\t\tmaxFeePerGas: Numbers | undefined;\n\t}) {\n\t\tsuper(\n\t\t\t`maxPriorityFeePerGas: ${value.maxPriorityFeePerGas ?? 'undefined'}, maxFeePerGas: ${\n\t\t\t\tvalue.maxFeePerGas ?? 'undefined'\n\t\t\t}`,\n\t\t\t'maxPriorityFeePerGas or maxFeePerGas is lower than 0',\n\t\t);\n\t}\n}\n\nexport class Eip1559GasPriceError extends InvalidValueError {\n\tpublic code = ERR_TX_INVALID_FEE_MARKET_GAS_PRICE;\n\n\tpublic constructor(value: unknown) {\n\t\tsuper(value, \"eip-1559 transactions don't support gasPrice\");\n\t}\n}\n\nexport class UnsupportedFeeMarketError extends InvalidValueError {\n\tpublic code = ERR_TX_INVALID_LEGACY_FEE_MARKET;\n\n\tpublic constructor(value: {\n\t\tmaxPriorityFeePerGas: Numbers | undefined;\n\t\tmaxFeePerGas: Numbers | undefined;\n\t}) {\n\t\tsuper(\n\t\t\t`maxPriorityFeePerGas: ${value.maxPriorityFeePerGas ?? 'undefined'}, maxFeePerGas: ${\n\t\t\t\tvalue.maxFeePerGas ?? 'undefined'\n\t\t\t}`,\n\t\t\t\"pre-eip-1559 transaction don't support maxFeePerGas/maxPriorityFeePerGas\",\n\t\t);\n\t}\n}\n\nexport class InvalidTransactionObjectError extends InvalidValueError {\n\tpublic code = ERR_TX_INVALID_OBJECT;\n\n\tpublic constructor(value: unknown) {\n\t\tsuper(value, 'invalid transaction object');\n\t}\n}\n\nexport class InvalidNonceOrChainIdError extends InvalidValueError {\n\tpublic code = ERR_TX_INVALID_NONCE_OR_CHAIN_ID;\n\n\tpublic constructor(value: { nonce: Numbers | undefined; chainId: Numbers | undefined }) {\n\t\tsuper(\n\t\t\t`nonce: ${value.nonce ?? 'undefined'}, chainId: ${value.chainId ?? 'undefined'}`,\n\t\t\t'Nonce or chainId is lower than 0',\n\t\t);\n\t}\n}\n\nexport class UnableToPopulateNonceError extends InvalidValueError {\n\tpublic code = ERR_TX_UNABLE_TO_POPULATE_NONCE;\n\n\tpublic constructor() {\n\t\tsuper('UnableToPopulateNonceError', 'unable to populate nonce, no from address available');\n\t}\n}\n\nexport class Eip1559NotSupportedError extends InvalidValueError {\n\tpublic code = ERR_TX_UNSUPPORTED_EIP_1559;\n\n\tpublic constructor() {\n\t\tsuper('Eip1559NotSupportedError', \"Network doesn't support eip-1559\");\n\t}\n}\n\nexport class UnsupportedTransactionTypeError extends InvalidValueError {\n\tpublic code = ERR_TX_UNSUPPORTED_TYPE;\n\n\tpublic constructor(value: unknown) {\n\t\tsuper(value, 'unsupported transaction type');\n\t}\n}\n\nexport class TransactionDataAndInputError extends InvalidValueError {\n\tpublic code = ERR_TX_DATA_AND_INPUT;\n\n\tpublic constructor(value: { data: HexString | undefined; input: HexString | undefined }) {\n\t\tsuper(\n\t\t\t`data: ${value.data ?? 'undefined'}, input: ${value.input ?? 'undefined'}`,\n\t\t\t'You can\\'t have \"data\" and \"input\" as properties of transactions at the same time, please use either \"data\" or \"input\" instead.',\n\t\t);\n\t}\n}\n\nexport class TransactionSendTimeoutError extends BaseWeb3Error {\n\tpublic code = ERR_TX_SEND_TIMEOUT;\n\n\tpublic constructor(value: { numberOfSeconds: number; transactionHash?: Bytes }) {\n\t\tsuper(\n\t\t\t`The connected Ethereum Node did not respond within ${\n\t\t\t\tvalue.numberOfSeconds\n\t\t\t} seconds, please make sure your transaction was properly sent and you are connected to a healthy Node. Be aware that transaction might still be pending or mined!\\n\\tTransaction Hash: ${\n\t\t\t\tvalue.transactionHash ? value.transactionHash.toString() : 'not available'\n\t\t\t}`,\n\t\t);\n\t}\n}\n\nfunction transactionTimeoutHint(transactionHash?: Bytes) {\n\treturn `Please make sure your transaction was properly sent and there no pervious pending transaction for the same account. However, be aware that it might still be mined!\\n\\tTransaction Hash: ${\n\t\ttransactionHash ? transactionHash.toString() : 'not available'\n\t}`;\n}\n\nexport class TransactionPollingTimeoutError extends BaseWeb3Error {\n\tpublic code = ERR_TX_POLLING_TIMEOUT;\n\n\tpublic constructor(value: { numberOfSeconds: number; transactionHash: Bytes }) {\n\t\tsuper(\n\t\t\t`Transaction was not mined within ${\n\t\t\t\tvalue.numberOfSeconds\n\t\t\t} seconds. ${transactionTimeoutHint(value.transactionHash)}`,\n\t\t);\n\t}\n}\n\nexport class TransactionBlockTimeoutError extends BaseWeb3Error {\n\tpublic code = ERR_TX_BLOCK_TIMEOUT;\n\n\tpublic constructor(value: {\n\t\tstarterBlockNumber: number;\n\t\tnumberOfBlocks: number;\n\t\ttransactionHash?: Bytes;\n\t}) {\n\t\tsuper(\n\t\t\t`Transaction started at ${value.starterBlockNumber} but was not mined within ${\n\t\t\t\tvalue.numberOfBlocks\n\t\t\t} blocks. ${transactionTimeoutHint(value.transactionHash)}`,\n\t\t);\n\t}\n}\n\nexport class TransactionMissingReceiptOrBlockHashError extends InvalidValueError {\n\tpublic code = ERR_TX_RECEIPT_MISSING_OR_BLOCKHASH_NULL;\n\n\tpublic constructor(value: {\n\t\treceipt: TransactionReceipt;\n\t\tblockHash: Bytes;\n\t\ttransactionHash: Bytes;\n\t}) {\n\t\tsuper(\n\t\t\t`receipt: ${JSON.stringify(\n\t\t\t\tvalue.receipt,\n\t\t\t)}, blockHash: ${value.blockHash?.toString()}, transactionHash: ${value.transactionHash?.toString()}`,\n\t\t\t`Receipt missing or blockHash null`,\n\t\t);\n\t}\n}\n\nexport class TransactionReceiptMissingBlockNumberError extends InvalidValueError {\n\tpublic code = ERR_TX_RECEIPT_MISSING_BLOCK_NUMBER;\n\n\tpublic constructor(value: { receipt: TransactionReceipt }) {\n\t\tsuper(`receipt: ${JSON.stringify(value.receipt)}`, `Receipt missing block number`);\n\t}\n}\n\nexport class TransactionSigningError extends BaseWeb3Error {\n\tpublic code = ERR_TX_SIGNING;\n\tpublic constructor(errorDetails: string) {\n\t\tsuper(`Invalid signature. \"${errorDetails}\"`);\n\t}\n}\n\nexport class LocalWalletNotAvailableError extends InvalidValueError {\n\tpublic code = ERR_TX_LOCAL_WALLET_NOT_AVAILABLE;\n\n\tpublic constructor() {\n\t\tsuper(\n\t\t\t'LocalWalletNotAvailableError',\n\t\t\t`Attempted to index account in local wallet, but no wallet is available`,\n\t\t);\n\t}\n}\nexport class InvalidPropertiesForTransactionTypeError extends BaseWeb3Error {\n\tpublic code = ERR_TX_INVALID_PROPERTIES_FOR_TYPE;\n\n\tpublic constructor(\n\t\tvalidationError: Web3ValidationErrorObject[],\n\t\ttxType: '0x0' | '0x1' | '0x2',\n\t) {\n\t\tconst invalidPropertyNames: string[] = [];\n\t\tvalidationError.forEach(error => invalidPropertyNames.push(error.keyword));\n\t\tsuper(\n\t\t\t`The following properties are invalid for the transaction type ${txType}: ${invalidPropertyNames.join(\n\t\t\t\t', ',\n\t\t\t)}`,\n\t\t);\n\t}\n}\n"]},"metadata":{},"sourceType":"script"}