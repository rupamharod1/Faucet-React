{"ast":null,"code":"\"use strict\";\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.numberLimits = void 0;\n/*\n * this variable contains the precalculated limits for all the numbers for uint and int types\n*/\n\nexports.numberLimits = new Map();\nlet base = BigInt(256); // 2 ^ 8 = 256\n\nfor (let i = 8; i <= 256; i += 8) {\n  exports.numberLimits.set(`uint${i}`, {\n    min: BigInt(0),\n    max: base - BigInt(1)\n  });\n  exports.numberLimits.set(`int${i}`, {\n    min: -base / BigInt(2),\n    max: base / BigInt(2) - BigInt(1)\n  });\n  base *= BigInt(256);\n} // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n\nexports.numberLimits.set(`int`, exports.numberLimits.get('int256')); // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\nexports.numberLimits.set(`uint`, exports.numberLimits.get('uint256'));","map":{"version":3,"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;AAiBA;;;;AAGaA,uBAAe,IAAIC,GAAJ,EAAf;AAEb,IAAIC,IAAI,GAAGC,MAAM,CAAC,GAAD,CAAjB,C,CAAwB;;AACxB,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,GAArB,EAA0BA,CAAC,IAAI,CAA/B,EAAkC;EACjCJ,qBAAaK,GAAb,CAAiB,OAAOD,CAAC,EAAzB,EAA6B;IAC5BE,GAAG,EAAEH,MAAM,CAAC,CAAD,CADiB;IAE5BI,GAAG,EAAEL,IAAI,GAAGC,MAAM,CAAC,CAAD;EAFU,CAA7B;EAIAH,qBAAaK,GAAb,CAAiB,MAAMD,CAAC,EAAxB,EAA4B;IAC3BE,GAAG,EAAE,CAACJ,IAAD,GAAQC,MAAM,CAAC,CAAD,CADQ;IAE3BI,GAAG,EAAEL,IAAI,GAAGC,MAAM,CAAC,CAAD,CAAb,GAAmBA,MAAM,CAAC,CAAD;EAFH,CAA5B;EAIAD,IAAI,IAAIC,MAAM,CAAC,GAAD,CAAd;AACA,C,CAED;;;AACAH,qBAAaK,GAAb,CAAiB,KAAjB,EAAwBL,qBAAaQ,GAAb,CAAiB,QAAjB,CAAxB,E,CACA;;AACAR,qBAAaK,GAAb,CAAiB,MAAjB,EAAyBL,qBAAaQ,GAAb,CAAiB,SAAjB,CAAzB","names":["exports","Map","base","BigInt","i","set","min","max","get"],"sources":["/home/rupam/Desktop/Faucet-React/node_modules/web3-eth-abi/src/coders/base/numbersLimits.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/* \n * this variable contains the precalculated limits for all the numbers for uint and int types\n*/\nexport const numberLimits = new Map<string, { min: bigint; max: bigint }>();\n\nlet base = BigInt(256); // 2 ^ 8 = 256\nfor (let i = 8; i <= 256; i += 8) {\n\tnumberLimits.set(`uint${i}`, {\n\t\tmin: BigInt(0),\n\t\tmax: base - BigInt(1),\n\t});\n\tnumberLimits.set(`int${i}`, {\n\t\tmin: -base / BigInt(2),\n\t\tmax: base / BigInt(2) - BigInt(1),\n\t});\n\tbase *= BigInt(256);\n}\n\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nnumberLimits.set(`int`, numberLimits.get('int256')!);\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nnumberLimits.set(`uint`, numberLimits.get('uint256')!);\n"]},"metadata":{},"sourceType":"script"}