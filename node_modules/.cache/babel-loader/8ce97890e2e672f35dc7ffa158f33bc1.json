{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.decodeString = exports.encodeString = void 0;\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nconst web3_errors_1 = require(\"web3-errors\");\n\nconst web3_utils_1 = require(\"web3-utils\");\n\nconst bytes_js_1 = require(\"./bytes.js\");\n\nfunction encodeString(_param, input) {\n  if (typeof input !== 'string') {\n    throw new web3_errors_1.AbiError('invalid input, should be string', {\n      input\n    });\n  }\n\n  const bytes = (0, web3_utils_1.utf8ToBytes)(input);\n  return (0, bytes_js_1.encodeBytes)({\n    type: 'bytes',\n    name: ''\n  }, bytes);\n}\n\nexports.encodeString = encodeString;\n\nfunction decodeString(_param, bytes) {\n  const r = (0, bytes_js_1.decodeBytes)({\n    type: 'bytes',\n    name: ''\n  }, bytes);\n  return {\n    result: (0, web3_utils_1.hexToUtf8)(r.result),\n    encoded: r.encoded,\n    consumed: r.consumed\n  };\n}\n\nexports.decodeString = decodeString;","map":{"version":3,"mappings":";;;;;;AAAA;;;;;;;;;;;;;;;;;AAgBA;;AAEA;;AAEA;;AAEA,SAAgBA,YAAhB,CAA6BC,MAA7B,EAAmDC,KAAnD,EAAiE;EAChE,IAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;IAC9B,MAAM,IAAIC,sBAAJ,CAAa,iCAAb,EAAgD;MAAED;IAAF,CAAhD,CAAN;EACA;;EACD,MAAME,KAAK,GAAG,8BAAYF,KAAZ,CAAd;EACA,OAAO,4BAAY;IAAEG,IAAI,EAAE,OAAR;IAAiBC,IAAI,EAAE;EAAvB,CAAZ,EAAyCF,KAAzC,CAAP;AACA;;AANDG;;AAQA,SAAgBC,YAAhB,CAA6BP,MAA7B,EAAmDG,KAAnD,EAAoE;EACnE,MAAMK,CAAC,GAAG,4BAAY;IAAEJ,IAAI,EAAE,OAAR;IAAiBC,IAAI,EAAE;EAAvB,CAAZ,EAAyCF,KAAzC,CAAV;EACA,OAAO;IACNM,MAAM,EAAE,4BAAUD,CAAC,CAACC,MAAZ,CADF;IAENC,OAAO,EAAEF,CAAC,CAACE,OAFL;IAGNC,QAAQ,EAAEH,CAAC,CAACG;EAHN,CAAP;AAKA;;AAPDL","names":["encodeString","_param","input","web3_errors_1","bytes","type","name","exports","decodeString","r","result","encoded","consumed"],"sources":["/home/rupam/Desktop/Faucet-React/node_modules/web3-eth-abi/src/coders/base/string.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { AbiError } from 'web3-errors';\nimport { AbiParameter } from 'web3-types';\nimport { hexToUtf8, utf8ToBytes } from 'web3-utils';\nimport { DecoderResult, EncoderResult } from '../types.js';\nimport { decodeBytes, encodeBytes } from './bytes.js';\n\nexport function encodeString(_param: AbiParameter, input: unknown): EncoderResult {\n\tif (typeof input !== 'string') {\n\t\tthrow new AbiError('invalid input, should be string', { input });\n\t}\n\tconst bytes = utf8ToBytes(input);\n\treturn encodeBytes({ type: 'bytes', name: '' }, bytes);\n}\n\nexport function decodeString(_param: AbiParameter, bytes: Uint8Array): DecoderResult<string> {\n\tconst r = decodeBytes({ type: 'bytes', name: '' }, bytes);\n\treturn {\n\t\tresult: hexToUtf8(r.result),\n\t\tencoded: r.encoded,\n\t\tconsumed: r.consumed,\n\t};\n}\n"]},"metadata":{},"sourceType":"script"}