{"ast":null,"code":"\"use strict\";\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getTransactionError = void 0;\n\nconst web3_errors_1 = require(\"web3-errors\"); // eslint-disable-next-line import/no-cycle\n\n\nconst get_revert_reason_js_1 = require(\"./get_revert_reason.js\");\n\nfunction getTransactionError(web3Context, transactionFormatted, transactionReceiptFormatted, receivedError, contractAbi, knownReason) {\n  return __awaiter(this, void 0, void 0, function* () {\n    let _reason = knownReason;\n\n    if (_reason === undefined) {\n      if (receivedError !== undefined) {\n        _reason = (0, get_revert_reason_js_1.parseTransactionError)(receivedError);\n      } else if (web3Context.handleRevert && transactionFormatted !== undefined) {\n        _reason = yield (0, get_revert_reason_js_1.getRevertReason)(web3Context, transactionFormatted, contractAbi);\n      }\n    }\n\n    let error;\n\n    if (_reason === undefined) {\n      error = new web3_errors_1.TransactionRevertedWithoutReasonError(transactionReceiptFormatted);\n    } else if (typeof _reason === 'string') {\n      error = new web3_errors_1.TransactionRevertInstructionError(_reason, undefined, transactionReceiptFormatted);\n    } else if (_reason.customErrorName !== undefined && _reason.customErrorDecodedSignature !== undefined && _reason.customErrorArguments !== undefined) {\n      const reasonWithCustomError = _reason;\n      error = new web3_errors_1.TransactionRevertWithCustomError(reasonWithCustomError.reason, reasonWithCustomError.customErrorName, reasonWithCustomError.customErrorDecodedSignature, reasonWithCustomError.customErrorArguments, reasonWithCustomError.signature, transactionReceiptFormatted, reasonWithCustomError.data);\n    } else {\n      error = new web3_errors_1.TransactionRevertInstructionError(_reason.reason, _reason.signature, transactionReceiptFormatted, _reason.data);\n    }\n\n    return error;\n  });\n}\n\nexports.getTransactionError = getTransactionError;","map":{"version":3,"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkBA,6C,CAaA;;;AACA;;AAEA,SAAsBA,mBAAtB,CACCC,WADD,EAECC,oBAFD,EAGCC,2BAHD,EAICC,aAJD,EAKCC,WALD,EAMCC,WAND,EAMkE;;IAEjE,IAAIC,OAAO,GAAoED,WAA/E;;IAEA,IAAIC,OAAO,KAAKC,SAAhB,EAA2B;MAC1B,IAAIJ,aAAa,KAAKI,SAAtB,EAAiC;QAChCD,OAAO,GAAG,kDAAsBH,aAAtB,CAAV;MACA,CAFD,MAEO,IAAIH,WAAW,CAACQ,YAAZ,IAA4BP,oBAAoB,KAAKM,SAAzD,EAAoE;QAC1ED,OAAO,GAAG,MAAM,4CAAgBN,WAAhB,EAA6BC,oBAA7B,EAAmDG,WAAnD,CAAhB;MACA;IACD;;IAED,IAAIK,KAAJ;;IAIA,IAAIH,OAAO,KAAKC,SAAhB,EAA2B;MAC1BE,KAAK,GAAG,IAAIC,mDAAJ,CAENR,2BAFM,CAAR;IAGA,CAJD,MAIO,IAAI,OAAOI,OAAP,KAAmB,QAAvB,EAAiC;MACvCG,KAAK,GAAG,IAAIC,+CAAJ,CACPJ,OADO,EAEPC,SAFO,EAGPL,2BAHO,CAAR;IAKA,CANM,MAMA,IACLI,OAAuC,CAACK,eAAxC,KAA4DJ,SAA5D,IACAD,OAAuC,CAACM,2BAAxC,KAAwEL,SADxE,IAEAD,OAAuC,CAACO,oBAAxC,KAAiEN,SAH5D,EAIL;MACD,MAAMO,qBAAqB,GAC1BR,OADD;MAEAG,KAAK,GAAG,IAAIC,8CAAJ,CACPI,qBAAqB,CAACC,MADf,EAEPD,qBAAqB,CAACH,eAFf,EAGPG,qBAAqB,CAACF,2BAHf,EAIPE,qBAAqB,CAACD,oBAJf,EAKPC,qBAAqB,CAACE,SALf,EAMPd,2BANO,EAOPY,qBAAqB,CAACG,IAPf,CAAR;IASA,CAhBM,MAgBA;MACNR,KAAK,GAAG,IAAIC,+CAAJ,CACPJ,OAAO,CAACS,MADD,EAEPT,OAAO,CAACU,SAFD,EAGPd,2BAHO,EAIPI,OAAO,CAACW,IAJD,CAAR;IAMA;;IAED,OAAOR,KAAP;EACA;AAAA;;AA1DDS","names":["getTransactionError","web3Context","transactionFormatted","transactionReceiptFormatted","receivedError","contractAbi","knownReason","_reason","undefined","handleRevert","error","web3_errors_1","customErrorName","customErrorDecodedSignature","customErrorArguments","reasonWithCustomError","reason","signature","data","exports"],"sources":["/home/rupam/Desktop/Faucet-React/node_modules/web3-eth/src/utils/get_transaction_error.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { Web3Context } from 'web3-core';\nimport {\n\tTransactionRevertedWithoutReasonError,\n\tTransactionRevertInstructionError,\n\tTransactionRevertWithCustomError,\n} from 'web3-errors';\nimport {\n\tDataFormat,\n\tFormatType,\n\tContractAbi,\n\tTransactionCall,\n\tTransactionReceipt,\n} from 'web3-types';\nimport { RevertReason, RevertReasonWithCustomError } from '../types.js';\n// eslint-disable-next-line import/no-cycle\nimport { getRevertReason, parseTransactionError } from './get_revert_reason.js';\n\nexport async function getTransactionError<ReturnFormat extends DataFormat>(\n\tweb3Context: Web3Context,\n\ttransactionFormatted?: TransactionCall,\n\ttransactionReceiptFormatted?: FormatType<TransactionReceipt, ReturnFormat>,\n\treceivedError?: unknown,\n\tcontractAbi?: ContractAbi,\n\tknownReason?: string | RevertReason | RevertReasonWithCustomError,\n) {\n\tlet _reason: string | RevertReason | RevertReasonWithCustomError | undefined = knownReason;\n\n\tif (_reason === undefined) {\n\t\tif (receivedError !== undefined) {\n\t\t\t_reason = parseTransactionError(receivedError);\n\t\t} else if (web3Context.handleRevert && transactionFormatted !== undefined) {\n\t\t\t_reason = await getRevertReason(web3Context, transactionFormatted, contractAbi);\n\t\t}\n\t}\n\n\tlet error:\n\t\t| TransactionRevertedWithoutReasonError<FormatType<TransactionReceipt, ReturnFormat>>\n\t\t| TransactionRevertInstructionError<FormatType<TransactionReceipt, ReturnFormat>>\n\t\t| TransactionRevertWithCustomError<FormatType<TransactionReceipt, ReturnFormat>>;\n\tif (_reason === undefined) {\n\t\terror = new TransactionRevertedWithoutReasonError<\n\t\t\tFormatType<TransactionReceipt, ReturnFormat>\n\t\t>(transactionReceiptFormatted);\n\t} else if (typeof _reason === 'string') {\n\t\terror = new TransactionRevertInstructionError<FormatType<TransactionReceipt, ReturnFormat>>(\n\t\t\t_reason,\n\t\t\tundefined,\n\t\t\ttransactionReceiptFormatted,\n\t\t);\n\t} else if (\n\t\t(_reason as RevertReasonWithCustomError).customErrorName !== undefined &&\n\t\t(_reason as RevertReasonWithCustomError).customErrorDecodedSignature !== undefined &&\n\t\t(_reason as RevertReasonWithCustomError).customErrorArguments !== undefined\n\t) {\n\t\tconst reasonWithCustomError: RevertReasonWithCustomError =\n\t\t\t_reason as RevertReasonWithCustomError;\n\t\terror = new TransactionRevertWithCustomError<FormatType<TransactionReceipt, ReturnFormat>>(\n\t\t\treasonWithCustomError.reason,\n\t\t\treasonWithCustomError.customErrorName,\n\t\t\treasonWithCustomError.customErrorDecodedSignature,\n\t\t\treasonWithCustomError.customErrorArguments,\n\t\t\treasonWithCustomError.signature,\n\t\t\ttransactionReceiptFormatted,\n\t\t\treasonWithCustomError.data,\n\t\t);\n\t} else {\n\t\terror = new TransactionRevertInstructionError<FormatType<TransactionReceipt, ReturnFormat>>(\n\t\t\t_reason.reason,\n\t\t\t_reason.signature,\n\t\t\ttransactionReceiptFormatted,\n\t\t\t_reason.data,\n\t\t);\n\t}\n\n\treturn error;\n}\n"]},"metadata":{},"sourceType":"script"}