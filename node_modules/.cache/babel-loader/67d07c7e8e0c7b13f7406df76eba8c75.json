{"ast":null,"code":"\"use strict\";\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getRevertReason = exports.parseTransactionError = void 0;\n\nconst web3_errors_1 = require(\"web3-errors\");\n\nconst web3_eth_abi_1 = require(\"web3-eth-abi\");\n\nconst web3_types_1 = require(\"web3-types\"); // eslint-disable-next-line import/no-cycle\n\n\nconst rpc_method_wrappers_js_1 = require(\"../rpc_method_wrappers.js\");\n\nconst parseTransactionError = (error, contractAbi) => {\n  var _a, _b, _c, _d;\n\n  if (error instanceof web3_errors_1.ContractExecutionError && error.innerError instanceof web3_errors_1.Eip838ExecutionError) {\n    if (contractAbi !== undefined) {\n      const errorsAbi = contractAbi.filter(abi => (0, web3_eth_abi_1.isAbiErrorFragment)(abi));\n      (0, web3_eth_abi_1.decodeContractErrorData)(errorsAbi, error.innerError);\n      return {\n        reason: error.innerError.message,\n        signature: (_a = error.innerError.data) === null || _a === void 0 ? void 0 : _a.slice(0, 10),\n        data: (_b = error.innerError.data) === null || _b === void 0 ? void 0 : _b.substring(10),\n        customErrorName: error.innerError.errorName,\n        customErrorDecodedSignature: error.innerError.errorSignature,\n        customErrorArguments: error.innerError.errorArgs\n      };\n    }\n\n    return {\n      reason: error.innerError.message,\n      signature: (_c = error.innerError.data) === null || _c === void 0 ? void 0 : _c.slice(0, 10),\n      data: (_d = error.innerError.data) === null || _d === void 0 ? void 0 : _d.substring(10)\n    };\n  }\n\n  if (error instanceof web3_errors_1.InvalidResponseError && !Array.isArray(error.innerError) && error.innerError !== undefined) {\n    return error.innerError.message;\n  }\n\n  throw error;\n};\n\nexports.parseTransactionError = parseTransactionError;\n/**\n *\tReturns the revert reason generated by the EVM if the transaction were to be executed.\n *\n * @param web3Context - ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n * @param transaction - A transaction object where all properties are optional except `to`, however it's recommended to include the `from` property or it may default to `0x0000000000000000000000000000000000000000` depending on your node or provider.\n * @returns `undefined` if no revert reason was given, a revert reason object, a revert reason string, or an `unknown` error\n */\n\nfunction getRevertReason(web3Context, transaction, contractAbi) {\n  let returnFormat = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : web3_types_1.DEFAULT_RETURN_FORMAT;\n  return __awaiter(this, void 0, void 0, function* () {\n    try {\n      yield (0, rpc_method_wrappers_js_1.call)(web3Context, transaction, web3Context.defaultBlock, returnFormat);\n      return undefined;\n    } catch (error) {\n      return (0, exports.parseTransactionError)(error, contractAbi);\n    }\n  });\n}\n\nexports.getRevertReason = getRevertReason;","map":{"version":3,"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkBA;;AACA;;AACA,2C,CASA;;;AACA;;AAGO,MAAMA,qBAAqB,GAAG,CAACC,KAAD,EAAiBC,WAAjB,KAA8C;;;EAClF,IACCD,KAAK,YAAYE,oCAAjB,IACAF,KAAK,CAACG,UAAN,YAA4BD,kCAF7B,EAGE;IACD,IAAID,WAAW,KAAKG,SAApB,EAA+B;MAC9B,MAAMC,SAAS,GAAGJ,WAAW,CAACK,MAAZ,CAAmBC,GAAG,IACvC,uCAAmBA,GAAnB,CADiB,CAAlB;MAGA,4CAAwBF,SAAxB,EAAmCL,KAAK,CAACG,UAAzC;MAEA,OAAO;QACNK,MAAM,EAAER,KAAK,CAACG,UAAN,CAAiBM,OADnB;QAENC,SAAS,EAAE,WAAK,CAACP,UAAN,CAAiBQ,IAAjB,MAAqB,IAArB,IAAqBC,aAArB,GAAqB,MAArB,GAAqBA,GAAEC,KAAF,CAAQ,CAAR,EAAW,EAAX,CAF1B;QAGNF,IAAI,EAAE,WAAK,CAACR,UAAN,CAAiBQ,IAAjB,MAAqB,IAArB,IAAqBG,aAArB,GAAqB,MAArB,GAAqBA,GAAEC,SAAF,CAAY,EAAZ,CAHrB;QAINC,eAAe,EAAEhB,KAAK,CAACG,UAAN,CAAiBc,SAJ5B;QAKNC,2BAA2B,EAAElB,KAAK,CAACG,UAAN,CAAiBgB,cALxC;QAMNC,oBAAoB,EAAEpB,KAAK,CAACG,UAAN,CAAiBkB;MANjC,CAAP;IAQA;;IAED,OAAO;MACNb,MAAM,EAAER,KAAK,CAACG,UAAN,CAAiBM,OADnB;MAENC,SAAS,EAAE,WAAK,CAACP,UAAN,CAAiBQ,IAAjB,MAAqB,IAArB,IAAqBW,aAArB,GAAqB,MAArB,GAAqBA,GAAET,KAAF,CAAQ,CAAR,EAAW,EAAX,CAF1B;MAGNF,IAAI,EAAE,WAAK,CAACR,UAAN,CAAiBQ,IAAjB,MAAqB,IAArB,IAAqBY,aAArB,GAAqB,MAArB,GAAqBA,GAAER,SAAF,CAAY,EAAZ;IAHrB,CAAP;EAKA;;EAED,IACCf,KAAK,YAAYE,kCAAjB,IACA,CAACsB,KAAK,CAACC,OAAN,CAAczB,KAAK,CAACG,UAApB,CADD,IAEAH,KAAK,CAACG,UAAN,KAAqBC,SAHtB,EAIE;IACD,OAAOJ,KAAK,CAACG,UAAN,CAAiBM,OAAxB;EACA;;EAED,MAAMT,KAAN;AACA,CArCM;;AAAM0B,gCAAqB3B,qBAArB;AAuCb;;;;;;;;AAOA,SAAsB4B,eAAtB,CAGCC,WAHD,EAICC,WAJD,EAKC5B,WALD,EAMmE;EAAA,IAAlE6B,YAAkE,uEAArCC,kCAAqC;;IAElE,IAAI;MACH,MAAM,mCAAKH,WAAL,EAAkBC,WAAlB,EAA+BD,WAAW,CAACI,YAA3C,EAAyDF,YAAzD,CAAN;MACA,OAAO1B,SAAP;IACA,CAHD,CAGE,OAAOJ,KAAP,EAAc;MACf,OAAO,mCAAsBA,KAAtB,EAA6BC,WAA7B,CAAP;IACA;EACD;AAAA;;AAdDyB","names":["parseTransactionError","error","contractAbi","web3_errors_1","innerError","undefined","errorsAbi","filter","abi","reason","message","signature","data","_a","slice","_b","substring","customErrorName","errorName","customErrorDecodedSignature","errorSignature","customErrorArguments","errorArgs","_c","_d","Array","isArray","exports","getRevertReason","web3Context","transaction","returnFormat","web3_types_1","defaultBlock"],"sources":["/home/rupam/Desktop/Faucet-React/node_modules/web3-eth/src/utils/get_revert_reason.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { Web3Context } from 'web3-core';\nimport { ContractExecutionError, Eip838ExecutionError, InvalidResponseError } from 'web3-errors';\nimport { decodeContractErrorData, isAbiErrorFragment } from 'web3-eth-abi';\nimport {\n\tAbiErrorFragment,\n\tContractAbi,\n\tDataFormat,\n\tDEFAULT_RETURN_FORMAT,\n\tEthExecutionAPI,\n\tTransactionCall,\n} from 'web3-types';\n\n// eslint-disable-next-line import/no-cycle\nimport { call } from '../rpc_method_wrappers.js';\nimport { RevertReason, RevertReasonWithCustomError } from '../types.js';\n\nexport const parseTransactionError = (error: unknown, contractAbi?: ContractAbi) => {\n\tif (\n\t\terror instanceof ContractExecutionError &&\n\t\terror.innerError instanceof Eip838ExecutionError\n\t) {\n\t\tif (contractAbi !== undefined) {\n\t\t\tconst errorsAbi = contractAbi.filter(abi =>\n\t\t\t\tisAbiErrorFragment(abi),\n\t\t\t) as unknown as AbiErrorFragment[];\n\t\t\tdecodeContractErrorData(errorsAbi, error.innerError);\n\n\t\t\treturn {\n\t\t\t\treason: error.innerError.message,\n\t\t\t\tsignature: error.innerError.data?.slice(0, 10),\n\t\t\t\tdata: error.innerError.data?.substring(10),\n\t\t\t\tcustomErrorName: error.innerError.errorName,\n\t\t\t\tcustomErrorDecodedSignature: error.innerError.errorSignature,\n\t\t\t\tcustomErrorArguments: error.innerError.errorArgs,\n\t\t\t} as RevertReasonWithCustomError;\n\t\t}\n\n\t\treturn {\n\t\t\treason: error.innerError.message,\n\t\t\tsignature: error.innerError.data?.slice(0, 10),\n\t\t\tdata: error.innerError.data?.substring(10),\n\t\t} as RevertReason;\n\t}\n\n\tif (\n\t\terror instanceof InvalidResponseError &&\n\t\t!Array.isArray(error.innerError) &&\n\t\terror.innerError !== undefined\n\t) {\n\t\treturn error.innerError.message;\n\t}\n\n\tthrow error;\n};\n\n/**\n *\tReturns the revert reason generated by the EVM if the transaction were to be executed.\n *\n * @param web3Context - ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n * @param transaction - A transaction object where all properties are optional except `to`, however it's recommended to include the `from` property or it may default to `0x0000000000000000000000000000000000000000` depending on your node or provider.\n * @returns `undefined` if no revert reason was given, a revert reason object, a revert reason string, or an `unknown` error\n */\nexport async function getRevertReason<\n\tReturnFormat extends DataFormat = typeof DEFAULT_RETURN_FORMAT,\n>(\n\tweb3Context: Web3Context<EthExecutionAPI>,\n\ttransaction: TransactionCall,\n\tcontractAbi?: ContractAbi,\n\treturnFormat: ReturnFormat = DEFAULT_RETURN_FORMAT as ReturnFormat,\n): Promise<undefined | RevertReason | RevertReasonWithCustomError | string> {\n\ttry {\n\t\tawait call(web3Context, transaction, web3Context.defaultBlock, returnFormat);\n\t\treturn undefined;\n\t} catch (error) {\n\t\treturn parseTransactionError(error, contractAbi);\n\t}\n}\n"]},"metadata":{},"sourceType":"script"}