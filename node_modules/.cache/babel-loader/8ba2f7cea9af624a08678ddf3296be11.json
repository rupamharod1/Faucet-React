{"ast":null,"code":"\"use strict\";\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.encodeErrorSignature = void 0;\n\nconst web3_utils_1 = require(\"web3-utils\");\n\nconst web3_errors_1 = require(\"web3-errors\");\n\nconst utils_js_1 = require(\"../utils.js\");\n/**\n * Encodes the error name to its ABI signature, which are the sha3 hash of the error name including input types.\n */\n\n\nconst encodeErrorSignature = functionName => {\n  if (typeof functionName !== 'string' && !(0, utils_js_1.isAbiErrorFragment)(functionName)) {\n    throw new web3_errors_1.AbiError('Invalid parameter value in encodeErrorSignature');\n  }\n\n  let name;\n\n  if (functionName && (typeof functionName === 'function' || typeof functionName === 'object')) {\n    name = (0, utils_js_1.jsonInterfaceMethodToString)(functionName);\n  } else {\n    name = functionName;\n  }\n\n  return (0, web3_utils_1.sha3Raw)(name);\n};\n\nexports.encodeErrorSignature = encodeErrorSignature;","map":{"version":3,"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;AAiBA;;AACA;;AAEA;AAEA;;;;;AAGO,MAAMA,oBAAoB,GAAIC,YAAD,IAAoD;EACvF,IAAI,OAAOA,YAAP,KAAwB,QAAxB,IAAoC,CAAC,mCAAmBA,YAAnB,CAAzC,EAA2E;IAC1E,MAAM,IAAIC,sBAAJ,CAAa,iDAAb,CAAN;EACA;;EAED,IAAIC,IAAJ;;EAEA,IAAIF,YAAY,KAAK,OAAOA,YAAP,KAAwB,UAAxB,IAAsC,OAAOA,YAAP,KAAwB,QAAnE,CAAhB,EAA8F;IAC7FE,IAAI,GAAG,4CAA4BF,YAA5B,CAAP;EACA,CAFD,MAEO;IACNE,IAAI,GAAGF,YAAP;EACA;;EAED,OAAO,0BAAQE,IAAR,CAAP;AACA,CAdM;;AAAMC,+BAAoBJ,oBAApB","names":["encodeErrorSignature","functionName","web3_errors_1","name","exports"],"sources":["/home/rupam/Desktop/Faucet-React/node_modules/web3-eth-abi/src/api/errors_api.ts"],"sourcesContent":["ï»¿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { sha3Raw } from 'web3-utils';\nimport { AbiError } from 'web3-errors';\nimport { AbiErrorFragment } from 'web3-types';\nimport { jsonInterfaceMethodToString, isAbiErrorFragment } from '../utils.js';\n\n/**\n * Encodes the error name to its ABI signature, which are the sha3 hash of the error name including input types.\n */\nexport const encodeErrorSignature = (functionName: string | AbiErrorFragment): string => {\n\tif (typeof functionName !== 'string' && !isAbiErrorFragment(functionName)) {\n\t\tthrow new AbiError('Invalid parameter value in encodeErrorSignature');\n\t}\n\n\tlet name: string;\n\n\tif (functionName && (typeof functionName === 'function' || typeof functionName === 'object')) {\n\t\tname = jsonInterfaceMethodToString(functionName);\n\t} else {\n\t\tname = functionName;\n\t}\n\n\treturn sha3Raw(name);\n};\n"]},"metadata":{},"sourceType":"script"}