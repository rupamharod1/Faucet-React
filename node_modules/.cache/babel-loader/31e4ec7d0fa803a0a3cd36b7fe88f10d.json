{"ast":null,"code":"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { format, isNullish, keccak256 } from 'web3-utils';\nimport { FMT_NUMBER, FMT_BYTES } from 'web3-types';\nimport { decodeParameters, encodeEventSignature, encodeFunctionSignature, encodeParameter, encodeParameters, isAbiConstructorFragment, jsonInterfaceMethodToString } from 'web3-eth-abi';\nimport { blockSchema, ALL_EVENTS } from 'web3-eth';\nimport { Web3ContractError } from 'web3-errors';\nexport { decodeEventABI } from 'web3-eth';\nexport const encodeEventABI = (_ref, event, options) => {\n  let {\n    address\n  } = _ref;\n\n  var _a, _b;\n\n  const topics = options === null || options === void 0 ? void 0 : options.topics;\n  const filter = (_a = options === null || options === void 0 ? void 0 : options.filter) !== null && _a !== void 0 ? _a : {};\n  const opts = {};\n\n  if (!isNullish(options === null || options === void 0 ? void 0 : options.fromBlock)) {\n    opts.fromBlock = format(blockSchema.properties.number, options === null || options === void 0 ? void 0 : options.fromBlock, {\n      number: FMT_NUMBER.HEX,\n      bytes: FMT_BYTES.HEX\n    });\n  }\n\n  if (!isNullish(options === null || options === void 0 ? void 0 : options.toBlock)) {\n    opts.toBlock = format(blockSchema.properties.number, options === null || options === void 0 ? void 0 : options.toBlock, {\n      number: FMT_NUMBER.HEX,\n      bytes: FMT_BYTES.HEX\n    });\n  }\n\n  if (topics && Array.isArray(topics)) {\n    opts.topics = [...topics];\n  } else {\n    opts.topics = []; // add event signature\n\n    if (event && !event.anonymous && ![ALL_EVENTS, 'allEvents'].includes(event.name)) {\n      opts.topics.push((_b = event.signature) !== null && _b !== void 0 ? _b : encodeEventSignature(jsonInterfaceMethodToString(event)));\n    } // add event topics (indexed arguments)\n\n\n    if (![ALL_EVENTS, 'allEvents'].includes(event.name) && event.inputs) {\n      for (const input of event.inputs) {\n        if (!input.indexed) {\n          continue;\n        }\n\n        const value = filter[input.name];\n\n        if (!value) {\n          // eslint-disable-next-line no-null/no-null\n          opts.topics.push(null);\n          continue;\n        } // TODO: https://github.com/ethereum/web3.js/issues/344\n        // TODO: deal properly with components\n\n\n        if (Array.isArray(value)) {\n          opts.topics.push(value.map(v => encodeParameter(input.type, v)));\n        } else if (input.type === 'string') {\n          opts.topics.push(keccak256(value));\n        } else {\n          opts.topics.push(encodeParameter(input.type, value));\n        }\n      }\n    }\n  }\n\n  if (!opts.topics.length) delete opts.topics;\n\n  if (address) {\n    opts.address = address.toLowerCase();\n  }\n\n  return opts;\n};\nexport const encodeMethodABI = (abi, args, deployData) => {\n  const inputLength = Array.isArray(abi.inputs) ? abi.inputs.length : 0;\n\n  if (inputLength !== args.length) {\n    throw new Web3ContractError(`The number of arguments is not matching the methods required number. You need to pass ${inputLength} arguments.`);\n  }\n\n  const params = encodeParameters(Array.isArray(abi.inputs) ? abi.inputs : [], args).replace('0x', '');\n\n  if (isAbiConstructorFragment(abi)) {\n    if (!deployData) throw new Web3ContractError('The contract has no contract data option set. This is necessary to append the constructor parameters.');\n\n    if (!deployData.startsWith('0x')) {\n      return `0x${deployData}${params}`;\n    }\n\n    return `${deployData}${params}`;\n  }\n\n  return `${encodeFunctionSignature(abi)}${params}`;\n};\nexport const decodeMethodReturn = (abi, returnValues) => {\n  // If it was constructor then we need to return contract address\n  if (abi.type === 'constructor') {\n    return returnValues;\n  }\n\n  if (!returnValues) {\n    // Using \"null\" value intentionally to match legacy behavior\n    // eslint-disable-next-line no-null/no-null\n    return null;\n  }\n\n  const value = returnValues.length >= 2 ? returnValues.slice(2) : returnValues;\n\n  if (!abi.outputs) {\n    // eslint-disable-next-line no-null/no-null\n    return null;\n  }\n\n  const result = decodeParameters([...abi.outputs], value);\n\n  if (result.__length__ === 1) {\n    return result[0];\n  }\n\n  return result;\n};","map":{"version":3,"mappings":"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","names":["format","isNullish","keccak256","FMT_NUMBER","FMT_BYTES","decodeParameters","encodeEventSignature","encodeFunctionSignature","encodeParameter","encodeParameters","isAbiConstructorFragment","jsonInterfaceMethodToString","blockSchema","ALL_EVENTS","Web3ContractError","decodeEventABI","encodeEventABI","event","options","address","topics","filter","_a","opts","fromBlock","properties","number","HEX","bytes","toBlock","Array","isArray","anonymous","includes","name","push","signature","_b","inputs","input","indexed","value","map","v","type","length","toLowerCase","encodeMethodABI","abi","args","deployData","inputLength","params","replace","startsWith","decodeMethodReturn","returnValues","slice","outputs","result","__length__"],"sources":["/home/rupam/Desktop/Faucet-React/node_modules/web3-eth-contract/src/encoding.ts"],"sourcesContent":["ï»¿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { format, isNullish, keccak256 } from 'web3-utils';\n\nimport {\n\tAbiConstructorFragment,\n\tAbiEventFragment,\n\tAbiFunctionFragment,\n\tFilter,\n\tHexString,\n\tTopic,\n\tFMT_NUMBER,\n\tFMT_BYTES,\n\tContractOptions,\n} from 'web3-types';\n\nimport {\n\tdecodeParameters,\n\tencodeEventSignature,\n\tencodeFunctionSignature,\n\tencodeParameter,\n\tencodeParameters,\n\tisAbiConstructorFragment,\n\tjsonInterfaceMethodToString,\n} from 'web3-eth-abi';\n\nimport { blockSchema, ALL_EVENTS } from 'web3-eth';\nimport { Web3ContractError } from 'web3-errors';\n\nexport { decodeEventABI } from 'web3-eth';\n\ntype Writeable<T> = { -readonly [P in keyof T]: T[P] };\nexport const encodeEventABI = (\n\t{ address }: ContractOptions,\n\tevent: AbiEventFragment & { signature: string },\n\toptions?: Filter,\n) => {\n\tconst topics = options?.topics;\n\tconst filter = options?.filter ?? {};\n\tconst opts: Writeable<Filter> = {};\n\n\tif (!isNullish(options?.fromBlock)) {\n\t\topts.fromBlock = format(blockSchema.properties.number, options?.fromBlock, {\n\t\t\tnumber: FMT_NUMBER.HEX,\n\t\t\tbytes: FMT_BYTES.HEX,\n\t\t});\n\t}\n\tif (!isNullish(options?.toBlock)) {\n\t\topts.toBlock = format(blockSchema.properties.number, options?.toBlock, {\n\t\t\tnumber: FMT_NUMBER.HEX,\n\t\t\tbytes: FMT_BYTES.HEX,\n\t\t});\n\t}\n\n\tif (topics && Array.isArray(topics)) {\n\t\topts.topics = [...topics] as Topic[];\n\t} else {\n\t\topts.topics = [];\n\t\t// add event signature\n\t\tif (event && !event.anonymous && ![ALL_EVENTS, 'allEvents'].includes(event.name)) {\n\t\t\topts.topics.push(\n\t\t\t\tevent.signature ?? encodeEventSignature(jsonInterfaceMethodToString(event)),\n\t\t\t);\n\t\t}\n\n\t\t// add event topics (indexed arguments)\n\t\tif (![ALL_EVENTS, 'allEvents'].includes(event.name) && event.inputs) {\n\t\t\tfor (const input of event.inputs) {\n\t\t\t\tif (!input.indexed) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst value = filter[input.name];\n\t\t\t\tif (!value) {\n\t\t\t\t\t// eslint-disable-next-line no-null/no-null\n\t\t\t\t\topts.topics.push(null);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// TODO: https://github.com/ethereum/web3.js/issues/344\n\t\t\t\t// TODO: deal properly with components\n\t\t\t\tif (Array.isArray(value)) {\n\t\t\t\t\topts.topics.push(value.map(v => encodeParameter(input.type, v)));\n\t\t\t\t} else if (input.type === 'string') {\n\t\t\t\t\topts.topics.push(keccak256(value as string));\n\t\t\t\t} else {\n\t\t\t\t\topts.topics.push(encodeParameter(input.type, value));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!opts.topics.length) delete opts.topics;\n\n\tif (address) {\n\t\topts.address = address.toLowerCase();\n\t}\n\n\treturn opts;\n};\n\nexport const encodeMethodABI = (\n\tabi: AbiFunctionFragment | AbiConstructorFragment,\n\targs: unknown[],\n\tdeployData?: HexString,\n) => {\n\tconst inputLength = Array.isArray(abi.inputs) ? abi.inputs.length : 0;\n\tif (inputLength !== args.length) {\n\t\tthrow new Web3ContractError(\n\t\t\t`The number of arguments is not matching the methods required number. You need to pass ${inputLength} arguments.`,\n\t\t);\n\t}\n\n\tconst params = encodeParameters(Array.isArray(abi.inputs) ? abi.inputs : [], args).replace(\n\t\t'0x',\n\t\t'',\n\t);\n\n\tif (isAbiConstructorFragment(abi)) {\n\t\tif (!deployData)\n\t\t\tthrow new Web3ContractError(\n\t\t\t\t'The contract has no contract data option set. This is necessary to append the constructor parameters.',\n\t\t\t);\n\n\t\tif (!deployData.startsWith('0x')) {\n\t\t\treturn `0x${deployData}${params}`;\n\t\t}\n\n\t\treturn `${deployData}${params}`;\n\t}\n\n\treturn `${encodeFunctionSignature(abi)}${params}`;\n};\n\nexport const decodeMethodReturn = (abi: AbiFunctionFragment, returnValues?: HexString) => {\n\t// If it was constructor then we need to return contract address\n\tif (abi.type === 'constructor') {\n\t\treturn returnValues;\n\t}\n\n\tif (!returnValues) {\n\t\t// Using \"null\" value intentionally to match legacy behavior\n\t\t// eslint-disable-next-line no-null/no-null\n\t\treturn null;\n\t}\n\n\tconst value = returnValues.length >= 2 ? returnValues.slice(2) : returnValues;\n\tif (!abi.outputs) {\n\t\t// eslint-disable-next-line no-null/no-null\n\t\treturn null;\n\t}\n\tconst result = decodeParameters([...abi.outputs], value);\n\n\tif (result.__length__ === 1) {\n\t\treturn result[0];\n\t}\n\n\treturn result;\n};\n"]},"metadata":{},"sourceType":"module"}