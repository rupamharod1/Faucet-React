{"ast":null,"code":"\"use strict\";\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.rpcErrorsMap = exports.LimitExceededError = exports.TransactionRejectedError = exports.VersionNotSupportedError = exports.ResourcesNotFoundError = exports.ResourceUnavailableError = exports.MethodNotSupported = exports.InvalidInputError = exports.InternalError = exports.InvalidParamsError = exports.MethodNotFoundError = exports.InvalidRequestError = exports.ParseError = exports.EIP1193ProviderRpcError = exports.RpcError = void 0;\n\nconst web3_error_base_js_1 = require(\"../web3_error_base.js\");\n\nconst error_codes_js_1 = require(\"../error_codes.js\");\n\nconst rpc_error_messages_js_1 = require(\"./rpc_error_messages.js\");\n\nclass RpcError extends web3_error_base_js_1.BaseWeb3Error {\n  constructor(rpcError, message) {\n    super(message !== null && message !== void 0 ? message : rpc_error_messages_js_1.genericRpcErrorMessageTemplate.replace('*code*', rpcError.error.code.toString()));\n    this.code = rpcError.error.code;\n    this.id = rpcError.id;\n    this.jsonrpc = rpcError.jsonrpc;\n    this.jsonRpcError = rpcError.error;\n  }\n\n  toJSON() {\n    return Object.assign(Object.assign({}, super.toJSON()), {\n      error: this.jsonRpcError,\n      id: this.id,\n      jsonRpc: this.jsonrpc\n    });\n  }\n\n}\n\nexports.RpcError = RpcError;\n\nclass EIP1193ProviderRpcError extends web3_error_base_js_1.BaseWeb3Error {\n  constructor(code, data) {\n    var _a, _b, _c, _d;\n\n    if (!code) {\n      // this case should ideally not happen\n      super();\n    } else if ((_a = rpc_error_messages_js_1.RpcErrorMessages[code]) === null || _a === void 0 ? void 0 : _a.message) {\n      super(rpc_error_messages_js_1.RpcErrorMessages[code].message);\n    } else {\n      // Retrieve the status code object for the given code from the table, by searching through the appropriate range\n      const statusCodeRange = Object.keys(rpc_error_messages_js_1.RpcErrorMessages).find(statusCode => typeof statusCode === 'string' && code >= parseInt(statusCode.split('-')[0], 10) && code <= parseInt(statusCode.split('-')[1], 10));\n      super((_c = (_b = rpc_error_messages_js_1.RpcErrorMessages[statusCodeRange !== null && statusCodeRange !== void 0 ? statusCodeRange : '']) === null || _b === void 0 ? void 0 : _b.message) !== null && _c !== void 0 ? _c : rpc_error_messages_js_1.genericRpcErrorMessageTemplate.replace('*code*', (_d = code === null || code === void 0 ? void 0 : code.toString()) !== null && _d !== void 0 ? _d : '\"\"'));\n    }\n\n    this.code = code;\n    this.data = data;\n  }\n\n}\n\nexports.EIP1193ProviderRpcError = EIP1193ProviderRpcError;\n\nclass ParseError extends RpcError {\n  constructor(rpcError) {\n    super(rpcError, rpc_error_messages_js_1.RpcErrorMessages[error_codes_js_1.ERR_RPC_INVALID_JSON].message);\n    this.code = error_codes_js_1.ERR_RPC_INVALID_JSON;\n  }\n\n}\n\nexports.ParseError = ParseError;\n\nclass InvalidRequestError extends RpcError {\n  constructor(rpcError) {\n    super(rpcError, rpc_error_messages_js_1.RpcErrorMessages[error_codes_js_1.ERR_RPC_INVALID_REQUEST].message);\n    this.code = error_codes_js_1.ERR_RPC_INVALID_REQUEST;\n  }\n\n}\n\nexports.InvalidRequestError = InvalidRequestError;\n\nclass MethodNotFoundError extends RpcError {\n  constructor(rpcError) {\n    super(rpcError, rpc_error_messages_js_1.RpcErrorMessages[error_codes_js_1.ERR_RPC_INVALID_METHOD].message);\n    this.code = error_codes_js_1.ERR_RPC_INVALID_METHOD;\n  }\n\n}\n\nexports.MethodNotFoundError = MethodNotFoundError;\n\nclass InvalidParamsError extends RpcError {\n  constructor(rpcError) {\n    super(rpcError, rpc_error_messages_js_1.RpcErrorMessages[error_codes_js_1.ERR_RPC_INVALID_PARAMS].message);\n    this.code = error_codes_js_1.ERR_RPC_INVALID_PARAMS;\n  }\n\n}\n\nexports.InvalidParamsError = InvalidParamsError;\n\nclass InternalError extends RpcError {\n  constructor(rpcError) {\n    super(rpcError, rpc_error_messages_js_1.RpcErrorMessages[error_codes_js_1.ERR_RPC_INTERNAL_ERROR].message);\n    this.code = error_codes_js_1.ERR_RPC_INTERNAL_ERROR;\n  }\n\n}\n\nexports.InternalError = InternalError;\n\nclass InvalidInputError extends RpcError {\n  constructor(rpcError) {\n    super(rpcError, rpc_error_messages_js_1.RpcErrorMessages[error_codes_js_1.ERR_RPC_INVALID_INPUT].message);\n    this.code = error_codes_js_1.ERR_RPC_INVALID_INPUT;\n  }\n\n}\n\nexports.InvalidInputError = InvalidInputError;\n\nclass MethodNotSupported extends RpcError {\n  constructor(rpcError) {\n    super(rpcError, rpc_error_messages_js_1.RpcErrorMessages[error_codes_js_1.ERR_RPC_UNSUPPORTED_METHOD].message);\n    this.code = error_codes_js_1.ERR_RPC_UNSUPPORTED_METHOD;\n  }\n\n}\n\nexports.MethodNotSupported = MethodNotSupported;\n\nclass ResourceUnavailableError extends RpcError {\n  constructor(rpcError) {\n    super(rpcError, rpc_error_messages_js_1.RpcErrorMessages[error_codes_js_1.ERR_RPC_UNAVAILABLE_RESOURCE].message);\n    this.code = error_codes_js_1.ERR_RPC_UNAVAILABLE_RESOURCE;\n  }\n\n}\n\nexports.ResourceUnavailableError = ResourceUnavailableError;\n\nclass ResourcesNotFoundError extends RpcError {\n  constructor(rpcError) {\n    super(rpcError, rpc_error_messages_js_1.RpcErrorMessages[error_codes_js_1.ERR_RPC_MISSING_RESOURCE].message);\n    this.code = error_codes_js_1.ERR_RPC_MISSING_RESOURCE;\n  }\n\n}\n\nexports.ResourcesNotFoundError = ResourcesNotFoundError;\n\nclass VersionNotSupportedError extends RpcError {\n  constructor(rpcError) {\n    super(rpcError, rpc_error_messages_js_1.RpcErrorMessages[error_codes_js_1.ERR_RPC_NOT_SUPPORTED].message);\n    this.code = error_codes_js_1.ERR_RPC_NOT_SUPPORTED;\n  }\n\n}\n\nexports.VersionNotSupportedError = VersionNotSupportedError;\n\nclass TransactionRejectedError extends RpcError {\n  constructor(rpcError) {\n    super(rpcError, rpc_error_messages_js_1.RpcErrorMessages[error_codes_js_1.ERR_RPC_TRANSACTION_REJECTED].message);\n    this.code = error_codes_js_1.ERR_RPC_TRANSACTION_REJECTED;\n  }\n\n}\n\nexports.TransactionRejectedError = TransactionRejectedError;\n\nclass LimitExceededError extends RpcError {\n  constructor(rpcError) {\n    super(rpcError, rpc_error_messages_js_1.RpcErrorMessages[error_codes_js_1.ERR_RPC_LIMIT_EXCEEDED].message);\n    this.code = error_codes_js_1.ERR_RPC_LIMIT_EXCEEDED;\n  }\n\n}\n\nexports.LimitExceededError = LimitExceededError;\nexports.rpcErrorsMap = new Map();\nexports.rpcErrorsMap.set(error_codes_js_1.ERR_RPC_INVALID_JSON, {\n  error: ParseError\n});\nexports.rpcErrorsMap.set(error_codes_js_1.ERR_RPC_INVALID_REQUEST, {\n  error: InvalidRequestError\n});\nexports.rpcErrorsMap.set(error_codes_js_1.ERR_RPC_INVALID_METHOD, {\n  error: MethodNotFoundError\n});\nexports.rpcErrorsMap.set(error_codes_js_1.ERR_RPC_INVALID_PARAMS, {\n  error: InvalidParamsError\n});\nexports.rpcErrorsMap.set(error_codes_js_1.ERR_RPC_INTERNAL_ERROR, {\n  error: InternalError\n});\nexports.rpcErrorsMap.set(error_codes_js_1.ERR_RPC_INVALID_INPUT, {\n  error: InvalidInputError\n});\nexports.rpcErrorsMap.set(error_codes_js_1.ERR_RPC_UNSUPPORTED_METHOD, {\n  error: MethodNotSupported\n});\nexports.rpcErrorsMap.set(error_codes_js_1.ERR_RPC_UNAVAILABLE_RESOURCE, {\n  error: ResourceUnavailableError\n});\nexports.rpcErrorsMap.set(error_codes_js_1.ERR_RPC_TRANSACTION_REJECTED, {\n  error: TransactionRejectedError\n});\nexports.rpcErrorsMap.set(error_codes_js_1.ERR_RPC_MISSING_RESOURCE, {\n  error: ResourcesNotFoundError\n});\nexports.rpcErrorsMap.set(error_codes_js_1.ERR_RPC_NOT_SUPPORTED, {\n  error: VersionNotSupportedError\n});\nexports.rpcErrorsMap.set(error_codes_js_1.ERR_RPC_LIMIT_EXCEEDED, {\n  error: LimitExceededError\n});","map":{"version":3,"mappings":"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","names":["RpcError","web3_error_base_js_1","constructor","rpcError","message","rpc_error_messages_js_1","replace","error","code","toString","id","jsonrpc","jsonRpcError","toJSON","jsonRpc","exports","EIP1193ProviderRpcError","data","_a","statusCodeRange","Object","keys","find","statusCode","parseInt","split","_b","_c","_d","ParseError","error_codes_js_1","InvalidRequestError","MethodNotFoundError","InvalidParamsError","InternalError","InvalidInputError","MethodNotSupported","ResourceUnavailableError","ResourcesNotFoundError","VersionNotSupportedError","TransactionRejectedError","LimitExceededError","Map","set"],"sources":["/home/rupam/Desktop/Faucet-React/node_modules/web3-errors/src/errors/rpc_errors.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/* eslint-disable max-classes-per-file */\n\nimport { JsonRpcResponseWithError, JsonRpcId, JsonRpcError } from 'web3-types';\nimport { BaseWeb3Error } from '../web3_error_base.js';\nimport {\n\tERR_RPC_INTERNAL_ERROR,\n\tERR_RPC_INVALID_INPUT,\n\tERR_RPC_INVALID_JSON,\n\tERR_RPC_INVALID_METHOD,\n\tERR_RPC_INVALID_PARAMS,\n\tERR_RPC_INVALID_REQUEST,\n\tERR_RPC_LIMIT_EXCEEDED,\n\tERR_RPC_MISSING_RESOURCE,\n\tERR_RPC_NOT_SUPPORTED,\n\tERR_RPC_TRANSACTION_REJECTED,\n\tERR_RPC_UNAVAILABLE_RESOURCE,\n\tERR_RPC_UNSUPPORTED_METHOD,\n} from '../error_codes.js';\nimport { RpcErrorMessages, genericRpcErrorMessageTemplate } from './rpc_error_messages.js';\n\nexport class RpcError extends BaseWeb3Error {\n\tpublic code: number;\n\tpublic id: JsonRpcId;\n\tpublic jsonrpc: string;\n\tpublic jsonRpcError: JsonRpcError;\n\tpublic constructor(rpcError: JsonRpcResponseWithError, message?: string) {\n\t\tsuper(\n\t\t\tmessage ??\n\t\t\t\tgenericRpcErrorMessageTemplate.replace('*code*', rpcError.error.code.toString()),\n\t\t);\n\t\tthis.code = rpcError.error.code;\n\t\tthis.id = rpcError.id;\n\t\tthis.jsonrpc = rpcError.jsonrpc;\n\t\tthis.jsonRpcError = rpcError.error;\n\t}\n\n\tpublic toJSON() {\n\t\treturn { ...super.toJSON(), error: this.jsonRpcError, id: this.id, jsonRpc: this.jsonrpc };\n\t}\n}\n\nexport class EIP1193ProviderRpcError extends BaseWeb3Error {\n\tpublic code: number;\n\tpublic data?: unknown;\n\n\tpublic constructor(code: number, data?: unknown) {\n\t\tif (!code) {\n\t\t\t// this case should ideally not happen\n\t\t\tsuper();\n\t\t} else if (RpcErrorMessages[code]?.message) {\n\t\t\tsuper(RpcErrorMessages[code].message);\n\t\t} else {\n\t\t\t// Retrieve the status code object for the given code from the table, by searching through the appropriate range\n\t\t\tconst statusCodeRange = Object.keys(RpcErrorMessages).find(\n\t\t\t\tstatusCode =>\n\t\t\t\t\ttypeof statusCode === 'string' &&\n\t\t\t\t\tcode >= parseInt(statusCode.split('-')[0], 10) &&\n\t\t\t\t\tcode <= parseInt(statusCode.split('-')[1], 10),\n\t\t\t);\n\t\t\tsuper(\n\t\t\t\tRpcErrorMessages[statusCodeRange ?? '']?.message ??\n\t\t\t\t\tgenericRpcErrorMessageTemplate.replace('*code*', code?.toString() ?? '\"\"'),\n\t\t\t);\n\t\t}\n\t\tthis.code = code;\n\t\tthis.data = data;\n\t}\n}\n\nexport class ParseError extends RpcError {\n\tpublic code = ERR_RPC_INVALID_JSON;\n\tpublic constructor(rpcError: JsonRpcResponseWithError) {\n\t\tsuper(rpcError, RpcErrorMessages[ERR_RPC_INVALID_JSON].message);\n\t}\n}\n\nexport class InvalidRequestError extends RpcError {\n\tpublic code = ERR_RPC_INVALID_REQUEST;\n\tpublic constructor(rpcError: JsonRpcResponseWithError) {\n\t\tsuper(rpcError, RpcErrorMessages[ERR_RPC_INVALID_REQUEST].message);\n\t}\n}\n\nexport class MethodNotFoundError extends RpcError {\n\tpublic code = ERR_RPC_INVALID_METHOD;\n\tpublic constructor(rpcError: JsonRpcResponseWithError) {\n\t\tsuper(rpcError, RpcErrorMessages[ERR_RPC_INVALID_METHOD].message);\n\t}\n}\n\nexport class InvalidParamsError extends RpcError {\n\tpublic code = ERR_RPC_INVALID_PARAMS;\n\tpublic constructor(rpcError: JsonRpcResponseWithError) {\n\t\tsuper(rpcError, RpcErrorMessages[ERR_RPC_INVALID_PARAMS].message);\n\t}\n}\n\nexport class InternalError extends RpcError {\n\tpublic code = ERR_RPC_INTERNAL_ERROR;\n\tpublic constructor(rpcError: JsonRpcResponseWithError) {\n\t\tsuper(rpcError, RpcErrorMessages[ERR_RPC_INTERNAL_ERROR].message);\n\t}\n}\n\nexport class InvalidInputError extends RpcError {\n\tpublic code = ERR_RPC_INVALID_INPUT;\n\tpublic constructor(rpcError: JsonRpcResponseWithError) {\n\t\tsuper(rpcError, RpcErrorMessages[ERR_RPC_INVALID_INPUT].message);\n\t}\n}\n\nexport class MethodNotSupported extends RpcError {\n\tpublic code = ERR_RPC_UNSUPPORTED_METHOD;\n\tpublic constructor(rpcError: JsonRpcResponseWithError) {\n\t\tsuper(rpcError, RpcErrorMessages[ERR_RPC_UNSUPPORTED_METHOD].message);\n\t}\n}\n\nexport class ResourceUnavailableError extends RpcError {\n\tpublic code = ERR_RPC_UNAVAILABLE_RESOURCE;\n\tpublic constructor(rpcError: JsonRpcResponseWithError) {\n\t\tsuper(rpcError, RpcErrorMessages[ERR_RPC_UNAVAILABLE_RESOURCE].message);\n\t}\n}\n\nexport class ResourcesNotFoundError extends RpcError {\n\tpublic code = ERR_RPC_MISSING_RESOURCE;\n\tpublic constructor(rpcError: JsonRpcResponseWithError) {\n\t\tsuper(rpcError, RpcErrorMessages[ERR_RPC_MISSING_RESOURCE].message);\n\t}\n}\n\nexport class VersionNotSupportedError extends RpcError {\n\tpublic code = ERR_RPC_NOT_SUPPORTED;\n\tpublic constructor(rpcError: JsonRpcResponseWithError) {\n\t\tsuper(rpcError, RpcErrorMessages[ERR_RPC_NOT_SUPPORTED].message);\n\t}\n}\n\nexport class TransactionRejectedError extends RpcError {\n\tpublic code = ERR_RPC_TRANSACTION_REJECTED;\n\tpublic constructor(rpcError: JsonRpcResponseWithError) {\n\t\tsuper(rpcError, RpcErrorMessages[ERR_RPC_TRANSACTION_REJECTED].message);\n\t}\n}\n\nexport class LimitExceededError extends RpcError {\n\tpublic code = ERR_RPC_LIMIT_EXCEEDED;\n\tpublic constructor(rpcError: JsonRpcResponseWithError) {\n\t\tsuper(rpcError, RpcErrorMessages[ERR_RPC_LIMIT_EXCEEDED].message);\n\t}\n}\n\nexport const rpcErrorsMap = new Map<number, { error: typeof RpcError }>();\nrpcErrorsMap.set(ERR_RPC_INVALID_JSON, { error: ParseError });\nrpcErrorsMap.set(ERR_RPC_INVALID_REQUEST, {\n\terror: InvalidRequestError,\n});\nrpcErrorsMap.set(ERR_RPC_INVALID_METHOD, {\n\terror: MethodNotFoundError,\n});\nrpcErrorsMap.set(ERR_RPC_INVALID_PARAMS, { error: InvalidParamsError });\nrpcErrorsMap.set(ERR_RPC_INTERNAL_ERROR, { error: InternalError });\nrpcErrorsMap.set(ERR_RPC_INVALID_INPUT, { error: InvalidInputError });\nrpcErrorsMap.set(ERR_RPC_UNSUPPORTED_METHOD, {\n\terror: MethodNotSupported,\n});\nrpcErrorsMap.set(ERR_RPC_UNAVAILABLE_RESOURCE, {\n\terror: ResourceUnavailableError,\n});\nrpcErrorsMap.set(ERR_RPC_TRANSACTION_REJECTED, {\n\terror: TransactionRejectedError,\n});\nrpcErrorsMap.set(ERR_RPC_MISSING_RESOURCE, {\n\terror: ResourcesNotFoundError,\n});\nrpcErrorsMap.set(ERR_RPC_NOT_SUPPORTED, {\n\terror: VersionNotSupportedError,\n});\nrpcErrorsMap.set(ERR_RPC_LIMIT_EXCEEDED, { error: LimitExceededError });\n"]},"metadata":{},"sourceType":"script"}