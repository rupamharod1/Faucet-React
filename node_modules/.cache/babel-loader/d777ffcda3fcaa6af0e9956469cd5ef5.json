{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ZodError = exports.quotelessJson = exports.ZodIssueCode = void 0;\n\nconst util_1 = require(\"./helpers/util\");\n\nexports.ZodIssueCode = util_1.util.arrayToEnum([\"invalid_type\", \"invalid_literal\", \"custom\", \"invalid_union\", \"invalid_union_discriminator\", \"invalid_enum_value\", \"unrecognized_keys\", \"invalid_arguments\", \"invalid_return_type\", \"invalid_date\", \"invalid_string\", \"too_small\", \"too_big\", \"invalid_intersection_types\", \"not_multiple_of\", \"not_finite\"]);\n\nconst quotelessJson = obj => {\n  const json = JSON.stringify(obj, null, 2);\n  return json.replace(/\"([^\"]+)\":/g, \"$1:\");\n};\n\nexports.quotelessJson = quotelessJson;\n\nclass ZodError extends Error {\n  constructor(issues) {\n    var _this;\n\n    super();\n    _this = this;\n    this.issues = [];\n\n    this.addIssue = sub => {\n      this.issues = [...this.issues, sub];\n    };\n\n    this.addIssues = function () {\n      let subs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      _this.issues = [..._this.issues, ...subs];\n    };\n\n    const actualProto = new.target.prototype;\n\n    if (Object.setPrototypeOf) {\n      // eslint-disable-next-line ban/ban\n      Object.setPrototypeOf(this, actualProto);\n    } else {\n      this.__proto__ = actualProto;\n    }\n\n    this.name = \"ZodError\";\n    this.issues = issues;\n  }\n\n  get errors() {\n    return this.issues;\n  }\n\n  format(_mapper) {\n    const mapper = _mapper || function (issue) {\n      return issue.message;\n    };\n\n    const fieldErrors = {\n      _errors: []\n    };\n\n    const processError = error => {\n      for (const issue of error.issues) {\n        if (issue.code === \"invalid_union\") {\n          issue.unionErrors.map(processError);\n        } else if (issue.code === \"invalid_return_type\") {\n          processError(issue.returnTypeError);\n        } else if (issue.code === \"invalid_arguments\") {\n          processError(issue.argumentsError);\n        } else if (issue.path.length === 0) {\n          fieldErrors._errors.push(mapper(issue));\n        } else {\n          let curr = fieldErrors;\n          let i = 0;\n\n          while (i < issue.path.length) {\n            const el = issue.path[i];\n            const terminal = i === issue.path.length - 1;\n\n            if (!terminal) {\n              curr[el] = curr[el] || {\n                _errors: []\n              }; // if (typeof el === \"string\") {\n              //   curr[el] = curr[el] || { _errors: [] };\n              // } else if (typeof el === \"number\") {\n              //   const errorArray: any = [];\n              //   errorArray._errors = [];\n              //   curr[el] = curr[el] || errorArray;\n              // }\n            } else {\n              curr[el] = curr[el] || {\n                _errors: []\n              };\n\n              curr[el]._errors.push(mapper(issue));\n            }\n\n            curr = curr[el];\n            i++;\n          }\n        }\n      }\n    };\n\n    processError(this);\n    return fieldErrors;\n  }\n\n  toString() {\n    return this.message;\n  }\n\n  get message() {\n    return JSON.stringify(this.issues, util_1.util.jsonStringifyReplacer, 2);\n  }\n\n  get isEmpty() {\n    return this.issues.length === 0;\n  }\n\n  flatten() {\n    let mapper = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : issue => issue.message;\n    const fieldErrors = {};\n    const formErrors = [];\n\n    for (const sub of this.issues) {\n      if (sub.path.length > 0) {\n        fieldErrors[sub.path[0]] = fieldErrors[sub.path[0]] || [];\n        fieldErrors[sub.path[0]].push(mapper(sub));\n      } else {\n        formErrors.push(mapper(sub));\n      }\n    }\n\n    return {\n      formErrors,\n      fieldErrors\n    };\n  }\n\n  get formErrors() {\n    return this.flatten();\n  }\n\n}\n\nexports.ZodError = ZodError;\n\nZodError.create = issues => {\n  const error = new ZodError(issues);\n  return error;\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","ZodError","quotelessJson","ZodIssueCode","util_1","require","util","arrayToEnum","obj","json","JSON","stringify","replace","Error","constructor","issues","addIssue","sub","addIssues","subs","actualProto","new","target","prototype","setPrototypeOf","__proto__","name","errors","format","_mapper","mapper","issue","message","fieldErrors","_errors","processError","error","code","unionErrors","map","returnTypeError","argumentsError","path","length","push","curr","i","el","terminal","toString","jsonStringifyReplacer","isEmpty","flatten","formErrors","create"],"sources":["/home/rupam/Desktop/Faucet-React/node_modules/zod/lib/ZodError.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ZodError = exports.quotelessJson = exports.ZodIssueCode = void 0;\nconst util_1 = require(\"./helpers/util\");\nexports.ZodIssueCode = util_1.util.arrayToEnum([\n    \"invalid_type\",\n    \"invalid_literal\",\n    \"custom\",\n    \"invalid_union\",\n    \"invalid_union_discriminator\",\n    \"invalid_enum_value\",\n    \"unrecognized_keys\",\n    \"invalid_arguments\",\n    \"invalid_return_type\",\n    \"invalid_date\",\n    \"invalid_string\",\n    \"too_small\",\n    \"too_big\",\n    \"invalid_intersection_types\",\n    \"not_multiple_of\",\n    \"not_finite\",\n]);\nconst quotelessJson = (obj) => {\n    const json = JSON.stringify(obj, null, 2);\n    return json.replace(/\"([^\"]+)\":/g, \"$1:\");\n};\nexports.quotelessJson = quotelessJson;\nclass ZodError extends Error {\n    constructor(issues) {\n        super();\n        this.issues = [];\n        this.addIssue = (sub) => {\n            this.issues = [...this.issues, sub];\n        };\n        this.addIssues = (subs = []) => {\n            this.issues = [...this.issues, ...subs];\n        };\n        const actualProto = new.target.prototype;\n        if (Object.setPrototypeOf) {\n            // eslint-disable-next-line ban/ban\n            Object.setPrototypeOf(this, actualProto);\n        }\n        else {\n            this.__proto__ = actualProto;\n        }\n        this.name = \"ZodError\";\n        this.issues = issues;\n    }\n    get errors() {\n        return this.issues;\n    }\n    format(_mapper) {\n        const mapper = _mapper ||\n            function (issue) {\n                return issue.message;\n            };\n        const fieldErrors = { _errors: [] };\n        const processError = (error) => {\n            for (const issue of error.issues) {\n                if (issue.code === \"invalid_union\") {\n                    issue.unionErrors.map(processError);\n                }\n                else if (issue.code === \"invalid_return_type\") {\n                    processError(issue.returnTypeError);\n                }\n                else if (issue.code === \"invalid_arguments\") {\n                    processError(issue.argumentsError);\n                }\n                else if (issue.path.length === 0) {\n                    fieldErrors._errors.push(mapper(issue));\n                }\n                else {\n                    let curr = fieldErrors;\n                    let i = 0;\n                    while (i < issue.path.length) {\n                        const el = issue.path[i];\n                        const terminal = i === issue.path.length - 1;\n                        if (!terminal) {\n                            curr[el] = curr[el] || { _errors: [] };\n                            // if (typeof el === \"string\") {\n                            //   curr[el] = curr[el] || { _errors: [] };\n                            // } else if (typeof el === \"number\") {\n                            //   const errorArray: any = [];\n                            //   errorArray._errors = [];\n                            //   curr[el] = curr[el] || errorArray;\n                            // }\n                        }\n                        else {\n                            curr[el] = curr[el] || { _errors: [] };\n                            curr[el]._errors.push(mapper(issue));\n                        }\n                        curr = curr[el];\n                        i++;\n                    }\n                }\n            }\n        };\n        processError(this);\n        return fieldErrors;\n    }\n    toString() {\n        return this.message;\n    }\n    get message() {\n        return JSON.stringify(this.issues, util_1.util.jsonStringifyReplacer, 2);\n    }\n    get isEmpty() {\n        return this.issues.length === 0;\n    }\n    flatten(mapper = (issue) => issue.message) {\n        const fieldErrors = {};\n        const formErrors = [];\n        for (const sub of this.issues) {\n            if (sub.path.length > 0) {\n                fieldErrors[sub.path[0]] = fieldErrors[sub.path[0]] || [];\n                fieldErrors[sub.path[0]].push(mapper(sub));\n            }\n            else {\n                formErrors.push(mapper(sub));\n            }\n        }\n        return { formErrors, fieldErrors };\n    }\n    get formErrors() {\n        return this.flatten();\n    }\n}\nexports.ZodError = ZodError;\nZodError.create = (issues) => {\n    const error = new ZodError(issues);\n    return error;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}