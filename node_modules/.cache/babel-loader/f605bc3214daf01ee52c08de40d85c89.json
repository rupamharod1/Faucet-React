{"ast":null,"code":"var _jsxFileName = \"/home/rupam/Desktop/Faucet-React/src/New.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst New = () => {\n  _s();\n\n  const [fromAddress, setFromAddress] = useState(\"\");\n  const [toAddress, setToAddress] = useState(\"\");\n  const [amount, setAmount] = useState(\"0.1\");\n  const [privateKey, setPrivateKey] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [web3, setWeb3] = useState(null);\n  useEffect(() => {\n    // Initialize the Web3 instance with your network URL\n    const web3Instance = new Web3(\"http://localhost:8545\");\n    setWeb3(web3Instance);\n  }, []);\n\n  const handleTransfer = async () => {\n    try {\n      // Convert the private key to an account\n      const account = web3.eth.accounts.privateKeyToAccount(privateKey); // Unlock the sender's account (for private networks, this might not be required)\n\n      await web3.eth.personal.unlockAccount(account.address, \"\", 600); // Specify the amount to transfer (in wei)\n\n      const amountInWei = web3.utils.toWei(amount, \"ether\"); // Create and sign the transaction\n\n      const transactionObject = {\n        from: account.address,\n        to: toAddress,\n        value: amountInWei,\n        gas: 21000,\n        // Adjust gas limit as needed\n        gasPrice: \"1000000000\",\n        // 1 Gwei (in wei)\n        nonce: await web3.eth.getTransactionCount(account.address)\n      };\n      const signedTx = await web3.eth.accounts.signTransaction(transactionObject, privateKey); // Send the signed transaction\n\n      const txReceipt = await web3.eth.sendSignedTransaction(signedTx.rawTransaction);\n      setStatus(`Transaction Hash: ${txReceipt.transactionHash}`);\n    } catch (error) {\n      setStatus(`Transaction Error: ${error.message}`);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Ethereum Token Transfer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Sender Address:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: fromAddress,\n        onChange: e => setFromAddress(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Recipient Address:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: toAddress,\n        onChange: e => setToAddress(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Amount (ETH):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: amount,\n        onChange: e => setAmount(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Private Key:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: privateKey,\n        onChange: e => setPrivateKey(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleTransfer,\n      children: \"Transfer Tokens\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Status: \", status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(New, \"7rWQFL0y/lrPTXvzwFYqqElmve8=\");\n\n_c = New;\nexport default New;\n\nvar _c;\n\n$RefreshReg$(_c, \"New\");","map":{"version":3,"names":["React","useState","useEffect","Web3","New","fromAddress","setFromAddress","toAddress","setToAddress","amount","setAmount","privateKey","setPrivateKey","status","setStatus","web3","setWeb3","web3Instance","handleTransfer","account","eth","accounts","privateKeyToAccount","personal","unlockAccount","address","amountInWei","utils","toWei","transactionObject","from","to","value","gas","gasPrice","nonce","getTransactionCount","signedTx","signTransaction","txReceipt","sendSignedTransaction","rawTransaction","transactionHash","error","message","e","target"],"sources":["/home/rupam/Desktop/Faucet-React/src/New.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Web3 from \"web3\";\n\nconst New = () => {\n  const [fromAddress, setFromAddress] = useState(\"\");\n  const [toAddress, setToAddress] = useState(\"\");\n  const [amount, setAmount] = useState(\"0.1\");\n  const [privateKey, setPrivateKey] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [web3, setWeb3] = useState(null);\n\n  useEffect(() => {\n    // Initialize the Web3 instance with your network URL\n    const web3Instance = new Web3(\"http://localhost:8545\");\n    setWeb3(web3Instance);\n  }, []);\n\n  const handleTransfer = async () => {\n    try {\n      // Convert the private key to an account\n      const account = web3.eth.accounts.privateKeyToAccount(privateKey);\n\n      // Unlock the sender's account (for private networks, this might not be required)\n      await web3.eth.personal.unlockAccount(account.address, \"\", 600);\n\n      // Specify the amount to transfer (in wei)\n      const amountInWei = web3.utils.toWei(amount, \"ether\");\n\n      // Create and sign the transaction\n      const transactionObject = {\n        from: account.address,\n        to: toAddress,\n        value: amountInWei,\n        gas: 21000, // Adjust gas limit as needed\n        gasPrice: \"1000000000\", // 1 Gwei (in wei)\n        nonce: await web3.eth.getTransactionCount(account.address),\n      };\n\n      const signedTx = await web3.eth.accounts.signTransaction(\n        transactionObject,\n        privateKey\n      );\n\n      // Send the signed transaction\n      const txReceipt = await web3.eth.sendSignedTransaction(signedTx.rawTransaction);\n      \n      setStatus(`Transaction Hash: ${txReceipt.transactionHash}`);\n    } catch (error) {\n      setStatus(`Transaction Error: ${error.message}`);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Ethereum Token Transfer</h1>\n      <div>\n        <label>Sender Address:</label>\n        <input type=\"text\" value={fromAddress} onChange={(e) => setFromAddress(e.target.value)} />\n      </div>\n      <div>\n        <label>Recipient Address:</label>\n        <input type=\"text\" value={toAddress} onChange={(e) => setToAddress(e.target.value)} />\n      </div>\n      <div>\n        <label>Amount (ETH):</label>\n        <input type=\"text\" value={amount} onChange={(e) => setAmount(e.target.value)} />\n      </div>\n      <div>\n        <label>Private Key:</label>\n        <input type=\"text\" value={privateKey} onChange={(e) => setPrivateKey(e.target.value)} />\n      </div>\n      <button onClick={handleTransfer}>Transfer Tokens</button>\n      <div>\n        <p>Status: {status}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default New;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,MAAjB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EAChB,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,EAAD,CAA9C;EACA,MAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;EACA,MAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,KAAD,CAApC;EACA,MAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,EAAD,CAA5C;EACA,MAAM,CAACY,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,EAAD,CAApC;EACA,MAAM,CAACc,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,IAAD,CAAhC;EAEAC,SAAS,CAAC,MAAM;IACd;IACA,MAAMe,YAAY,GAAG,IAAId,IAAJ,CAAS,uBAAT,CAArB;IACAa,OAAO,CAACC,YAAD,CAAP;EACD,CAJQ,EAIN,EAJM,CAAT;;EAMA,MAAMC,cAAc,GAAG,YAAY;IACjC,IAAI;MACF;MACA,MAAMC,OAAO,GAAGJ,IAAI,CAACK,GAAL,CAASC,QAAT,CAAkBC,mBAAlB,CAAsCX,UAAtC,CAAhB,CAFE,CAIF;;MACA,MAAMI,IAAI,CAACK,GAAL,CAASG,QAAT,CAAkBC,aAAlB,CAAgCL,OAAO,CAACM,OAAxC,EAAiD,EAAjD,EAAqD,GAArD,CAAN,CALE,CAOF;;MACA,MAAMC,WAAW,GAAGX,IAAI,CAACY,KAAL,CAAWC,KAAX,CAAiBnB,MAAjB,EAAyB,OAAzB,CAApB,CARE,CAUF;;MACA,MAAMoB,iBAAiB,GAAG;QACxBC,IAAI,EAAEX,OAAO,CAACM,OADU;QAExBM,EAAE,EAAExB,SAFoB;QAGxByB,KAAK,EAAEN,WAHiB;QAIxBO,GAAG,EAAE,KAJmB;QAIZ;QACZC,QAAQ,EAAE,YALc;QAKA;QACxBC,KAAK,EAAE,MAAMpB,IAAI,CAACK,GAAL,CAASgB,mBAAT,CAA6BjB,OAAO,CAACM,OAArC;MANW,CAA1B;MASA,MAAMY,QAAQ,GAAG,MAAMtB,IAAI,CAACK,GAAL,CAASC,QAAT,CAAkBiB,eAAlB,CACrBT,iBADqB,EAErBlB,UAFqB,CAAvB,CApBE,CAyBF;;MACA,MAAM4B,SAAS,GAAG,MAAMxB,IAAI,CAACK,GAAL,CAASoB,qBAAT,CAA+BH,QAAQ,CAACI,cAAxC,CAAxB;MAEA3B,SAAS,CAAE,qBAAoByB,SAAS,CAACG,eAAgB,EAAhD,CAAT;IACD,CA7BD,CA6BE,OAAOC,KAAP,EAAc;MACd7B,SAAS,CAAE,sBAAqB6B,KAAK,CAACC,OAAQ,EAArC,CAAT;IACD;EACF,CAjCD;;EAmCA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAO,IAAI,EAAC,MAAZ;QAAmB,KAAK,EAAEvC,WAA1B;QAAuC,QAAQ,EAAGwC,CAAD,IAAOvC,cAAc,CAACuC,CAAC,CAACC,MAAF,CAASd,KAAV;MAAtE;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAME;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAO,IAAI,EAAC,MAAZ;QAAmB,KAAK,EAAEzB,SAA1B;QAAqC,QAAQ,EAAGsC,CAAD,IAAOrC,YAAY,CAACqC,CAAC,CAACC,MAAF,CAASd,KAAV;MAAlE;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QANF,eAUE;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAO,IAAI,EAAC,MAAZ;QAAmB,KAAK,EAAEvB,MAA1B;QAAkC,QAAQ,EAAGoC,CAAD,IAAOnC,SAAS,CAACmC,CAAC,CAACC,MAAF,CAASd,KAAV;MAA5D;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QAVF,eAcE;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAO,IAAI,EAAC,MAAZ;QAAmB,KAAK,EAAErB,UAA1B;QAAsC,QAAQ,EAAGkC,CAAD,IAAOjC,aAAa,CAACiC,CAAC,CAACC,MAAF,CAASd,KAAV;MAApE;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QAdF,eAkBE;MAAQ,OAAO,EAAEd,cAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAlBF,eAmBE;MAAA,uBACE;QAAA,uBAAYL,MAAZ;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAnBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAyBD,CA1ED;;GAAMT,G;;KAAAA,G;AA4EN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}