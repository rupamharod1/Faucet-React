{"ast":null,"code":"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/* eslint-disable max-classes-per-file */\nimport { ERR_PROVIDER, ERR_INVALID_PROVIDER, ERR_INVALID_CLIENT, ERR_SUBSCRIPTION, ERR_WS_PROVIDER } from '../error_codes.js';\nimport { BaseWeb3Error } from '../web3_error_base.js';\nexport class ProviderError extends BaseWeb3Error {\n  constructor() {\n    super(...arguments);\n    this.code = ERR_PROVIDER;\n  }\n\n}\nexport class InvalidProviderError extends BaseWeb3Error {\n  constructor(clientUrl) {\n    super(`Provider with url \"${clientUrl}\" is not set or invalid`);\n    this.clientUrl = clientUrl;\n    this.code = ERR_INVALID_PROVIDER;\n  }\n\n}\nexport class InvalidClientError extends BaseWeb3Error {\n  constructor(clientUrl) {\n    super(`Client URL \"${clientUrl}\" is invalid.`);\n    this.code = ERR_INVALID_CLIENT;\n  }\n\n}\nexport class SubscriptionError extends BaseWeb3Error {\n  constructor() {\n    super(...arguments);\n    this.code = ERR_SUBSCRIPTION;\n  }\n\n}\nexport class Web3WSProviderError extends BaseWeb3Error {\n  constructor() {\n    super(...arguments);\n    this.code = ERR_WS_PROVIDER; // this had duplicate code with generic provider\n  }\n\n}","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;AAiBA;AAEA,SACCA,YADD,EAECC,oBAFD,EAGCC,kBAHD,EAICC,gBAJD,EAKCC,eALD,QAMO,mBANP;AAOA,SAASC,aAAT,QAA8B,uBAA9B;AAEA,OAAM,MAAOC,aAAP,SAA6BD,aAA7B,CAA0C;EAAhDE;;IACQ,YAAOP,YAAP;EACP;;AAF+C;AAIhD,OAAM,MAAOQ,oBAAP,SAAoCH,aAApC,CAAiD;EAGtDE,YAA0BE,SAA1B,EAA2C;IAC1C,MAAM,sBAAsBA,SAAS,yBAArC;IADyB;IAFnB,YAAOR,oBAAP;EAIN;;AALqD;AAQvD,OAAM,MAAOS,kBAAP,SAAkCL,aAAlC,CAA+C;EAGpDE,YAAmBE,SAAnB,EAAoC;IACnC,MAAM,eAAeA,SAAS,eAA9B;IAHM,YAAOP,kBAAP;EAIN;;AALmD;AAQrD,OAAM,MAAOS,iBAAP,SAAiCN,aAAjC,CAA8C;EAApDE;;IACQ,YAAOJ,gBAAP;EACP;;AAFmD;AAIpD,OAAM,MAAOS,mBAAP,SAAmCP,aAAnC,CAAgD;EAAtDE;;IACQ,YAAOH,eAAP,CADR,CACgC;EAC/B;;AAFqD","names":["ERR_PROVIDER","ERR_INVALID_PROVIDER","ERR_INVALID_CLIENT","ERR_SUBSCRIPTION","ERR_WS_PROVIDER","BaseWeb3Error","ProviderError","constructor","InvalidProviderError","clientUrl","InvalidClientError","SubscriptionError","Web3WSProviderError"],"sources":["/home/rupam/Desktop/Faucet-React/node_modules/web3-errors/src/errors/provider_errors.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/* eslint-disable max-classes-per-file */\n\nimport {\n\tERR_PROVIDER,\n\tERR_INVALID_PROVIDER,\n\tERR_INVALID_CLIENT,\n\tERR_SUBSCRIPTION,\n\tERR_WS_PROVIDER,\n} from '../error_codes.js';\nimport { BaseWeb3Error } from '../web3_error_base.js';\n\nexport class ProviderError extends BaseWeb3Error {\n\tpublic code = ERR_PROVIDER;\n}\n\nexport class InvalidProviderError extends BaseWeb3Error {\n\tpublic code = ERR_INVALID_PROVIDER;\n\n\tpublic constructor(public clientUrl: string) {\n\t\tsuper(`Provider with url \"${clientUrl}\" is not set or invalid`);\n\t}\n}\n\nexport class InvalidClientError extends BaseWeb3Error {\n\tpublic code = ERR_INVALID_CLIENT;\n\n\tpublic constructor(clientUrl: string) {\n\t\tsuper(`Client URL \"${clientUrl}\" is invalid.`);\n\t}\n}\n\nexport class SubscriptionError extends BaseWeb3Error {\n\tpublic code = ERR_SUBSCRIPTION;\n}\n\nexport class Web3WSProviderError extends BaseWeb3Error {\n\tpublic code = ERR_WS_PROVIDER; // this had duplicate code with generic provider\n}\n"]},"metadata":{},"sourceType":"module"}