{"ast":null,"code":"\"use strict\";\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isSupportSubscriptions = exports.isSupportedProvider = exports.isLegacySendAsyncProvider = exports.isLegacySendProvider = exports.isEIP1193Provider = exports.isLegacyRequestProvider = exports.isWeb3Provider = void 0;\n\nconst web3_types_1 = require(\"web3-types\");\n\nconst isWeb3Provider = provider => web3_types_1.Web3BaseProvider.isWeb3Provider(provider);\n\nexports.isWeb3Provider = isWeb3Provider;\n\nconst isLegacyRequestProvider = provider => typeof provider !== 'string' && 'request' in provider && provider.request.constructor.name === 'Function';\n\nexports.isLegacyRequestProvider = isLegacyRequestProvider;\n\nconst isEIP1193Provider = provider => typeof provider !== 'string' && 'request' in provider && provider.request.constructor.name === 'AsyncFunction';\n\nexports.isEIP1193Provider = isEIP1193Provider;\n\nconst isLegacySendProvider = provider => typeof provider !== 'string' && 'send' in provider;\n\nexports.isLegacySendProvider = isLegacySendProvider;\n\nconst isLegacySendAsyncProvider = provider => typeof provider !== 'string' && 'sendAsync' in provider;\n\nexports.isLegacySendAsyncProvider = isLegacySendAsyncProvider;\n\nconst isSupportedProvider = provider => provider && ((0, exports.isWeb3Provider)(provider) || (0, exports.isEIP1193Provider)(provider) || (0, exports.isLegacyRequestProvider)(provider) || (0, exports.isLegacySendAsyncProvider)(provider) || (0, exports.isLegacySendProvider)(provider));\n\nexports.isSupportedProvider = isSupportedProvider;\n\nconst isSupportSubscriptions = provider => {\n  if (provider && 'supportsSubscriptions' in provider) {\n    return provider.supportsSubscriptions();\n  }\n\n  if (provider && typeof provider !== 'string' && 'on' in provider) {\n    return true;\n  }\n\n  return false;\n};\n\nexports.isSupportSubscriptions = isSupportSubscriptions;","map":{"version":3,"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;AAiBA;;AAUO,MAAMA,cAAc,GAC1BC,QAD6B,IAEUC,8BAAiBF,cAAjB,CAAgCC,QAAhC,CAFjC;;AAAME,yBAAcH,cAAd;;AAIN,MAAMI,uBAAuB,GACnCH,QADsC,IAGtC,OAAOA,QAAP,KAAoB,QAApB,IACA,aAAaA,QADb,IAEAA,QAAQ,CAACI,OAAT,CAAiBC,WAAjB,CAA6BC,IAA7B,KAAsC,UALhC;;AAAMJ,kCAAuBC,uBAAvB;;AAON,MAAMI,iBAAiB,GAC7BP,QADgC,IAGhC,OAAOA,QAAP,KAAoB,QAApB,IACA,aAAaA,QADb,IAEAA,QAAQ,CAACI,OAAT,CAAiBC,WAAjB,CAA6BC,IAA7B,KAAsC,eALhC;;AAAMJ,4BAAiBK,iBAAjB;;AAON,MAAMC,oBAAoB,GAChCR,QADmC,IAEC,OAAOA,QAAP,KAAoB,QAApB,IAAgC,UAAUA,QAFxE;;AAAME,+BAAoBM,oBAApB;;AAIN,MAAMC,yBAAyB,GACrCT,QADwC,IAEC,OAAOA,QAAP,KAAoB,QAApB,IAAgC,eAAeA,QAFlF;;AAAME,oCAAyBO,yBAAzB;;AAIN,MAAMC,mBAAmB,GAC/BV,QADkC,IAGlCA,QAAQ,KACP,4BAAeA,QAAf,KACA,+BAAkBA,QAAlB,CADA,IAEA,qCAAwBA,QAAxB,CAFA,IAGA,uCAA0BA,QAA1B,CAHA,IAIA,kCAAqBA,QAArB,CALO,CAHF;;AAAME,8BAAmBQ,mBAAnB;;AAUN,MAAMC,sBAAsB,GAClCX,QADqC,IAEzB;EACZ,IAAIA,QAAQ,IAAI,2BAA2BA,QAA3C,EAAqD;IACpD,OAAOA,QAAQ,CAACY,qBAAT,EAAP;EACA;;EAED,IAAIZ,QAAQ,IAAI,OAAOA,QAAP,KAAoB,QAAhC,IAA4C,QAAQA,QAAxD,EAAkE;IACjE,OAAO,IAAP;EACA;;EAED,OAAO,KAAP;AACA,CAZM;;AAAME,iCAAsBS,sBAAtB","names":["isWeb3Provider","provider","web3_types_1","exports","isLegacyRequestProvider","request","constructor","name","isEIP1193Provider","isLegacySendProvider","isLegacySendAsyncProvider","isSupportedProvider","isSupportSubscriptions","supportsSubscriptions"],"sources":["/home/rupam/Desktop/Faucet-React/node_modules/web3-core/src/utils.ts"],"sourcesContent":["ï»¿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport {\n\tEIP1193Provider,\n\tLegacyRequestProvider,\n\tLegacySendAsyncProvider,\n\tLegacySendProvider,\n\tSupportedProviders,\n\tWeb3APISpec,\n\tWeb3BaseProvider,\n} from 'web3-types';\n\nexport const isWeb3Provider = <API extends Web3APISpec>(\n\tprovider: SupportedProviders<API>,\n): provider is Web3BaseProvider<API> => Web3BaseProvider.isWeb3Provider(provider);\n\nexport const isLegacyRequestProvider = <API extends Web3APISpec>(\n\tprovider: SupportedProviders<API>,\n): provider is LegacyRequestProvider =>\n\ttypeof provider !== 'string' &&\n\t'request' in provider &&\n\tprovider.request.constructor.name === 'Function';\n\nexport const isEIP1193Provider = <API extends Web3APISpec>(\n\tprovider: SupportedProviders<API>,\n): provider is EIP1193Provider<API> =>\n\ttypeof provider !== 'string' &&\n\t'request' in provider &&\n\tprovider.request.constructor.name === 'AsyncFunction';\n\nexport const isLegacySendProvider = <API extends Web3APISpec>(\n\tprovider: SupportedProviders<API>,\n): provider is LegacySendProvider => typeof provider !== 'string' && 'send' in provider;\n\nexport const isLegacySendAsyncProvider = <API extends Web3APISpec>(\n\tprovider: SupportedProviders<API>,\n): provider is LegacySendAsyncProvider => typeof provider !== 'string' && 'sendAsync' in provider;\n\nexport const isSupportedProvider = <API extends Web3APISpec>(\n\tprovider: SupportedProviders<API>,\n): provider is SupportedProviders<API> =>\n\tprovider &&\n\t(isWeb3Provider(provider) ||\n\t\tisEIP1193Provider(provider) ||\n\t\tisLegacyRequestProvider(provider) ||\n\t\tisLegacySendAsyncProvider(provider) ||\n\t\tisLegacySendProvider(provider));\n\nexport const isSupportSubscriptions = <API extends Web3APISpec>(\n\tprovider: SupportedProviders<API>,\n): boolean => {\n\tif (provider && 'supportsSubscriptions' in provider) {\n\t\treturn provider.supportsSubscriptions();\n\t}\n\n\tif (provider && typeof provider !== 'string' && 'on' in provider) {\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n"]},"metadata":{},"sourceType":"script"}