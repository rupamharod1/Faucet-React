{"ast":null,"code":"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { ERR_CONTRACT, ERR_CONTRACT_ABI_MISSING, ERR_CONTRACT_EXECUTION_REVERTED, ERR_CONTRACT_EVENT_NOT_EXISTS, ERR_CONTRACT_INSTANTIATION, ERR_CONTRACT_MISSING_ADDRESS, ERR_CONTRACT_MISSING_DEPLOY_DATA, ERR_CONTRACT_MISSING_FROM_ADDRESS, ERR_CONTRACT_REQUIRED_CALLBACK, ERR_CONTRACT_RESERVED_EVENT, ERR_CONTRACT_RESOLVER_MISSING, ERR_CONTRACT_TX_DATA_AND_INPUT } from '../error_codes.js';\nimport { BaseWeb3Error, InvalidValueError } from '../web3_error_base.js';\nexport class Web3ContractError extends BaseWeb3Error {\n  constructor(message, receipt) {\n    super(message);\n    this.code = ERR_CONTRACT;\n    this.receipt = receipt;\n  }\n\n}\nexport class ResolverMethodMissingError extends BaseWeb3Error {\n  constructor(address, name) {\n    super(`The resolver at ${address} does not implement requested method: \"${name}\".`);\n    this.address = address;\n    this.name = name;\n    this.code = ERR_CONTRACT_RESOLVER_MISSING;\n  }\n\n  toJSON() {\n    return Object.assign(Object.assign({}, super.toJSON()), {\n      address: this.address,\n      name: this.name\n    });\n  }\n\n}\nexport class ContractMissingABIError extends BaseWeb3Error {\n  constructor() {\n    super('You must provide the json interface of the contract when instantiating a contract object.');\n    this.code = ERR_CONTRACT_ABI_MISSING;\n  }\n\n}\nexport class ContractOnceRequiresCallbackError extends BaseWeb3Error {\n  constructor() {\n    super('Once requires a callback as the second parameter.');\n    this.code = ERR_CONTRACT_REQUIRED_CALLBACK;\n  }\n\n}\nexport class ContractEventDoesNotExistError extends BaseWeb3Error {\n  constructor(eventName) {\n    super(`Event \"${eventName}\" doesn't exist in this contract.`);\n    this.eventName = eventName;\n    this.code = ERR_CONTRACT_EVENT_NOT_EXISTS;\n  }\n\n  toJSON() {\n    return Object.assign(Object.assign({}, super.toJSON()), {\n      eventName: this.eventName\n    });\n  }\n\n}\nexport class ContractReservedEventError extends BaseWeb3Error {\n  constructor(type) {\n    super(`Event \"${type}\" doesn't exist in this contract.`);\n    this.type = type;\n    this.code = ERR_CONTRACT_RESERVED_EVENT;\n  }\n\n  toJSON() {\n    return Object.assign(Object.assign({}, super.toJSON()), {\n      type: this.type\n    });\n  }\n\n}\nexport class ContractMissingDeployDataError extends BaseWeb3Error {\n  constructor() {\n    super(`No \"data\" specified in neither the given options, nor the default options.`);\n    this.code = ERR_CONTRACT_MISSING_DEPLOY_DATA;\n  }\n\n}\nexport class ContractNoAddressDefinedError extends BaseWeb3Error {\n  constructor() {\n    super(\"This contract object doesn't have address set yet, please set an address first.\");\n    this.code = ERR_CONTRACT_MISSING_ADDRESS;\n  }\n\n}\nexport class ContractNoFromAddressDefinedError extends BaseWeb3Error {\n  constructor() {\n    super('No \"from\" address specified in neither the given options, nor the default options.');\n    this.code = ERR_CONTRACT_MISSING_FROM_ADDRESS;\n  }\n\n}\nexport class ContractInstantiationError extends BaseWeb3Error {\n  constructor() {\n    super(...arguments);\n    this.code = ERR_CONTRACT_INSTANTIATION;\n  }\n\n}\n/**\n * This class is expected to be set as an `innerError` inside ContractExecutionError\n * The properties would be typically decoded from the `data` if it was encoded according to EIP-838\n */\n\nexport class Eip838ExecutionError extends Web3ContractError {\n  constructor(error) {\n    super(error.message || 'Error');\n    this.name = 'name' in error && error.name || this.constructor.name;\n    this.stack = 'stack' in error && error.stack || undefined;\n    this.code = error.code; // get embedded error details got from some providers like MetaMask\n    // and set this.data from the inner error data for easier read.\n    // note: the data is a hex string inside either:\n    //\t error.data, error.data.data or error.data.originalError.data (https://github.com/web3/web3.js/issues/4454#issuecomment-1485953455)\n\n    if (typeof error.data === 'object') {\n      let originalError;\n\n      if ('originalError' in error.data) {\n        originalError = error.data.originalError;\n      } else {\n        // Ganache has no `originalError` sub-object unlike others\n        originalError = error.data;\n      }\n\n      this.data = originalError.data;\n      this.innerError = new Eip838ExecutionError(originalError);\n    } else {\n      this.data = error.data;\n    }\n  }\n\n  setDecodedProperties(errorName, errorSignature, errorArgs) {\n    this.errorName = errorName;\n    this.errorSignature = errorSignature;\n    this.errorArgs = errorArgs;\n  }\n\n  toJSON() {\n    let json = Object.assign(Object.assign({}, super.toJSON()), {\n      data: this.data\n    });\n\n    if (this.errorName) {\n      json = Object.assign(Object.assign({}, json), {\n        errorName: this.errorName,\n        errorSignature: this.errorSignature,\n        errorArgs: this.errorArgs\n      });\n    }\n\n    return json;\n  }\n\n}\n/**\n * Used when an error is raised while executing a function inside a smart contract.\n * The data is expected to be encoded according to EIP-848.\n */\n\nexport class ContractExecutionError extends Web3ContractError {\n  constructor(rpcError) {\n    super('Error happened while trying to execute a function inside a smart contract');\n    this.code = ERR_CONTRACT_EXECUTION_REVERTED;\n    this.innerError = new Eip838ExecutionError(rpcError);\n  }\n\n}\nexport class ContractTransactionDataAndInputError extends InvalidValueError {\n  constructor(value) {\n    var _a, _b;\n\n    super(`data: ${(_a = value.data) !== null && _a !== void 0 ? _a : 'undefined'}, input: ${(_b = value.input) !== null && _b !== void 0 ? _b : 'undefined'}`, 'You can\\'t have \"data\" and \"input\" as properties of a contract at the same time, please use either \"data\" or \"input\" instead.');\n    this.code = ERR_CONTRACT_TX_DATA_AND_INPUT;\n  }\n\n}","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAoBA,SACCA,YADD,EAECC,wBAFD,EAGCC,+BAHD,EAICC,6BAJD,EAKCC,0BALD,EAMCC,4BAND,EAOCC,gCAPD,EAQCC,iCARD,EASCC,8BATD,EAUCC,2BAVD,EAWCC,6BAXD,EAYCC,8BAZD,QAaO,mBAbP;AAcA,SAASC,aAAT,EAAwBC,iBAAxB,QAAiD,uBAAjD;AAEA,OAAM,MAAOC,iBAAP,SAAiCF,aAAjC,CAA8C;EAInDG,YAAmBC,OAAnB,EAAoCC,OAApC,EAAgE;IAC/D,MAAMD,OAAN;IAJM,YAAOhB,YAAP;IAMN,KAAKiB,OAAL,GAAeA,OAAf;EACA;;AARkD;AAUpD,OAAM,MAAOC,0BAAP,SAA0CN,aAA1C,CAAuD;EAG5DG,YAA0BI,OAA1B,EAAkDC,IAAlD,EAA8D;IAC7D,MAAM,mBAAmBD,OAAO,0CAA0CC,IAAI,IAA9E;IADyB;IAAwB;IAF3C,YAAOV,6BAAP;EAIN;;EAEMW,MAAM;IACZ,uCAAY,MAAMA,MAAN,EAAZ,GAA0B;MAAEF,OAAO,EAAE,KAAKA,OAAhB;MAAyBC,IAAI,EAAE,KAAKA;IAApC,CAA1B;EACA;;AAT2D;AAY7D,OAAM,MAAOE,uBAAP,SAAuCV,aAAvC,CAAoD;EAGzDG;IACC,MACC,2FADD;IAHM,YAAOd,wBAAP;EAMN;;AAPwD;AAU1D,OAAM,MAAOsB,iCAAP,SAAiDX,aAAjD,CAA8D;EAGnEG;IACC,MAAM,mDAAN;IAHM,YAAOP,8BAAP;EAIN;;AALkE;AAQpE,OAAM,MAAOgB,8BAAP,SAA8CZ,aAA9C,CAA2D;EAGhEG,YAA0BU,SAA1B,EAA2C;IAC1C,MAAM,UAAUA,SAAS,mCAAzB;IADyB;IAFnB,YAAOtB,6BAAP;EAIN;;EAEMkB,MAAM;IACZ,uCAAY,MAAMA,MAAN,EAAZ,GAA0B;MAAEI,SAAS,EAAE,KAAKA;IAAlB,CAA1B;EACA;;AAT+D;AAYjE,OAAM,MAAOC,0BAAP,SAA0Cd,aAA1C,CAAuD;EAG5DG,YAA0BY,IAA1B,EAAsC;IACrC,MAAM,UAAUA,IAAI,mCAApB;IADyB;IAFnB,YAAOlB,2BAAP;EAIN;;EAEMY,MAAM;IACZ,uCAAY,MAAMA,MAAN,EAAZ,GAA0B;MAAEM,IAAI,EAAE,KAAKA;IAAb,CAA1B;EACA;;AAT2D;AAY7D,OAAM,MAAOC,8BAAP,SAA8ChB,aAA9C,CAA2D;EAGhEG;IACC,MAAM,4EAAN;IAHM,YAAOT,gCAAP;EAIN;;AAL+D;AAQjE,OAAM,MAAOuB,6BAAP,SAA6CjB,aAA7C,CAA0D;EAG/DG;IACC,MAAM,iFAAN;IAHM,YAAOV,4BAAP;EAIN;;AAL8D;AAQhE,OAAM,MAAOyB,iCAAP,SAAiDlB,aAAjD,CAA8D;EAGnEG;IACC,MAAM,oFAAN;IAHM,YAAOR,iCAAP;EAIN;;AALkE;AAQpE,OAAM,MAAOwB,0BAAP,SAA0CnB,aAA1C,CAAuD;EAA7DG;;IACQ,YAAOX,0BAAP;EACP;;AAF4D;AAS7D;;;;;AAIA,OAAM,MAAO4B,oBAAP,SAAoClB,iBAApC,CAAqD;EAW1DC,YAAmBkB,KAAnB,EAAgF;IAC/E,MAAMA,KAAK,CAACjB,OAAN,IAAiB,OAAvB;IAEA,KAAKI,IAAL,GAAa,UAAUa,KAAV,IAAmBA,KAAK,CAACb,IAA1B,IAAmC,KAAKL,WAAL,CAAiBK,IAAhE;IACA,KAAKc,KAAL,GAAc,WAAWD,KAAX,IAAoBA,KAAK,CAACC,KAA3B,IAAqCC,SAAlD;IACA,KAAKC,IAAL,GAAYH,KAAK,CAACG,IAAlB,CAL+E,CAO/E;IACA;IACA;IACA;;IACA,IAAI,OAAOH,KAAK,CAACI,IAAb,KAAsB,QAA1B,EAAoC;MACnC,IAAIC,aAAJ;;MACA,IAAI,mBAAmBL,KAAK,CAACI,IAA7B,EAAmC;QAClCC,aAAa,GAAGL,KAAK,CAACI,IAAN,CAAWC,aAA3B;MACA,CAFD,MAEO;QACN;QACAA,aAAa,GAAGL,KAAK,CAACI,IAAtB;MACA;;MACD,KAAKA,IAAL,GAAYC,aAAa,CAACD,IAA1B;MACA,KAAKE,UAAL,GAAkB,IAAIP,oBAAJ,CACjBM,aADiB,CAAlB;IAGA,CAZD,MAYO;MACN,KAAKD,IAAL,GAAYJ,KAAK,CAACI,IAAlB;IACA;EACD;;EAEMG,oBAAoB,CAC1BC,SAD0B,EAE1BC,cAF0B,EAG1BC,SAH0B,EAGY;IAEtC,KAAKF,SAAL,GAAiBA,SAAjB;IACA,KAAKC,cAAL,GAAsBA,cAAtB;IACA,KAAKC,SAAL,GAAiBA,SAAjB;EACA;;EAEMtB,MAAM;IACZ,IAAIuB,IAAI,GAAGC,gCACP,MAAMxB,MAAN,EADO,GACO;MACjBgB,IAAI,EAAE,KAAKA;IADM,CADP,CAAX;;IAcA,IAAI,KAAKI,SAAT,EAAoB;MACnBG,IAAI,mCACAA,IADA,GACI;QACPH,SAAS,EAAE,KAAKA,SADT;QAEPC,cAAc,EAAE,KAAKA,cAFd;QAGPC,SAAS,EAAE,KAAKA;MAHT,CADJ,CAAJ;IAMA;;IACD,OAAOC,IAAP;EACA;;AAzEyD;AA4E3D;;;;;AAIA,OAAM,MAAOE,sBAAP,SAAsChC,iBAAtC,CAAuD;EAG5DC,YAAmBgC,QAAnB,EAAyC;IACxC,MAAM,2EAAN;IACA,KAAKX,IAAL,GAAYlC,+BAAZ;IACA,KAAKqC,UAAL,GAAkB,IAAIP,oBAAJ,CAAyBe,QAAzB,CAAlB;EACA;;AAP2D;AAU7D,OAAM,MAAOC,oCAAP,SAAoDnC,iBAApD,CAAqE;EAG1EE,YAAmBkC,KAAnB,EAAuF;;;IACtF,MACC,SAAS,WAAK,CAACZ,IAAN,MAAU,IAAV,IAAUa,aAAV,GAAUA,EAAV,GAAc,WAAW,YAAY,WAAK,CAACC,KAAN,MAAW,IAAX,IAAWC,aAAX,GAAWA,EAAX,GAAe,WAAW,EADzE,EAEC,+HAFD;IAHM,YAAOzC,8BAAP;EAON;;AARyE","names":["ERR_CONTRACT","ERR_CONTRACT_ABI_MISSING","ERR_CONTRACT_EXECUTION_REVERTED","ERR_CONTRACT_EVENT_NOT_EXISTS","ERR_CONTRACT_INSTANTIATION","ERR_CONTRACT_MISSING_ADDRESS","ERR_CONTRACT_MISSING_DEPLOY_DATA","ERR_CONTRACT_MISSING_FROM_ADDRESS","ERR_CONTRACT_REQUIRED_CALLBACK","ERR_CONTRACT_RESERVED_EVENT","ERR_CONTRACT_RESOLVER_MISSING","ERR_CONTRACT_TX_DATA_AND_INPUT","BaseWeb3Error","InvalidValueError","Web3ContractError","constructor","message","receipt","ResolverMethodMissingError","address","name","toJSON","ContractMissingABIError","ContractOnceRequiresCallbackError","ContractEventDoesNotExistError","eventName","ContractReservedEventError","type","ContractMissingDeployDataError","ContractNoAddressDefinedError","ContractNoFromAddressDefinedError","ContractInstantiationError","Eip838ExecutionError","error","stack","undefined","code","data","originalError","innerError","setDecodedProperties","errorName","errorSignature","errorArgs","json","Object","ContractExecutionError","rpcError","ContractTransactionDataAndInputError","value","_a","input","_b"],"sources":["/home/rupam/Desktop/Faucet-React/node_modules/web3-errors/src/errors/contract_errors.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/* eslint-disable max-classes-per-file */\n\nimport { JsonRpcError, TransactionReceipt, HexString } from 'web3-types';\nimport {\n\tERR_CONTRACT,\n\tERR_CONTRACT_ABI_MISSING,\n\tERR_CONTRACT_EXECUTION_REVERTED,\n\tERR_CONTRACT_EVENT_NOT_EXISTS,\n\tERR_CONTRACT_INSTANTIATION,\n\tERR_CONTRACT_MISSING_ADDRESS,\n\tERR_CONTRACT_MISSING_DEPLOY_DATA,\n\tERR_CONTRACT_MISSING_FROM_ADDRESS,\n\tERR_CONTRACT_REQUIRED_CALLBACK,\n\tERR_CONTRACT_RESERVED_EVENT,\n\tERR_CONTRACT_RESOLVER_MISSING,\n\tERR_CONTRACT_TX_DATA_AND_INPUT,\n} from '../error_codes.js';\nimport { BaseWeb3Error, InvalidValueError } from '../web3_error_base.js';\n\nexport class Web3ContractError extends BaseWeb3Error {\n\tpublic code = ERR_CONTRACT;\n\tpublic receipt?: TransactionReceipt;\n\n\tpublic constructor(message: string, receipt?: TransactionReceipt) {\n\t\tsuper(message);\n\n\t\tthis.receipt = receipt;\n\t}\n}\nexport class ResolverMethodMissingError extends BaseWeb3Error {\n\tpublic code = ERR_CONTRACT_RESOLVER_MISSING;\n\n\tpublic constructor(public address: string, public name: string) {\n\t\tsuper(`The resolver at ${address} does not implement requested method: \"${name}\".`);\n\t}\n\n\tpublic toJSON() {\n\t\treturn { ...super.toJSON(), address: this.address, name: this.name };\n\t}\n}\n\nexport class ContractMissingABIError extends BaseWeb3Error {\n\tpublic code = ERR_CONTRACT_ABI_MISSING;\n\n\tpublic constructor() {\n\t\tsuper(\n\t\t\t'You must provide the json interface of the contract when instantiating a contract object.',\n\t\t);\n\t}\n}\n\nexport class ContractOnceRequiresCallbackError extends BaseWeb3Error {\n\tpublic code = ERR_CONTRACT_REQUIRED_CALLBACK;\n\n\tpublic constructor() {\n\t\tsuper('Once requires a callback as the second parameter.');\n\t}\n}\n\nexport class ContractEventDoesNotExistError extends BaseWeb3Error {\n\tpublic code = ERR_CONTRACT_EVENT_NOT_EXISTS;\n\n\tpublic constructor(public eventName: string) {\n\t\tsuper(`Event \"${eventName}\" doesn't exist in this contract.`);\n\t}\n\n\tpublic toJSON() {\n\t\treturn { ...super.toJSON(), eventName: this.eventName };\n\t}\n}\n\nexport class ContractReservedEventError extends BaseWeb3Error {\n\tpublic code = ERR_CONTRACT_RESERVED_EVENT;\n\n\tpublic constructor(public type: string) {\n\t\tsuper(`Event \"${type}\" doesn't exist in this contract.`);\n\t}\n\n\tpublic toJSON() {\n\t\treturn { ...super.toJSON(), type: this.type };\n\t}\n}\n\nexport class ContractMissingDeployDataError extends BaseWeb3Error {\n\tpublic code = ERR_CONTRACT_MISSING_DEPLOY_DATA;\n\n\tpublic constructor() {\n\t\tsuper(`No \"data\" specified in neither the given options, nor the default options.`);\n\t}\n}\n\nexport class ContractNoAddressDefinedError extends BaseWeb3Error {\n\tpublic code = ERR_CONTRACT_MISSING_ADDRESS;\n\n\tpublic constructor() {\n\t\tsuper(\"This contract object doesn't have address set yet, please set an address first.\");\n\t}\n}\n\nexport class ContractNoFromAddressDefinedError extends BaseWeb3Error {\n\tpublic code = ERR_CONTRACT_MISSING_FROM_ADDRESS;\n\n\tpublic constructor() {\n\t\tsuper('No \"from\" address specified in neither the given options, nor the default options.');\n\t}\n}\n\nexport class ContractInstantiationError extends BaseWeb3Error {\n\tpublic code = ERR_CONTRACT_INSTANTIATION;\n}\n\nexport type ProviderErrorData =\n\t| HexString\n\t| { data: HexString }\n\t| { originalError: { data: HexString } };\n\n/**\n * This class is expected to be set as an `innerError` inside ContractExecutionError\n * The properties would be typically decoded from the `data` if it was encoded according to EIP-838\n */\nexport class Eip838ExecutionError extends Web3ContractError {\n\tpublic readonly name: string;\n\tpublic code: number;\n\tpublic data?: HexString;\n\tpublic errorName?: string;\n\tpublic errorSignature?: string;\n\tpublic errorArgs?: { [K in string]: unknown };\n\n\t// eslint-disable-next-line no-use-before-define\n\tpublic innerError: Eip838ExecutionError | undefined;\n\n\tpublic constructor(error: JsonRpcError<ProviderErrorData> | Eip838ExecutionError) {\n\t\tsuper(error.message || 'Error');\n\n\t\tthis.name = ('name' in error && error.name) || this.constructor.name;\n\t\tthis.stack = ('stack' in error && error.stack) || undefined;\n\t\tthis.code = error.code;\n\n\t\t// get embedded error details got from some providers like MetaMask\n\t\t// and set this.data from the inner error data for easier read.\n\t\t// note: the data is a hex string inside either:\n\t\t//\t error.data, error.data.data or error.data.originalError.data (https://github.com/web3/web3.js/issues/4454#issuecomment-1485953455)\n\t\tif (typeof error.data === 'object') {\n\t\t\tlet originalError: { data: string };\n\t\t\tif ('originalError' in error.data) {\n\t\t\t\toriginalError = error.data.originalError;\n\t\t\t} else {\n\t\t\t\t// Ganache has no `originalError` sub-object unlike others\n\t\t\t\toriginalError = error.data;\n\t\t\t}\n\t\t\tthis.data = originalError.data;\n\t\t\tthis.innerError = new Eip838ExecutionError(\n\t\t\t\toriginalError as JsonRpcError<ProviderErrorData>,\n\t\t\t);\n\t\t} else {\n\t\t\tthis.data = error.data;\n\t\t}\n\t}\n\n\tpublic setDecodedProperties(\n\t\terrorName: string,\n\t\terrorSignature?: string,\n\t\terrorArgs?: { [K in string]: unknown },\n\t) {\n\t\tthis.errorName = errorName;\n\t\tthis.errorSignature = errorSignature;\n\t\tthis.errorArgs = errorArgs;\n\t}\n\n\tpublic toJSON() {\n\t\tlet json = {\n\t\t\t...super.toJSON(),\n\t\t\tdata: this.data,\n\t\t} as {\n\t\t\tname: string;\n\t\t\tcode: number;\n\t\t\tmessage: string;\n\t\t\tinnerError: Error | Error[] | undefined;\n\t\t\tdata: string;\n\t\t\terrorName?: string;\n\t\t\terrorSignature?: string;\n\t\t\terrorArgs?: { [K in string]: unknown };\n\t\t};\n\n\t\tif (this.errorName) {\n\t\t\tjson = {\n\t\t\t\t...json,\n\t\t\t\terrorName: this.errorName,\n\t\t\t\terrorSignature: this.errorSignature,\n\t\t\t\terrorArgs: this.errorArgs,\n\t\t\t};\n\t\t}\n\t\treturn json;\n\t}\n}\n\n/**\n * Used when an error is raised while executing a function inside a smart contract.\n * The data is expected to be encoded according to EIP-848.\n */\nexport class ContractExecutionError extends Web3ContractError {\n\tpublic innerError: Eip838ExecutionError;\n\n\tpublic constructor(rpcError: JsonRpcError) {\n\t\tsuper('Error happened while trying to execute a function inside a smart contract');\n\t\tthis.code = ERR_CONTRACT_EXECUTION_REVERTED;\n\t\tthis.innerError = new Eip838ExecutionError(rpcError as JsonRpcError<ProviderErrorData>);\n\t}\n}\n\nexport class ContractTransactionDataAndInputError extends InvalidValueError {\n\tpublic code = ERR_CONTRACT_TX_DATA_AND_INPUT;\n\n\tpublic constructor(value: { data: HexString | undefined; input: HexString | undefined }) {\n\t\tsuper(\n\t\t\t`data: ${value.data ?? 'undefined'}, input: ${value.input ?? 'undefined'}`,\n\t\t\t'You can\\'t have \"data\" and \"input\" as properties of a contract at the same time, please use either \"data\" or \"input\" instead.',\n\t\t);\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}