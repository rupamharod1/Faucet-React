{"ast":null,"code":"import { scrypt as _sync, scryptAsync as _async } from \"@noble/hashes/scrypt\";\nimport { assertBytes } from \"./utils.js\";\nexport async function scrypt(password, salt, n, p, r, dkLen, onProgress) {\n  assertBytes(password);\n  assertBytes(salt);\n  return _async(password, salt, {\n    N: n,\n    r,\n    p,\n    dkLen,\n    onProgress\n  });\n}\nexport function scryptSync(password, salt, n, p, r, dkLen, onProgress) {\n  assertBytes(password);\n  assertBytes(salt);\n  return _sync(password, salt, {\n    N: n,\n    r,\n    p,\n    dkLen,\n    onProgress\n  });\n}","map":{"version":3,"names":["scrypt","_sync","scryptAsync","_async","assertBytes","password","salt","n","p","r","dkLen","onProgress","N","scryptSync"],"sources":["/home/rupam/Desktop/Faucet-React/node_modules/ethereum-cryptography/esm/scrypt.js"],"sourcesContent":["import { scrypt as _sync, scryptAsync as _async } from \"@noble/hashes/scrypt\";\nimport { assertBytes } from \"./utils.js\";\nexport async function scrypt(password, salt, n, p, r, dkLen, onProgress) {\n    assertBytes(password);\n    assertBytes(salt);\n    return _async(password, salt, { N: n, r, p, dkLen, onProgress });\n}\nexport function scryptSync(password, salt, n, p, r, dkLen, onProgress) {\n    assertBytes(password);\n    assertBytes(salt);\n    return _sync(password, salt, { N: n, r, p, dkLen, onProgress });\n}\n"],"mappings":"AAAA,SAASA,MAAM,IAAIC,KAAnB,EAA0BC,WAAW,IAAIC,MAAzC,QAAuD,sBAAvD;AACA,SAASC,WAAT,QAA4B,YAA5B;AACA,OAAO,eAAeJ,MAAf,CAAsBK,QAAtB,EAAgCC,IAAhC,EAAsCC,CAAtC,EAAyCC,CAAzC,EAA4CC,CAA5C,EAA+CC,KAA/C,EAAsDC,UAAtD,EAAkE;EACrEP,WAAW,CAACC,QAAD,CAAX;EACAD,WAAW,CAACE,IAAD,CAAX;EACA,OAAOH,MAAM,CAACE,QAAD,EAAWC,IAAX,EAAiB;IAAEM,CAAC,EAAEL,CAAL;IAAQE,CAAR;IAAWD,CAAX;IAAcE,KAAd;IAAqBC;EAArB,CAAjB,CAAb;AACH;AACD,OAAO,SAASE,UAAT,CAAoBR,QAApB,EAA8BC,IAA9B,EAAoCC,CAApC,EAAuCC,CAAvC,EAA0CC,CAA1C,EAA6CC,KAA7C,EAAoDC,UAApD,EAAgE;EACnEP,WAAW,CAACC,QAAD,CAAX;EACAD,WAAW,CAACE,IAAD,CAAX;EACA,OAAOL,KAAK,CAACI,QAAD,EAAWC,IAAX,EAAiB;IAAEM,CAAC,EAAEL,CAAL;IAAQE,CAAR;IAAWD,CAAX;IAAcE,KAAd;IAAqBC;EAArB,CAAjB,CAAZ;AACH"},"metadata":{},"sourceType":"module"}