{"ast":null,"code":"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { TypedArray } from 'web3-types';\nimport { isNullish } from 'web3-validator';\n\nconst isIterable = item => typeof item === 'object' && !isNullish(item) && !Array.isArray(item) && !(item instanceof TypedArray); // The following code is a derivative work of the code from the \"LiskHQ/lisk-sdk\" project,\n// which is licensed under Apache version 2.\n\n/**\n * Deep merge two objects.\n * @param destination - The destination object.\n * @param sources - An array of source objects.\n * @returns - The merged object.\n */\n\n\nexport const mergeDeep = function (destination) {\n  const result = destination; // clone deep here\n\n  if (!isIterable(result)) {\n    return result;\n  }\n\n  for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    sources[_key - 1] = arguments[_key];\n  }\n\n  for (const src of sources) {\n    // eslint-disable-next-line no-restricted-syntax\n    for (const key in src) {\n      if (isIterable(src[key])) {\n        if (!result[key]) {\n          result[key] = {};\n        }\n\n        mergeDeep(result[key], src[key]);\n      } else if (!isNullish(src[key]) && Object.hasOwnProperty.call(src, key)) {\n        if (Array.isArray(src[key]) || src[key] instanceof TypedArray) {\n          result[key] = src[key].slice(0);\n        } else {\n          result[key] = src[key];\n        }\n      }\n    }\n  }\n\n  return result;\n};","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAASA,UAAT,QAA2B,YAA3B;AACA,SAASC,SAAT,QAA0B,gBAA1B;;AAEA,MAAMC,UAAU,GAAIC,IAAD,IAClB,OAAOA,IAAP,KAAgB,QAAhB,IACA,CAACF,SAAS,CAACE,IAAD,CADV,IAEA,CAACC,KAAK,CAACC,OAAN,CAAcF,IAAd,CAFD,IAGA,EAAEA,IAAI,YAAYH,UAAlB,CAJD,C,CAMA;AACA;;AACA;;;;;;;;AAMA,OAAO,MAAMM,SAAS,GAAG,UACxBC,WADwB,EAGI;EAC5B,MAAMC,MAAM,GAAGD,WAAf,CAD4B,CACA;;EAC5B,IAAI,CAACL,UAAU,CAACM,MAAD,CAAf,EAAyB;IACxB,OAAOA,MAAP;EACA;;EAJ2B,kCADzBC,OACyB;IADzBA,OACyB;EAAA;;EAK5B,KAAK,MAAMC,GAAX,IAAkBD,OAAlB,EAA2B;IAC1B;IACA,KAAK,MAAME,GAAX,IAAkBD,GAAlB,EAAuB;MACtB,IAAIR,UAAU,CAACQ,GAAG,CAACC,GAAD,CAAJ,CAAd,EAA0B;QACzB,IAAI,CAACH,MAAM,CAACG,GAAD,CAAX,EAAkB;UACjBH,MAAM,CAACG,GAAD,CAAN,GAAc,EAAd;QACA;;QACDL,SAAS,CACRE,MAAM,CAACG,GAAD,CADE,EAERD,GAAG,CAACC,GAAD,CAFK,CAAT;MAIA,CARD,MAQO,IAAI,CAACV,SAAS,CAACS,GAAG,CAACC,GAAD,CAAJ,CAAV,IAAwBC,MAAM,CAACC,cAAP,CAAsBC,IAAtB,CAA2BJ,GAA3B,EAAgCC,GAAhC,CAA5B,EAAkE;QACxE,IAAIP,KAAK,CAACC,OAAN,CAAcK,GAAG,CAACC,GAAD,CAAjB,KAA2BD,GAAG,CAACC,GAAD,CAAH,YAAoBX,UAAnD,EAA+D;UAC9DQ,MAAM,CAACG,GAAD,CAAN,GAAeD,GAAG,CAACC,GAAD,CAAH,CAAuBI,KAAvB,CAA6B,CAA7B,CAAf;QACA,CAFD,MAEO;UACNP,MAAM,CAACG,GAAD,CAAN,GAAcD,GAAG,CAACC,GAAD,CAAjB;QACA;MACD;IACD;EACD;;EACD,OAAOH,MAAP;AACA,CA7BM","names":["TypedArray","isNullish","isIterable","item","Array","isArray","mergeDeep","destination","result","sources","src","key","Object","hasOwnProperty","call","slice"],"sources":["/home/rupam/Desktop/Faucet-React/node_modules/web3-utils/src/objects.ts"],"sourcesContent":["ï»¿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { TypedArray } from 'web3-types';\nimport { isNullish } from 'web3-validator';\n\nconst isIterable = (item: unknown): item is Record<string, unknown> =>\n\ttypeof item === 'object' &&\n\t!isNullish(item) &&\n\t!Array.isArray(item) &&\n\t!(item instanceof TypedArray);\n\n// The following code is a derivative work of the code from the \"LiskHQ/lisk-sdk\" project,\n// which is licensed under Apache version 2.\n/**\n * Deep merge two objects.\n * @param destination - The destination object.\n * @param sources - An array of source objects.\n * @returns - The merged object.\n */\nexport const mergeDeep = (\n\tdestination: Record<string, unknown>,\n\t...sources: Record<string, unknown>[]\n): Record<string, unknown> => {\n\tconst result = destination; // clone deep here\n\tif (!isIterable(result)) {\n\t\treturn result;\n\t}\n\tfor (const src of sources) {\n\t\t// eslint-disable-next-line no-restricted-syntax\n\t\tfor (const key in src) {\n\t\t\tif (isIterable(src[key])) {\n\t\t\t\tif (!result[key]) {\n\t\t\t\t\tresult[key] = {};\n\t\t\t\t}\n\t\t\t\tmergeDeep(\n\t\t\t\t\tresult[key] as Record<string, unknown>,\n\t\t\t\t\tsrc[key] as Record<string, unknown>,\n\t\t\t\t);\n\t\t\t} else if (!isNullish(src[key]) && Object.hasOwnProperty.call(src, key)) {\n\t\t\t\tif (Array.isArray(src[key]) || src[key] instanceof TypedArray) {\n\t\t\t\t\tresult[key] = (src[key] as unknown[]).slice(0);\n\t\t\t\t} else {\n\t\t\t\t\tresult[key] = src[key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n};\n"]},"metadata":{},"sourceType":"module"}