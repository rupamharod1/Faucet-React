{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst address_js_1 = require(\"./validation/address.js\");\n\nconst block_js_1 = require(\"./validation/block.js\");\n\nconst bloom_js_1 = require(\"./validation/bloom.js\");\n\nconst boolean_js_1 = require(\"./validation/boolean.js\");\n\nconst bytes_js_1 = require(\"./validation/bytes.js\");\n\nconst filter_js_1 = require(\"./validation/filter.js\");\n\nconst string_js_1 = require(\"./validation/string.js\");\n\nconst numbers_js_1 = require(\"./validation/numbers.js\");\n\nconst formats = {\n  address: data => (0, address_js_1.isAddress)(data),\n  bloom: data => (0, bloom_js_1.isBloom)(data),\n  blockNumber: data => (0, block_js_1.isBlockNumber)(data),\n  blockTag: data => (0, block_js_1.isBlockTag)(data),\n  blockNumberOrTag: data => (0, block_js_1.isBlockNumberOrTag)(data),\n  bool: data => (0, boolean_js_1.isBoolean)(data),\n  bytes: data => (0, bytes_js_1.isBytes)(data),\n  filter: data => (0, filter_js_1.isFilterObject)(data),\n  hex: data => (0, string_js_1.isHexStrict)(data),\n  uint: data => (0, numbers_js_1.isUInt)(data),\n  int: data => (0, numbers_js_1.isInt)(data),\n  number: data => (0, numbers_js_1.isNumber)(data),\n  string: data => (0, string_js_1.isString)(data)\n}; // generate formats for all numbers types\n\nfor (let bitSize = 8; bitSize <= 256; bitSize += 8) {\n  formats[`int${bitSize}`] = data => (0, numbers_js_1.isInt)(data, {\n    bitSize\n  });\n\n  formats[`uint${bitSize}`] = data => (0, numbers_js_1.isUInt)(data, {\n    bitSize\n  });\n} // generate bytes\n\n\nfor (let size = 1; size <= 32; size += 1) {\n  formats[`bytes${size}`] = data => (0, bytes_js_1.isBytes)(data, {\n    size\n  });\n}\n\nformats.bytes256 = formats.bytes;\nexports.default = formats;","map":{"version":3,"mappings":";;;;;;AAkBA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA,MAAMA,OAAO,GAAkD;EAC9DC,OAAO,EAAGC,IAAD,IAAmB,4BAAUA,IAAV,CADkC;EAE9DC,KAAK,EAAGD,IAAD,IAAmB,wBAAQA,IAAR,CAFoC;EAG9DE,WAAW,EAAGF,IAAD,IAAmB,8BAAcA,IAAd,CAH8B;EAI9DG,QAAQ,EAAGH,IAAD,IAAmB,2BAAWA,IAAX,CAJiC;EAK9DI,gBAAgB,EAAGJ,IAAD,IAAmB,mCAAmBA,IAAnB,CALyB;EAM9DK,IAAI,EAAGL,IAAD,IAAmB,4BAAUA,IAAV,CANqC;EAO9DM,KAAK,EAAGN,IAAD,IAAmB,wBAAQA,IAAR,CAPoC;EAQ9DO,MAAM,EAAGP,IAAD,IAAmB,gCAAeA,IAAf,CARmC;EAS9DQ,GAAG,EAAGR,IAAD,IAAmB,6BAAYA,IAAZ,CATsC;EAU9DS,IAAI,EAAGT,IAAD,IAAmB,yBAAOA,IAAP,CAVqC;EAW9DU,GAAG,EAAGV,IAAD,IAAmB,wBAAMA,IAAN,CAXsC;EAY9DW,MAAM,EAAGX,IAAD,IAAmB,2BAASA,IAAT,CAZmC;EAa9DY,MAAM,EAAGZ,IAAD,IAAmB,0BAASA,IAAT;AAbmC,CAA/D,C,CAeA;;AACA,KAAK,IAAIa,OAAO,GAAG,CAAnB,EAAsBA,OAAO,IAAI,GAAjC,EAAsCA,OAAO,IAAI,CAAjD,EAAoD;EACnDf,OAAO,CAAC,MAAMe,OAAO,EAAd,CAAP,GAA2Bb,IAAI,IAAI,wBAAMA,IAAN,EAA+B;IAAEa;EAAF,CAA/B,CAAnC;;EACAf,OAAO,CAAC,OAAOe,OAAO,EAAf,CAAP,GAA4Bb,IAAI,IAAI,yBAAOA,IAAP,EAAgC;IAAEa;EAAF,CAAhC,CAApC;AACA,C,CACD;;;AACA,KAAK,IAAIC,IAAI,GAAG,CAAhB,EAAmBA,IAAI,IAAI,EAA3B,EAA+BA,IAAI,IAAI,CAAvC,EAA0C;EACzChB,OAAO,CAAC,QAAQgB,IAAI,EAAb,CAAP,GAA0Bd,IAAI,IAC7B,wBAAQA,IAAR,EAAyD;IAAEc;EAAF,CAAzD,CADD;AAEA;;AACDhB,OAAO,CAACiB,QAAR,GAAmBjB,OAAO,CAACQ,KAA3B;AAEAU,kBAAelB,OAAf","names":["formats","address","data","bloom","blockNumber","blockTag","blockNumberOrTag","bool","bytes","filter","hex","uint","int","number","string","bitSize","size","bytes256","exports"],"sources":["/home/rupam/Desktop/Faucet-React/node_modules/web3-validator/src/formats.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { Filter } from 'web3-types';\nimport { ValidInputTypes } from './types.js';\nimport { isAddress } from './validation/address.js';\nimport { isBlockNumber, isBlockNumberOrTag, isBlockTag } from './validation/block.js';\nimport { isBloom } from './validation/bloom.js';\nimport { isBoolean } from './validation/boolean.js';\nimport { isBytes } from './validation/bytes.js';\nimport { isFilterObject } from './validation/filter.js';\nimport { isHexStrict, isString } from './validation/string.js';\nimport { isNumber, isInt, isUInt } from './validation/numbers.js';\n\nconst formats: { [key: string]: (data: unknown) => boolean } = {\n\taddress: (data: unknown) => isAddress(data as ValidInputTypes),\n\tbloom: (data: unknown) => isBloom(data as ValidInputTypes),\n\tblockNumber: (data: unknown) => isBlockNumber(data as string | number | bigint),\n\tblockTag: (data: unknown) => isBlockTag(data as string),\n\tblockNumberOrTag: (data: unknown) => isBlockNumberOrTag(data as string | number | bigint),\n\tbool: (data: unknown) => isBoolean(data as ValidInputTypes),\n\tbytes: (data: unknown) => isBytes(data as ValidInputTypes | Uint8Array | number[]),\n\tfilter: (data: unknown) => isFilterObject(data as Filter),\n\thex: (data: unknown) => isHexStrict(data as ValidInputTypes),\n\tuint: (data: unknown) => isUInt(data as ValidInputTypes),\n\tint: (data: unknown) => isInt(data as ValidInputTypes),\n\tnumber: (data: unknown) => isNumber(data as ValidInputTypes),\n\tstring: (data: unknown) => isString(data as ValidInputTypes),\n};\n// generate formats for all numbers types\nfor (let bitSize = 8; bitSize <= 256; bitSize += 8) {\n\tformats[`int${bitSize}`] = data => isInt(data as ValidInputTypes, { bitSize });\n\tformats[`uint${bitSize}`] = data => isUInt(data as ValidInputTypes, { bitSize });\n}\n// generate bytes\nfor (let size = 1; size <= 32; size += 1) {\n\tformats[`bytes${size}`] = data =>\n\t\tisBytes(data as ValidInputTypes | Uint8Array | number[], { size });\n}\nformats.bytes256 = formats.bytes;\n\nexport default formats;\n"]},"metadata":{},"sourceType":"script"}